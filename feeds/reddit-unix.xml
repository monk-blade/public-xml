<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><atom:link href="http://192.168.1.132/?platform=reddit&amp;subreddit=unix&amp;averagePostsPerDay=5&amp;content&amp;comments=3&amp;filterPinnedComments&amp;filterOldPosts=3&amp;view=rss" rel="self" type="application/rss+xml"/><title>/r/unix</title><description>Hot posts in /r/unix (roughly 5 posts per day)</description><link>https://www.reddit.com/r/unix/</link><language>en-us</language><lastBuildDate>Thu, 18 Sep 2025 17:28:04 +0000</lastBuildDate><generator>Upvote RSS</generator><image><url>https://www.redditstatic.com/mweb2x/favicon/76x76.png</url><title>/r/unix</title><link>https://www.reddit.com/r/unix/</link></image><item><link>https://i.imgur.com/wvCK4m3.jpeg</link><title>[Pizza Week] UNIX Variety Pack (i.imgur.com)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1njamtx/pizza_week_unix_variety_pack/</guid><comments>https://www.reddit.com/r/unix/comments/1njamtx/pizza_week_unix_variety_pack/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p><a href='https://www.reddit.com/r/unix/comments/1njamtx/pizza_week_unix_variety_pack/'>Post permalink</a></p></section><section class='preview-image'><img src='https://i.imgur.com/wvCK4m3.jpeg' /></section><section class='separator separator-before-comments'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='comments'><p>Top comments</p><ol><li><div class="md"><p>i always wanted a sun workstation but they got eaten before i had enough money to buy one.</p></div><p><a href='https://www.reddit.com/r/unix/comments/1njamtx/pizza_week_unix_variety_pack/neoskdm/'><small>Comment permalink</small></a></p><p>&nbsp;</p></li><li><div class="md"><p>This is a direct rip off of my post to <a href="https://www.reddit.com/r/retrobattlestations">r/retrobattlestations</a> 5 years ago.</p><p><a href="https://www.reddit.com/r/retrobattlestations/s/r8GhaBjgSj">https://www.reddit.com/r/retrobattlestations/s/r8GhaBjgSj</a></p></div><p><a href='https://www.reddit.com/r/unix/comments/1njamtx/pizza_week_unix_variety_pack/neoz8ff/'><small>Comment permalink</small></a></p><p>&nbsp;</p></li><li><div class="md"><p>Nice setups.  A few years back I did NeXTstep on a SparcStation Voyager with the color screen.</p></div><p><a href='https://www.reddit.com/r/unix/comments/1njamtx/pizza_week_unix_variety_pack/neouq6r/'><small>Comment permalink</small></a></p></li></ol></section>]]></description><pubDate>Wed, 17 Sep 2025 17:04:19 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1nipivu/was_programming_easier_and_more_simple_in_the_past/</link><title>Was programming easier and more simple in the past?</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1nipivu/was_programming_easier_and_more_simple_in_the_past/</guid><comments>https://www.reddit.com/r/unix/comments/1nipivu/was_programming_easier_and_more_simple_in_the_past/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 3 min | <a href='https://www.reddit.com/r/unix/comments/1nipivu/was_programming_easier_and_more_simple_in_the_past/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>Hello!<br/>For context, I am a 22 years old who&#39;s working in web development. My perception is that old stuff had a better quality, generally speaking. I could be wrong but I think that also applies to software. I started programming in high school with C++ and from there I switched to higher level programming languages like Python, Lua or Java. I can&#39;t say that I am an expert but I feel like old code followed much simpler patterns that made it more readable. </p><p>Today, I am asked to know like dozens of different frameworks that, in my opinion, do more harm than good. For instance, I don&#39;t understand why a simple news website can&#39;t be built using only plain HTML and CSS? Why does it need JavaScript? All that bloat is in the end taxing the performance of the device the end user owns. And even so, the majority of dynamic websites could be built entirely in HTML and CSS with parts using basic JavaScript for real time data or updates (these are called widgets). But in reality, the majority of websites are built with frameworks like React and Angular that add a lot of overhead and makes, in my opinion, the development much more complex than it should be.</p><p>What I find worse is that even desktop applications are literally dead - nobody makes GUI applications in native code anymore. Instead, they build all these apps in JavaScript, emulating a browser engine behind the scenes. If it were not for that, I am sure that 8GB RAM would&#39;ve remained the norm much longer than it has for a desktop system. The pretext is that they are cross platform but in reality you still have to rewrite the style for each type of screen available out there.</p><p>I totally agree that software has evolved but to me it kind of seems it just stopped in 2015. Since then, we keep upgrading our hardware but the software evolution is minimal. Social media apps are the same as they were 10 years ago, 3D rendering capabilities didn&#39;t evolve dramatically and Microsoft Word can barely run good on a new laptop with i7 CPU and it&#39;s a text editor! The jump from 1990-2010 was magic and entartaining to watch whilst the jump from 2015-2025 is boring, predictable and just worsens with aritifically induced complexity added to everything.</p><p>I was reading the source code of Grand Theft Auto III which was written in C++ and the code there made a lot of sense. Sure, much boilerplate but necessary for clarity and to satisfy the language&#39;s needs. Today if I open a project from the internet I can barely understand what is going on. What is &quot;var T_q&quot; supposed to mean? I don&#39;t get it. I know that programming becoming more mainstream caused some drops in code quality, but a company never asks me how well I plan the architecture of my code, they only want to see how I made a CRUD app in 10 different stacks.</p><p>Everyone puts pressure on new patterns and paradigms and modularity but all this modularity is taught bad. It&#39;s so hard to have pure modularity in a closed system that, in my opinion, it&#39;s not worth it. That closed system should be modular in itself to other systems if that makes sense. The overusage of observer pattern or lots of weird magic functions and abstractions are hiding the code flow and makes debugging harder compared to simple more robust patterns like the finite state machine which is mainy procedurally written code.</p><p>I think I wrote a lot haha. What do you think?<br/>Have a nice day!</p></div><!-- SC_ON --></section><section class='separator separator-before-comments'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='comments'><p>Top comments</p><ol><li><div class="md"><p>... What I find worse is that even desktop applications are literally dead - nobody makes GUI applications in native code anymore. Instead, they build all these apps in JavaScript, emulating a browser engine behind the scenes...</p><p>Please do not make bold assumptions based on your limited exposure. For instance, we are developing two separate commercial desktop applications entirely in Qt Widgets (please do not confuse with Qt Quick, which is horror story on its own).</p><p>I understand what you are implying, and it is mostly true. Difference between past and today is (I guess) processor power. Since today we have powerful processors, nobody gives a dime to application performance, and (probably) most people thinks they are  better programmers if they use framework X instead of pure solution.</p></div><p><a href='https://www.reddit.com/r/unix/comments/1nipivu/was_programming_easier_and_more_simple_in_the_past/nekk6la/'><small>Comment permalink</small></a></p><p>&nbsp;</p></li><li><div class="md"><p><a href="https://bestmotherfucking.website">https://bestmotherfucking.website</a></p></div><p><a href='https://www.reddit.com/r/unix/comments/1nipivu/was_programming_easier_and_more_simple_in_the_past/nekz2cu/'><small>Comment permalink</small></a></p><p>&nbsp;</p></li><li><div class="md"><p>I am the author of many suntool utilities packaged with Solaris.  Yes, it was a long time ago.  That work was mostly in Tk.  Before Tk, I wrote a lot of X11 and motif.  I spent my workday in emacs and gdb.  It was not so easy but I enjoyed it.</p></div><p><a href='https://www.reddit.com/r/unix/comments/1nipivu/was_programming_easier_and_more_simple_in_the_past/nel0k9e/'><small>Comment permalink</small></a></p></li></ol></section>]]></description><pubDate>Tue, 16 Sep 2025 23:56:52 +0530</pubDate></item></channel></rss>
