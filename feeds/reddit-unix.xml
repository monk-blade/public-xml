<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><atom:link href="http://192.168.1.132/?platform=reddit&amp;subreddit=unix&amp;averagePostsPerDay=3&amp;content&amp;view=rss" rel="self" type="application/rss+xml"/><title>/r/unix</title><description>Hot posts in /r/unix (roughly 3 posts per day)</description><link>https://www.reddit.com/r/unix/</link><language>en-us</language><lastBuildDate>Thu, 11 Sep 2025 12:41:25 +0000</lastBuildDate><generator>Upvote RSS</generator><image><url>https://www.redditstatic.com/mweb2x/favicon/76x76.png</url><title>/r/unix</title><link>https://www.reddit.com/r/unix/</link></image><item><link>https://i.redd.it/jt4nh7dsp4of1.png</link><title>Happy Birthday to the legend! (i.redd.it)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1ncgyh2/happy_birthday_to_the_legend/</guid><comments>https://www.reddit.com/r/unix/comments/1ncgyh2/happy_birthday_to_the_legend/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p><a href='https://www.reddit.com/r/unix/comments/1ncgyh2/happy_birthday_to_the_legend/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>Remembering a Legend üôå</p><p>üìú His contributions shaped the foundations of modern computing and inspired generations of developers. üñ•Ô∏è‚ù§Ô∏è</p></div><!-- SC_ON --></section><section class='preview-image'><p>&nbsp;</p><img src='https://i.redd.it/jt4nh7dsp4of1.png' /></section>]]></description><pubDate>Tue, 09 Sep 2025 17:31:17 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1n90mcy/are_linux_andor_minix_closer_to_systemvderived/</link><title>Are linux and/or minix closer to SystemV-derived systems or BSD-derived systems or somewhere in the middle?</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1n90mcy/are_linux_andor_minix_closer_to_systemvderived/</guid><comments>https://www.reddit.com/r/unix/comments/1n90mcy/are_linux_andor_minix_closer_to_systemvderived/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 2 min | <a href='https://www.reddit.com/r/unix/comments/1n90mcy/are_linux_andor_minix_closer_to_systemvderived/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>Apologies if this question is a bit dumb but I&#39;ve been unable to find a concrete answer and I don&#39;t trust AI to be factual, is Linux more similar to SysV-derived UNICES or BSD-derived ones? For me, as someone who has primarily used linux over the last 6 or so years, BSD feels much more similar the times I&#39;ve used it (though not identical) whereas the only (to my knowledge) SysV-derivative I&#39;ve tried was OpenIndiana, which felt just  a bit off for me for whatever reason. </p><p>Are the BSD-Linux similarities simply in Userland (I&#39;ve read the GNU software was greatly influenced by BSD? and even something about Mach originally meant to replace the BSD kernel(s)?) or are they architecturally more similar to each other than to SysV?   </p><p>Is Linux just somewhere in between the two? Is it wrong to compare the three in their modern day rather than say, how they were during the Unix Wars? Thanks!  </p><p>While I&#39;m here, are there any good book recommendations to get a good understanding of vintage UNIX (SVR4 and whatever BSD was at the time and prior, especially about like &#39;Research UNIX&#39;?)? I&#39;ve been told to buy that one really pirated book and read the source code directly, but I&#39;m no coder.  </p></div><!-- SC_ON --></section>]]></description><pubDate>Fri, 05 Sep 2025 15:00:52 +0530</pubDate></item><item><link>https://www.youtube.com/watch?v=-5y8m4d5b7c</link><title>Debian GNU/Hurd 2025 how to install and use tutorial (youtube.com)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1n7dmx6/debian_gnuhurd_2025_how_to_install_and_use/</guid><comments>https://www.reddit.com/r/unix/comments/1n7dmx6/debian_gnuhurd_2025_how_to_install_and_use/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p><a href='https://www.reddit.com/r/unix/comments/1n7dmx6/debian_gnuhurd_2025_how_to_install_and_use/'>Post permalink</a></p></section><section class='embedded-media'><iframe width="356" height="200" src="https://www.youtube.com/embed/-5y8m4d5b7c?feature=oembed&enablejsapi=1" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen title="Debian GNU/Hurd 2025 how to install and use tutorial - August 2025 - 87b9790c"></iframe></section>]]></description><pubDate>Wed, 03 Sep 2025 18:07:05 +0530</pubDate></item><item><link>https://i.imgur.com/j9INH7J.png</link><title>Two of the best programmers ever graced the field of computing. (i.imgur.com)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1n65gba/two_of_the_best_programmers_ever_graced_the_field/</guid><comments>https://www.reddit.com/r/unix/comments/1n65gba/two_of_the_best_programmers_ever_graced_the_field/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p><a href='https://www.reddit.com/r/unix/comments/1n65gba/two_of_the_best_programmers_ever_graced_the_field/'>Post permalink</a></p></section><section class='preview-image'><img src='https://i.imgur.com/j9INH7J.png' /></section>]]></description><pubDate>Tue, 02 Sep 2025 06:01:53 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1n5yuxa/unix_cocreator_brian_kernighan_on_rust_distros/</link><title>Unix Co-Creator Brian Kernighan on Rust, Distros and NixOS</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1n5yuxa/unix_cocreator_brian_kernighan_on_rust_distros/</guid><comments>https://www.reddit.com/r/unix/comments/1n5yuxa/unix_cocreator_brian_kernighan_on_rust_distros/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1n5yuxa/unix_cocreator_brian_kernighan_on_rust_distros/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>Kernighan shared his thoughts on what he thinks of the world today ‚Äî with its push away from C to more memory-safe programming languages, its hundreds of distributions of Linux ‚Äî and with descendants of Unix powering nearly every cellphone.</p><p><a href="https://thenewstack.io/unix-co-creator-brian-kernighan-on-rust-distros-and-nixos/">https://thenewstack.io/unix-co-creator-brian-kernighan-on-rust-distros-and-nixos/</a></p></div><!-- SC_ON --></section>]]></description><pubDate>Tue, 02 Sep 2025 01:22:07 +0530</pubDate></item><item><link>https://i.redd.it/8bjc7cjpjjmf1.jpeg</link><title>Twix is now selling single bar packs. (i.redd.it)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1n5r8yr/twix_is_now_selling_single_bar_packs/</guid><comments>https://www.reddit.com/r/unix/comments/1n5r8yr/twix_is_now_selling_single_bar_packs/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p><a href='https://www.reddit.com/r/unix/comments/1n5r8yr/twix_is_now_selling_single_bar_packs/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>Isn&#39;t twix short for twin sticks?</p></div><!-- SC_ON --></section><section class='preview-image'><p>&nbsp;</p><img src='https://i.redd.it/8bjc7cjpjjmf1.jpeg' /></section>]]></description><pubDate>Mon, 01 Sep 2025 20:39:08 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1n5050e/is_the_unix_philosophy_dead_or_just_sleeping/</link><title>Is the Unix philosophy dead or just sleeping?</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1n5050e/is_the_unix_philosophy_dead_or_just_sleeping/</guid><comments>https://www.reddit.com/r/unix/comments/1n5050e/is_the_unix_philosophy_dead_or_just_sleeping/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1n5050e/is_the_unix_philosophy_dead_or_just_sleeping/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>Been writing C since the 80s. Cut my teeth on Version 7. Watching modern software development makes me wonder what happened to &quot;do one thing and do it well.&quot;</p><p>Today&#39;s tools are bloated Swiss Army knives. A text editor that&#39;s also a web browser, mail client, and IRC client. Command line tools that need 500MB of dependencies. Programs that won&#39;t even start without a config file the size of War and Peace.</p><p>Remember when you could read the entire source of a Unix utility in an afternoon? When pipes actually meant something? When text streams were all you needed?</p><p>I still write tools that way. But I feel like a dinosaur.</p><p>How many of you still follow the old ways? Or am I just yelling at clouds here?</p><p>(And don&#39;t tell me about Plan 9. I know about Plan 9.)</p></div><!-- SC_ON --></section>]]></description><pubDate>Sun, 31 Aug 2025 22:38:04 +0530</pubDate></item><item><link>https://www.reddit.com/r/linuxquestions/comments/1n4fa4s/different_times_from_strace_in_two_of_my_servers/</link><title>Different times from strace in two of my servers</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1n4ikhz/different_times_from_strace_in_two_of_my_servers/</guid><comments>https://www.reddit.com/r/unix/comments/1n4ikhz/different_times_from_strace_in_two_of_my_servers/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 2 min | <a href='https://www.reddit.com/r/unix/comments/1n4ikhz/different_times_from_strace_in_two_of_my_servers/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>When I run <code>strace -c</code> on the back and middle tiers of my code generator, the same system calls are 3 to 5 times slower in the middle tier than in the back tier.  The <a href="https://github.com/Ebenezer-group/onwards/blob/master/src/tiers/cmwA.cc">middle tier</a> is open source, but the back tier isn&#39;t.  <code>io_uring_enter</code> and <code>openat</code> are both about 5 times slower.  Other calls are around 3 times slower.  </p><p>The back tier starts with elevated privileges but reduces that quickly.  Both of the servers are running on the same system.  I haven&#39;t done anything to try to get more priority for either of the servers.  htop shows they both have a &quot;pri&quot; value of 20 and &quot;ni&quot; value of 0.  Any idea on why there&#39;s a difference like this?   Thanks in advance.</p></div><!-- SC_ON --></section><section class='separator separator-after-selftext'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='parsed-content'><div><p>When I run <code>strace -c</code> on the back and middle tiers of my code generator, the same system calls are 3 to 5 times slower in the middle tier than in the back tier. The <a href="https://github.com/Ebenezer-group/onwards/blob/master/src/tiers/cmwA.cc">middle tier</a> is open source, but the back tier isn't. <code>io_uring_enter</code> and <code>openat</code> are both about 5 times slower. Other calls are around 3 times slower. </p><p>The back tier starts with elevated privileges but reduces that quickly. Both of the servers are running on the same system. I haven't done anything to try to get more priority for either of the servers. htop shows they both have a "pri" value of 20 and "ni" value of 0. Any idea on why there's a difference like this? Thanks in advance. </p></div></section>]]></description><pubDate>Sun, 31 Aug 2025 07:18:49 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1n0x8yh/i_created_an_online_configurator_for_bash/</link><title>I created an online configurator for Bash!</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1n0x8yh/i_created_an_online_configurator_for_bash/</guid><comments>https://www.reddit.com/r/unix/comments/1n0x8yh/i_created_an_online_configurator_for_bash/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1n0x8yh/i_created_an_online_configurator_for_bash/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>Have you ever wondered how much you can ‚Äúsqueeze‚Äù out of Bash? I have. I present an opinionated Bash configuration, whose colors can be dynamically configured in a web interface with a preview (with unix porn lovers in mind).</p><p><a href="https://preview.redd.it/io58rhkrcflf1.png?width=980&amp;format=png&amp;auto=webp&amp;s=6efe0f97c3dda56f60d9de12cdc2b99528c3558c">https://preview.redd.it/io58rhkrcflf1.png?width=980&amp;format=png&amp;auto=webp&amp;s=6efe0f97c3dda56f60d9de12cdc2b99528c3558c</a></p><p>The configuration includes features such as:</p><ul><li>Git information if the current folder is a repository.</li><li>History search using arrows.</li><li>Number of background processes.</li><li>Visual separation of executed commands.</li><li>Exit code.</li><li>Date and time.</li><li>Unique host emblem.</li></ul><p>Since I use it all the time myself, I thought someone else might like it too. So I&#39;m making it more widely available, enjoy! <a href="https://github.com/czoczo/BetterBash"><strong>https://github.com/czoczo/BetterBash</strong></a></p><p>If you like the project, you may consider giving a üåü on GitHub to show your support.</p></div><!-- SC_ON --></section>]]></description><pubDate>Wed, 27 Aug 2025 02:10:30 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1mz9xbo/modern_replacements_akin_to_initng/</link><title>Modern replacements akin to initng?</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1mz9xbo/modern_replacements_akin_to_initng/</guid><comments>https://www.reddit.com/r/unix/comments/1mz9xbo/modern_replacements_akin_to_initng/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1mz9xbo/modern_replacements_akin_to_initng/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>Hi all! I&#39;ve been a linux user for about 6 years, and a mac user for about 2. At the beginning of my journey I had no issue with systemd due to being unaware of the feature-creep and nuisance, but recently it has began to bug me. I&#39;ve tried a few various solutions, Dinit, Runit, OpenRC, and all are certainly nice, but I&#39;d prefer something more along the lines of initng, which to my knowledge no longer exists. Are there any good ones? I&#39;ve not tried s6 yet which I see recommended sometimes, how is it? </p><p>I&#39;m considering trying GNU&#39;s Shepherd, I&#39;ve also seen the Nitro init system but have yet to figure out installation/configuration. I think suckless&#39;s sinit is quite minimal but I&#39;ve yet to try it either. </p><p>While I&#39;m here, what are y&#39;alls favourite GNULess unices and/or linux distros? Alpine and FreeBSD are the two I like most generally :)</p></div><!-- SC_ON --></section>]]></description><pubDate>Mon, 25 Aug 2025 04:15:10 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1mxtq8t/if_i_already_know_linux_can_i_work_with_unix/</link><title>If I already know Linux, can I work with unix?</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1mxtq8t/if_i_already_know_linux_can_i_work_with_unix/</guid><comments>https://www.reddit.com/r/unix/comments/1mxtq8t/if_i_already_know_linux_can_i_work_with_unix/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1mxtq8t/if_i_already_know_linux_can_i_work_with_unix/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>I know that Unix is the predecessor of Linux. I&#39;ve been learning and practicing Linux for a while, and I applied for a Unix System Administrator Jr. position. I‚Äôve heard they are almost the same, but I‚Äôm just wondering how different they really are. Is my Linux knowledge enough, or do I need to learn Unix as well?</p></div><!-- SC_ON --></section>]]></description><pubDate>Sat, 23 Aug 2025 11:39:00 +0530</pubDate></item><item><link>https://i.redd.it/tg5j5iq0awjf1.png</link><title>AIX quick-start on IBM Cloud using Terraform (i.redd.it)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1mu7gyh/aix_quickstart_on_ibm_cloud_using_terraform/</guid><comments>https://www.reddit.com/r/unix/comments/1mu7gyh/aix_quickstart_on_ibm_cloud_using_terraform/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1mu7gyh/aix_quickstart_on_ibm_cloud_using_terraform/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>I&#39;ve been interested in AIX ever since I first heard about it whispered in hushed tones by fellow Linux sysadmins. But because it is exclusively available for Power architecture is especially hard to get your hands on. Buying secondhand physical servers is always a dodgy proposition (and expensive!) and IBM Cloud (or any cloud provider) has its own learning curve. What I always longed for but never found was a way to quickly provision all the infrastructure necessary for a basic AIX box at minimal cost. I believe I achieved that with <a href="https://github.com/jasper-zanjani/aix-tf">this Terraform config</a>.</p><p>This is just about as close to a push-button deployment as I could make it. Keep in mind you will need to:</p><ol><li>Sign up for IBM Cloud (and cough up a credit card!)</li><li>Create an API key</li><li>Provide a public SSH key and other details in the terraform.tfvars file</li></ol><p>I am sure someone in this subreddit will use it as much as I plan to.</p></div><!-- SC_ON --></section><section class='preview-image'><p>&nbsp;</p><img src='https://i.redd.it/tg5j5iq0awjf1.png' /></section>]]></description><pubDate>Tue, 19 Aug 2025 08:58:24 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1mtf3ux/can_i_install_unix_as_a_vm_on_my_ubuntu_24_lts_if/</link><title>Can I install UNIX as a VM on my Ubuntu 24 LTS? If so, then, which UNIX and where to get installation. I am interested in UNIX-like UNIX, not Linux-like UNIX. I am fine in doing it in a hard way, bare minimum UNIX.</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1mtf3ux/can_i_install_unix_as_a_vm_on_my_ubuntu_24_lts_if/</guid><comments>https://www.reddit.com/r/unix/comments/1mtf3ux/can_i_install_unix_as_a_vm_on_my_ubuntu_24_lts_if/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p><a href='https://www.reddit.com/r/unix/comments/1mtf3ux/can_i_install_unix_as_a_vm_on_my_ubuntu_24_lts_if/'>Post permalink</a></p></section>]]></description><pubDate>Mon, 18 Aug 2025 12:45:16 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1mt566l/recommended_external_storage_disks_for_openzfs/</link><title>Recommended External Storage Disks for OpenZFS</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1mt566l/recommended_external_storage_disks_for_openzfs/</guid><comments>https://www.reddit.com/r/unix/comments/1mt566l/recommended_external_storage_disks_for_openzfs/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1mt566l/recommended_external_storage_disks_for_openzfs/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>I am buying an external SSD of about 2TB, USB-C. Is there any manufacturer/vendor popular among zfs users? Over the years I had been lucky with most disks except one fail on me (I had been using variety of FSs).</p><p>This new disk is gonna be pure ZFS(a single zfs pool) with the purpose of storing data (no RAID, no mirroring, nothing, just an FS to occasionally move data/media from my Unix machine to the disk). Occasionally, there might be lot of filesystem operations running on this disk.</p><p>(cross-posting here from <a href="https://www.reddit.com/r/openzfs">/r/openzfs</a>, noticed that sub is small)</p></div><!-- SC_ON --></section>]]></description><pubDate>Mon, 18 Aug 2025 04:20:45 +0530</pubDate></item><item><link>https://www.youtube.com/watch?v=WEb_YL1K1Qg</link><title>UNIX: A History and a Memoir by Brian Kernighan (youtube.com)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1mt4j30/unix_a_history_and_a_memoir_by_brian_kernighan/</guid><comments>https://www.reddit.com/r/unix/comments/1mt4j30/unix_a_history_and_a_memoir_by_brian_kernighan/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1mt4j30/unix_a_history_and_a_memoir_by_brian_kernighan/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>Hi fellow Unix-ers.</p><p>I came across this nice speech/presentation by Brian Kernighan -- history of Unix. Some interesting insights, and just interesting to listen to. </p></div><!-- SC_ON --></section><section class='embedded-media'><iframe width="356" height="200" src="https://www.youtube.com/embed/WEb_YL1K1Qg?feature=oembed&enablejsapi=1" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen title="UNIX: A History and a Memoir by Brian Kernighan"></iframe></section>]]></description><pubDate>Mon, 18 Aug 2025 03:53:16 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1msatsl/filesystem_that_both_unix_and_linux_can_read/</link><title>Filesystem that both Unix and Linux can read</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1msatsl/filesystem_that_both_unix_and_linux_can_read/</guid><comments>https://www.reddit.com/r/unix/comments/1msatsl/filesystem_that_both_unix_and_linux_can_read/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1msatsl/filesystem_that_both_unix_and_linux_can_read/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>I am looking to keep one of my GPT Partitions on my disk to be a file system that both Illumos (Solaris) and Linux can read. This will be primarily to store data. I know there&#39;s vfat (exfat, fat32). Wanna know if there&#39;s anything better (non-MSFTish) out there.</p><p>zfs versions are probably not compatible between Solaris and Linux.</p><p>edit: I take that back. Due to backward compatibility zfs is very much practical option here.</p><p>And for ZFS, I took the suggestion to create the zfs pool using illumos. And then I was able to access it from Illumos based OSs + BSD + Linux!! So this has been great discovery for me. Thanks to folks who suggested.</p></div><!-- SC_ON --></section>]]></description><pubDate>Sun, 17 Aug 2025 04:36:17 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1mqpprm/what_would_it_take_take_make_a_fully_functioning/</link><title>What would it take take make a fully functioning operating system out of the PureDarwin kernel?</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1mqpprm/what_would_it_take_take_make_a_fully_functioning/</guid><comments>https://www.reddit.com/r/unix/comments/1mqpprm/what_would_it_take_take_make_a_fully_functioning/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1mqpprm/what_would_it_take_take_make_a_fully_functioning/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>As stated above, through a combination of the want to learn more about operating systems and a deep self-hatred, i wish to create an operating system out of PureDarwin&#39;s most recent kernel. I&#39;m coming into this as a Linux user with a minimal understanding of what it takes to build an operating system so i would like to know what parts i need to build other than the kernel. The other thing i want to know is if it will be at all possible to set something up to use Linux packages on the system as Darwin is BSD based and there are such capabilities on a BSD system. Thanks for your time and wish me luck.</p></div><!-- SC_ON --></section>]]></description><pubDate>Fri, 15 Aug 2025 12:02:16 +0530</pubDate></item><item><link>https://i.redd.it/hgaox4fzpxif1.png</link><title>Saved these from going to trash (i.redd.it)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1mpthuu/saved_these_from_going_to_trash/</guid><comments>https://www.reddit.com/r/unix/comments/1mpthuu/saved_these_from_going_to_trash/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1mpthuu/saved_these_from_going_to_trash/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>Yesterday I found my PhD advisor organizing her books at her office and in the pile to be thrown away I found these two</p></div><!-- SC_ON --></section><section class='preview-image'><p>&nbsp;</p><img src='https://i.redd.it/hgaox4fzpxif1.png' /></section>]]></description><pubDate>Thu, 14 Aug 2025 12:39:14 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1mphbva/unix_users_group_ten_commandments/</link><title>Unix Users Group Ten Commandments</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1mphbva/unix_users_group_ten_commandments/</guid><comments>https://www.reddit.com/r/unix/comments/1mphbva/unix_users_group_ten_commandments/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 2 min | <a href='https://www.reddit.com/r/unix/comments/1mphbva/unix_users_group_ten_commandments/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><blockquote><p>And lo did Unix speak these words upon the reboot:</p><p>Thou shalt use no other operating system than Unix.</p><p>Thou shalt not make unto thee a false operating system. Thou shalt not program them for I am the Unix and a jealous O/S.</p><p>Thou shalt not take the mark of trade of Unix in vain, or thou shalt be sued.</p><p>Remember thy password, and keep it secret.</p><p>Honour thy parent shell, for if it should die, thou shalt not live long (unless thou hast dissociated thyself).</p><p>Thou shalt not kill (I)-9 any process, for surely they shalt becometh zombies or defunct.</p><p>Thou shalt not commit hacking, else thou shalt eat quiche.</p><p>Thou shalt not use other users&#39; data, for thou shalt be referred to the Data Protection Act, 1984, and sued (again).</p><p>Thou shalt not create Trojan horses, worms, viruses, or other foul beasts of false programming.</p><p>Thou shalt not rm -rf thy neighbor&#39;s home, nor covet his disk space allocation, nor his workstation account.</p></blockquote><p>I&#39;m wondering if anyone has any details on the origin of this. Someone posted a very low-res screenshot version of this to <a href="https://www.reddit.com/r/LinuxCirclejerk">r/LinuxCirclejerk</a>, and I found the source of the screenshot in an a textbook named &quot;Morality and Law,&quot; where it appears to be cited as an example of a morality system.</p><p>That text book in turn cites &quot;The Unix Ten Commandments.‚Äù from <a href="http://www.pipex.net/people/jasonh/command.html">http://www.pipex.net/people/jasonh/command.html</a> as its source, but Pipex is a UK-based ISP that went defunct in 2008. I&#39;m assuming &quot;jasonh&quot; is the original author, and they used Pipex to host a personal website where this was written, but I don&#39;t know how to keep going down the rabbit hole from here.</p></div><!-- SC_ON --></section>]]></description><pubDate>Thu, 14 Aug 2025 03:02:12 +0530</pubDate></item><item><link>https://i.redd.it/cftzyc5g8wgf1.png</link><title>A bit old, but still fun :) (I am aware this could be made into a joke, please don't 3:) (i.redd.it)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1mgyn65/a_bit_old_but_still_fun_i_am_aware_this_could_be/</guid><comments>https://www.reddit.com/r/unix/comments/1mgyn65/a_bit_old_but_still_fun_i_am_aware_this_could_be/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p><a href='https://www.reddit.com/r/unix/comments/1mgyn65/a_bit_old_but_still_fun_i_am_aware_this_could_be/'>Post permalink</a></p></section><section class='preview-image'><img src='https://i.redd.it/cftzyc5g8wgf1.png' /></section>]]></description><pubDate>Mon, 04 Aug 2025 05:32:31 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1mgbmny/weenix/</link><title>Weenix</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1mgbmny/weenix/</guid><comments>https://www.reddit.com/r/unix/comments/1mgbmny/weenix/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1mgbmny/weenix/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>I‚Äôm working on weenix. How long would you anticipate a really talented engineer would take to implement virtual file systems? I‚Äôm not claiming to be a super talented engineer, it‚Äôs for a bet.</p></div><!-- SC_ON --></section>]]></description><pubDate>Sun, 03 Aug 2025 11:18:50 +0530</pubDate></item><item><link>https://medium.com/@anishnarayan/learn-linux-before-kubernetes-60d27f0bcc09?sk=93a405453499c17131642d9b87cb535a</link><title>Learn Linux before Kubernetes (medium.com)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1mf1yuk/learn_linux_before_kubernetes/</guid><comments>https://www.reddit.com/r/unix/comments/1mf1yuk/learn_linux_before_kubernetes/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 2 min | <a href='https://www.reddit.com/r/unix/comments/1mf1yuk/learn_linux_before_kubernetes/'>Post permalink</a></p></section><section class='separator separator-before-parsed-content'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='parsed-content'><div><p>Namespaces, cgroups (control Groups), iptables / nftables, seccomp / AppArmor, OverlayFS, and eBPF are not just Linux kernel features.</p><p>They form the base required for powerful Kubernetes and Docker features such as container isolation, limiting resource usage, network policies, runtime security, image management, and implementing networking and observability.</p><p>Each component relies on Core Linux capabilities, right from containerd and kubelet to pod security and volume mounts.</p><figure><div><p><span>Press enter or click to view image in full size</span></p></div></figure><p>In Linux, process, network, mount, PID, user, and IPC namespaces isolate resources for containers. Coming to Kubernetes, pods run in isolated environments using namespaces by the means of Linux network namespaces, which Kubernetes manages automatically.</p><p>In Kubernetes, the resources.requests and resources.limits specified in a Pod spec are mapped to Linux cgroups under the hood to control how much CPU and memory a container can use.</p><p>So, every time you create a Pod in Kubernetes, you&rsquo;re really orchestrating Linux&rsquo;s isolation and resource management tools in the background.</p><p>Meanwhile, Docker uses namespaces to ensure containers don&rsquo;t see or interfere with each other or the host. Each container has its own PID, network, mount, UTS, and user namespace.</p></div><div class="gallery"><p><img src="https://miro.medium.com/v2/resize:fill:64:64/1*dmbNkD5D-u45r44go_cf0g.png"></p></div></section>]]></description><pubDate>Fri, 01 Aug 2025 22:31:35 +0530</pubDate></item><item><link>https://journal.bsd.cafe/2025/07/28/the-bard-and-the-shell/</link><title>The Bard and The Shell ‚Äì The BSD Cafe Journal (journal.bsd.cafe)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1mbfq0t/the_bard_and_the_shell_the_bsd_cafe_journal/</guid><comments>https://www.reddit.com/r/unix/comments/1mbfq0t/the_bard_and_the_shell_the_bsd_cafe_journal/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 8 min | <a href='https://www.reddit.com/r/unix/comments/1mbfq0t/the_bard_and_the_shell_the_bsd_cafe_journal/'>Post permalink</a></p></section><section class='separator separator-before-parsed-content'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='parsed-content'><div><p>A lot of introductions to using a shell &mdash; whether it&rsquo;s Linux, one of the BSDs, the Mac (or even Windows using WSL!) &mdash; show examples that are a bit on the light side (looking at you, <code>cowsay</code> &#128517;) or dump cryptical command sequences on the unwary newbie that make an inscription in hieroglyphs on an Egyptian temple column look easy. Both approaches make sense. The first one tries not to scare people when they use the command line, while the second one shows how powerful it is compared to clicking around in a GUI. But they don&rsquo;t really explain the advantages of a shell or the UNIX idea of &ldquo;<em>do one thing and do it well</em>&ldquo;.</p><p>An introduction should be easy to understand and follow, show a real-world use case, and ideally require more effort when trying to do the same task in a graphical environment. A few years back, I was planning a weekend workshop about using the command line for data analysis, and I came up with an idea for a example called &ldquo;<strong>The Bard and The Shell</strong>&rdquo; that I&rsquo;d like to share. I hope it&rsquo;s useful when someone asks why so many of us prefer the command line for certain tasks.</p><p>It shows some common commands (not too many to make it easy to follow), the advantages of the idea of pipelining, and iteratively solving a problem. We&rsquo;re going to find out the 25 most-used words in Shakespeare&rsquo;s &ldquo;<em>Much Ado About Nothing</em>&ldquo;. &#8288;If you&rsquo;re working with a GUI, you&rsquo;ll quickly see that it&rsquo;s not as simple as it seems. It&rsquo;s not easy to log the steps you need to take to get the results you&rsquo;re looking for.</p><p>First, we need the text of the Bard. You can find it online, but you can also download the text file containing &ldquo;Much Ado About Nothing&rdquo; from: <a href="https://www.arminhanisch.de/data/muchado.zip">https://www.arminhanisch.de/data/muchado.zip</a>. Just unzip the file and put the <code>muchado.txt</code> file in a directory of your choice. Now let&rsquo;s get this show on the road. I&rsquo;m using bash for this example, but this should work with other shells too (we will keep the fact that there are different shells, each with its own dedicated following, for a later post &#128521;). Open a terminal window and change to the directory where you put the muchado.txt file (using the <code>cd</code> command).</p><p>The first step when analyzing the text to find the most frequent words is to convert it so that each word is on its own line. We&rsquo;ll be using the <code>tr</code> command for this. <code>tr</code> stands for &ldquo;<em>translate</em>&ldquo;. Like the name says, it&rsquo;s a command-line utility for translating or deleting characters. It supports a bunch of different transformations. You can change text to uppercase or lowercase, squeeze repeating characters, delete specific characters, and do basic find and replace. You can also use it with UNIX pipes to support more complex translations.</p><p>Let&rsquo;s turn the Bard&rsquo;s work into a long list of words, one per line.</p><pre><code>cat muchado.txt | tr '[:blank:]' '\n'</code></pre><p>This finds any instance of whitespace (the <code>:blank:</code> class) and replaces it with a newline character. The output will be a very long list of over 22,000 lines of text, so you might want to just read along for the time being or wait until your terminal window finishes displaying the words.</p><p>The next step is to take out all the punctuation, quotes, and other stuff. So, we just send the output of the last command to a new call to <code>tr</code> and then another. The backslash is great for making our command line more readable by continuing it to the next line.</p><pre><code>cat muchado.txt | tr '[:blank:]' '\n' \ | tr -d '[:punct:]' \ | tr -d "'" </code></pre><p>We don&rsquo;t want to distinguish between a &ldquo;<em>You</em>&rdquo; and a &ldquo;<em>you</em>&rdquo; because they&rsquo;re the same word, so we&rsquo;re going to convert everything to lowercase, again using the mighty <code>tr</code> command. <code>tr</code> also gives us character classes for this, so we don&rsquo;t have to specify every letter of the alphabet and its lowercase counterpart.</p><pre><code>cat muchado.txt | tr '[:blank:]' '\n' \ | tr -d '[:punct:]' \ | tr -d "'" \ | tr '[:upper:]' '[:lower:]' </code></pre><p>I don&rsquo;t want to bore you with <code>tr</code> over and over, so for our next task of removing empty lines (no word, no need to check), we&rsquo;ll switch to another command named <code>grep</code>. <code>grep</code> stands for <em>Global Regular Expression Print</em>. If you will continue using the shell, you&rsquo;ll learn the meaning of a lot of these cryptic abbreviations. &#128526; Anyway, how to get rid of empty lines with <code>grep</code>? Like so:</p><pre><code>cat muchado.txt | tr '[:blank:]' '\n' \ | tr -d '[:punct:]' \ | tr -d "'" \ | tr '[:upper:]' '[:lower:]' \ | grep -e '^$' -v </code></pre><p>Now, let&rsquo;s sort all these words alphabetically. You&rsquo;ve got to do this step first because the next step, which is to remove all the duplicates and count them, needs its input to be sorted.</p><pre><code>cat muchado.txt | tr '[:blank:]' '\n' \ | tr -d '[:punct:]' \ | tr -d "'" \ | tr '[:upper:]' '[:lower:]' \ | grep -e '^$' -v \ | sort </code></pre><p>Now that looks a lot more orderly. Here&rsquo;s a fun fact: the last word is &ldquo;<em>zeal</em>&rdquo; and it only appears once in the whole text. Maybe you weren&rsquo;t too zealous William? &#128514; Alright, let&rsquo;s go ahead and remove all the duplicates while we&rsquo;re counting them.</p><pre><code>cat muchado.txt | tr '[:blank:]' '\n' \ | tr -d '[:punct:]' \ | tr -d "'" \ | tr '[:upper:]' '[:lower:]' \ | grep -e '^$' -v \ | sort \ | uniq -c </code></pre><p>There are less than 3,000 words in the output. Looks like you can read Shakespeare even if you don&rsquo;t speak English perfectly. How do I know that? Just as an aside, I&rsquo;m using the <code>wc</code> command (<em>word count</em>) to do all the counting. Want to know how many lines your output has? Just add <code>wc</code> with the <code>-l</code> option (for <em>lines</em>) to the command. Yes, <code>wc</code> can also count words and characters.</p><pre><code>cat muchado.txt | tr '[:blank:]' '\n' \ | tr -d '[:punct:]' \ | tr -d "'" \ | tr '[:upper:]' '[:lower:]' \ | grep -e '^$' -v \ | sort \ | uniq -c \ | wc -l</code></pre><p>This will not output the long list of words, but just the number <code>2978</code>. OK, back to our task&hellip;</p><p>We want this list sorted by count in reverse order. There&rsquo;s a command for this, and it&rsquo;s called <code>sort</code> (what a surprise &#128513;). It also has a bunch of options, but we&rsquo;ll only use two: <code>n</code> for numericical sorting and <code>r</code> for reverse.</p><pre><code>cat muchado.txt | tr '[:blank:]' '\n' \ | tr -d '[:punct:]' \ | tr -d "'" \ | tr '[:upper:]' '[:lower:]' \ | grep -e '^$' -v \ | sort \ | uniq -c \ | sort -nr </code></pre><p>We&rsquo;re getting closer. We just need to make sure we&rsquo;re outputting only the first 25 lines. The command to filter out only the start of a stream of lines is called <code>head</code> and it takes the number of lines as an option. And yes, you got it right: if you want to get the last part of a list of lines, you&rsquo;d use the command <code>tail</code>. &#128521;</p><pre><code>cat muchado.txt | tr '[:blank:]' '\n' \ | tr -d '[:punct:]' \ | tr -d "'" \ | tr '[:upper:]' '[:lower:]' \ | grep -e '^$' -v \ | sort \ | uniq -c \ | sort -nr \ | head -n 25</code></pre><p>And there you have it&mdash;the most frequently used 25 words from &ldquo;<em>Much Ado About Nothing</em>&ldquo;:</p><pre><code> 694 i 628 and 581 the 491 you 485 a 428 to 360 of 311 in 302 is 291 that 281 my 256 it 250 not 223 her 220 for 219 me 212 don 200 he 199 with 199 will 198 benedick 196 claudio 182 your 182 be 173 but</code></pre><p>IMHO that&rsquo;s a great way to get started with &ldquo;<em>data science on the command line</em>&rdquo; and see how flexible and useful the command line tools and the concept of pipelines can be to solve a specific task. Taking a look at Shakespeare through the lens of a one-liner&hellip;</p></div></section>]]></description><pubDate>Mon, 28 Jul 2025 18:39:01 +0530</pubDate></item><item><link>https://www.reddit.com/r/rust/comments/1m9oidm/arwen_crossplatform_patching_of_the_shared/</link><title>arwen - cross-platform patching of the shared libraries ( patchelf &amp;amp;&amp;amp; install_name_tool in rust)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1m9r8em/arwen_crossplatform_patching_of_the_shared/</guid><comments>https://www.reddit.com/r/unix/comments/1m9r8em/arwen_crossplatform_patching_of_the_shared/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 2 min | <a href='https://www.reddit.com/r/unix/comments/1m9r8em/arwen_crossplatform_patching_of_the_shared/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>Hello everyone! </p><p>I&#39;m excited to share the project that I was working on - arwen! </p><p><a href="https://github.com/nichmor/arwen">https://github.com/nichmor/arwen</a></p><p>Arwen is a cross-platform patching tool for shared libraries and executables in Rust. It is basically a re-implementation of patchelf ( to patch ELF files and is used in the Nix ecosystem ), install_name_tool  ( Apple&#39;s software that is used to patch Macho files ), and ruby-macho.</p><p>Currently, it is missing the modification of the page size of ELF files from patchelf.</p><p>Its primary goal is to patch rpaths ( <a href="https://en.wikipedia.org/wiki/Rpath">https://en.wikipedia.org/wiki/Rpath</a> ), and it will be integrated into the rattler-build ( <a href="https://github.com/prefix-dev/rattler-build">https://github.com/prefix-dev/rattler-build</a> next-gen build tool of conda packages ), but it&#39;s capable of much more ( printing/and modifying other sections).  </p><p>My long-term goal is to make it also a kinda of replacement of readelf/objdump, and make the process of working with ELF/Macho not so archaic.</p><p>I will really appreciate your feedback and will be very happy if you could start using it in your work, so I could get real-world feedback!</p></div><!-- SC_ON --></section><section class='separator separator-after-selftext'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='parsed-content'><div><p>Hello everyone! </p><p>I'm excited to share the project that I was working on - arwen! </p><p><a href="https://github.com/nichmor/arwen">https://github.com/nichmor/arwen</a> </p><p>Arwen is a cross-platform patching tool for shared libraries and executables in Rust. It is basically a re-implementation of patchelf ( to patch ELF files and is used in the Nix ecosystem ), install_name_tool ( Apple's software that is used to patch Macho files ), and ruby-macho. </p><p>Currently, it is missing the modification of the page size of ELF files from patchelf. </p><p>Its primary goal is to patch rpaths ( <a href="https://en.wikipedia.org/wiki/Rpath">https://en.wikipedia.org/wiki/Rpath</a> ), and it will be integrated into the rattler-build ( <a href="https://github.com/prefix-dev/rattler-build">https://github.com/prefix-dev/rattler-build</a> next-gen build tool of conda packages ), but it's capable of much more ( printing/and modifying other sections). </p><p>My long-term goal is to make it also a kinda of replacement of readelf/objdump, and make the process of working with ELF/Macho not so archaic. </p><p>I will really appreciate your feedback and will be very happy if you could start using it in your work, so I could get real-world feedback! </p></div></section>]]></description><pubDate>Sat, 26 Jul 2025 17:11:52 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1m7t487/question/</link><title>Question</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1m7t487/question/</guid><comments>https://www.reddit.com/r/unix/comments/1m7t487/question/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1m7t487/question/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>Please can anyone explain what the difference between UNIX-Like and UNIX-Based. I‚Äôm coming to the point of MAC vs Linux. I recently bought a MacBook and the cmds on Linux are working fine. But MAC is known as UNIX-Based. </p></div><!-- SC_ON --></section>]]></description><pubDate>Thu, 24 Jul 2025 08:27:25 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1m7l0m8/building_things/</link><title>Building things</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1m7l0m8/building_things/</guid><comments>https://www.reddit.com/r/unix/comments/1m7l0m8/building_things/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1m7l0m8/building_things/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>I started building a¬†<a href="https://www.reddit.com/r/codereview/comments/qo8yq3/c_programs/">C++ code generato</a>r in the summer of 1999. My code generator is proprietary, but it&#39;s free to use: there aren&#39;t any trial periods or paid plans. I&#39;m looking for people who are interested in trading demos/code reviews/etc. </p><p>I support Windows and some other platforms, but I&#39;m more comfortable with Linux and the <a href="https://github.com/Ebenezer-group/onwards/blob/master/src/tiers/cmwA.cc">middle tier</a> of my code generator only runs on Linux.</p></div><!-- SC_ON --></section>]]></description><pubDate>Thu, 24 Jul 2025 02:27:35 +0530</pubDate></item><item><link>https://github.com/Projeto-Pindorama/opatch</link><title>opatch: A portable fork of OpenBSD's patch(1) for UNIX-compatible systems via a single-header library (github.com)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1lztrc2/opatch_a_portable_fork_of_openbsds_patch1_for/</guid><comments>https://www.reddit.com/r/unix/comments/1lztrc2/opatch_a_portable_fork_of_openbsds_patch1_for/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 4 min | <a href='https://www.reddit.com/r/unix/comments/1lztrc2/opatch_a_portable_fork_of_openbsds_patch1_for/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>This was created because GNU patch is almost ubiquitous on the Linux world and having competition is good.<br/>It&#39;s ready for general use since the <a href="https://github.com/Projeto-Pindorama/opatch/blob/main/HOW2UPDATE.md">code base is based on and updated along with OpenBSD&#39;s</a>, but suggestions for supporting other systems are welcome.</p></div><!-- SC_ON --></section><section class='preview-image'><p>&nbsp;</p><img src='https://opengraph.githubassets.com/f75f62f48706ef1c94c926ae5cd2fbae33271515776a5b8be2aa3ef706fc3abe/Projeto-Pindorama/opatch' /></section><section class='parsed-content'><div><article><h2>opatch</h2><a href="https://github.com#opatch"></a><p>The <code>patch</code>(1) implementation from OpenBSD, verbatim and portabilized per <a href="https://github.com/Projeto-Pindorama/opatch/blob/main/baiacu.h"><code>baiacu.h</code></a>.</p><h2>Why?</h2><a href="https://github.com#why"></a><p>As always, competition is good, principally if it's offering more freedom, and I didn't want to compile {stripped-,}lobase just for a single command.</p><h2>Where does it run?</h2><a href="https://github.com#where-does-it-run"></a><p>Theoretically every Linux system and, of course, BSD.</p><h2>Compile and install</h2><a href="https://github.com#compile-and-install"></a><div><pre><span>S145% gmake &amp;&amp; gmake install</span></pre></div><p>Per default, it installs the "patch" program at <code>/usr/ccs/bin</code> and its manual at <code>/usr/ccs/share/man/man1</code>, with <code>/usr/ccs</code> being the prefix for development tools at <a href="https://copacabana.pindorama.net.br">Copacabana</a>. If you wish or need, you can change the instalation directories using the variables <code>$(ROOT)</code>, which is equivalent to <code>$(DESTDIR)</code>, <code>$(CCSBIN)</code> and <code>$(CCSMAN)</code>. Be careful: there is not a separate <code>$(PREFIX)</code> variable, you will need to set both the binary and manual page directories manually.<br> Remember to place the declarations <em>after</em> the <code>gmake</code> call and before <code>install</code>, like this:</p><div><pre><span>S145% gmake ROOT=... CCSMAN=... CCSBIN=... install</span></pre></div><p>The same applies to <code>CFLAGS</code> and <code>CPPFLAGS</code> at the compilation stage:</p><h2>Chip in!</h2><a href="https://github.com#chip-in"></a><p>As usual, here are some ways you can chip in this project.</p><h3>How to update the source code?</h3><a href="https://github.com#how-to-update-the-source-code"></a><p>Read <a href="https://github.com/Projeto-Pindorama/opatch/blob/main/HOW2UPDATE.md">HOW2UPDATE.md</a>, it's too large to fit here.</p><h3>(Possible) bugs</h3><a href="https://github.com#possible-bugs"></a><p>This is basically the verbatim implementation from OpenBSD, but, as the introduction to this file already mentioned, it is (<a href="https://github.com/Projeto-Pindorama/opatch/commit/4558398f2ed7224577489cabeda400ccea667d5e#diff-9562c0bae0c928d1c4b9d6bd8ffd0a711f5771fb3d6c19e577e7f347fc4c2cf2">mostly</a>) portabilized per a single-header library called "baiacu", present at the <code>baiacu.h</code> file.<br> Most of the functions implemented there were already tested and seem to work really well but, since nothing is really bullet-proof until a whole lot of testing, something might garble in the process.<br> In this case, be aware that bugs such as memory faults can happen depending on the platform and compiler. If it happens, please, <a href="https://github.com/Projeto-Pindorama/opatch/issues/new">open an issue</a> and mention what happened, as precisely as possible.</p><h2>Licence</h2><a href="https://github.com#licence"></a><p><a href="https://github.com/Projeto-Pindorama/opatch/blob/main/LICENSE.txt">BSD 2-Clause</a>, but it varies from file to file.<br> Copycenter licences in general.<br> <code>baiacu.h</code> is also under the BSD 2-Clause licence, so feel free (as in freedom) to copy and paste it on any project that was originally intended to run over BSD and that you wish to run on Linux (or any other UNIX-compatible systems).<br> If you implement anything new, I would be happy to know &mdash; and perhaps receive a patch. :^)</p></article></div></section>]]></description><pubDate>Mon, 14 Jul 2025 23:37:08 +0530</pubDate></item><item><link>https://www.youtube.com/watch?v=a7KAOnIAL8w</link><title>FreeBSD 14.3 KDE Plasma 6 xrdp QEMU VM how to install tutorial (youtube.com)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1lrkh5l/freebsd_143_kde_plasma_6_xrdp_qemu_vm_how_to/</guid><comments>https://www.reddit.com/r/unix/comments/1lrkh5l/freebsd_143_kde_plasma_6_xrdp_qemu_vm_how_to/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p><a href='https://www.reddit.com/r/unix/comments/1lrkh5l/freebsd_143_kde_plasma_6_xrdp_qemu_vm_how_to/'>Post permalink</a></p></section><section class='embedded-media'><iframe width="356" height="200" src="https://www.youtube.com/embed/a7KAOnIAL8w?feature=oembed&enablejsapi=1" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen title="FreeBSD 14.3 KDE Plasma 6 xrdp QEMU VM how to install tutorial - June 2025 - c3655e9d"></iframe></section>]]></description><pubDate>Fri, 04 Jul 2025 20:14:29 +0530</pubDate></item><item><link>https://blogs.perl.org/users/oodler_577/2025/06/last-call-for-papers-perl-community-conference-hybrid.html</link><title>Last Call for Papers, Perl Community Conference (Hybrid) (blogs.perl.org)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1lnlldm/last_call_for_papers_perl_community_conference/</guid><comments>https://www.reddit.com/r/unix/comments/1lnlldm/last_call_for_papers_perl_community_conference/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 2 min | <a href='https://www.reddit.com/r/unix/comments/1lnlldm/last_call_for_papers_perl_community_conference/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>Attention all procrastinators and finders of late breaking inspiration! The final call for papers for the summer PCC is upon us!</p></div><!-- SC_ON --></section><section class='separator separator-after-selftext'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='parsed-content'><div><div><div><p><span>By <a href="https://blogs.perl.org/users/oodler_577/">Brett Estrade</a></span> <span>on <time>June 27, 2025 7:58 AM</time></span> </p></div><div><p>Paper and talk submissions will be accepted until July 01, 2025 18:59 CDT</p><ul> <li><a href="https://www.papercall.io/perlcommunity">https://www.papercall.io/perlcommunity</a></li> <li><a href="https://www.papercall.io/cfps/6270/submissions/new">https://www.papercall.io/cfps/6270/submissions/new</a></li> </ul><p>In particular I'd like to invite anyone who regrets not submitting a talk to the TPRC or who has gotten bit by the speaking bug. You are welcome to give your talk remotely.</p></div><div><ul> <li><a href="https://blogs.perl.org#comments">0 comments</a></li> </ul> </div></div><div><div><h3>About Brett Estrade</h3><p><img src="https://blogs.perl.org/mt/mt-static/support/assets_c/2025/05/headshot-thumb-72x72-5141.png" alt="user-pic"> PAUSE Id: OODLER Chairman of the Science Perl Committee Co-Editor of The Science Perl Journal Co-Organizer of the Perl Community Conferences in Austin, TX </p><div><p><a href="https://blogs.perl.org/mt/mt-cp.cgi?__mode=view&amp;id=5436">More info &raquo;</a></p></div></div><div><h3>Search <a href="https://blogs.perl.org/users/oodler_577/">this blog</a></h3> <form> <label>Search</label> </form> </div></div></div><div class="gallery"><p><img src="https://blogs.perl.org/users/oodler_577/assets_c/2025/06/summerppc2025-thumb-869x493-5161.png"></p></div></section>]]></description><pubDate>Sun, 29 Jun 2025 23:49:21 +0530</pubDate></item><item><link>https://i.redd.it/igxbcinzwv9f1.jpeg</link><title>Unix ftw (i.redd.it)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1lnhequ/unix_ftw/</guid><comments>https://www.reddit.com/r/unix/comments/1lnhequ/unix_ftw/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p><a href='https://www.reddit.com/r/unix/comments/1lnhequ/unix_ftw/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>No more MS Windows over here! Only Macs as personal devices and Linux/BSD servers! </p></div><!-- SC_ON --></section><section class='preview-image'><p>&nbsp;</p><img src='https://i.redd.it/igxbcinzwv9f1.jpeg' /></section>]]></description><pubDate>Sun, 29 Jun 2025 20:57:41 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1llna5m/need_some_help_setting_up_zathura/</link><title>need some help setting up zathura</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1llna5m/need_some_help_setting_up_zathura/</guid><comments>https://www.reddit.com/r/unix/comments/1llna5m/need_some_help_setting_up_zathura/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1llna5m/need_some_help_setting_up_zathura/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>just installed it, but can&#39;t seem to figure out how to remap keys etc, would love it if I could get some help for these:<br/>1. how do I map my left and right keys to do page up and page down? i found how to map keys thing but there&#39;s no shortcut function defined for page up and down<br/>2. how do I set custom bg and fg colors for dark/recolor mode</p></div><!-- SC_ON --></section>]]></description><pubDate>Fri, 27 Jun 2025 12:22:40 +0530</pubDate></item><item><link>https://i.redd.it/ipf0b5ea409f1.jpeg</link><title>Do you guys like my Ubuntu I got Linux 1 week ago (i.redd.it)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1ljwhhk/do_you_guys_like_my_ubuntu_i_got_linux_1_week_ago/</guid><comments>https://www.reddit.com/r/unix/comments/1ljwhhk/do_you_guys_like_my_ubuntu_i_got_linux_1_week_ago/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p><a href='https://www.reddit.com/r/unix/comments/1ljwhhk/do_you_guys_like_my_ubuntu_i_got_linux_1_week_ago/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>I bet you guys figured out I like cars</p></div><!-- SC_ON --></section><section class='preview-image'><p>&nbsp;</p><img src='https://i.redd.it/ipf0b5ea409f1.jpeg' /></section>]]></description><pubDate>Wed, 25 Jun 2025 10:01:35 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1lfz480/petition_a_phony_special_target_with_no/</link><title>Petition: A .PHONY special target with no prerequisites shall be treated as GNU -WB</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1lfz480/petition_a_phony_special_target_with_no/</guid><comments>https://www.reddit.com/r/unix/comments/1lfz480/petition_a_phony_special_target_with_no/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1lfz480/petition_a_phony_special_target_with_no/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>POSIX unfortunately specifies a NO-OP when makefiles configure `.PHONY:` without any named prerequisites. This deviates from the behavior of other special targets in the POSIX make standard. And it creates wasteful boilerplate `.PHONY: a b c`... or `.PHONY: a\n.PHONY: b\n.PHONY:c\n`... for make users whose build designs mostly consist of non-file, logical targets.</p><p>Meta often uses repeated boilerplate of .PHONY ... .PHONY ... .PHONY ... for each successive task declaration. That&#39;s a mainteance problem. Computers exist to automate. A macro would be nice.</p><p>People are resorting to particular implementations like GNU make, or even non-make build system alternatives such as _just_ or fragile, handrolled shell scripts. Unfortunately, many of the responses on Stack Overflow concerning this wish recommend shell scripting. But shell scripts lack the set -e (and ideally -ufo pipefail) safe programming behaviors that _make_ enables by default.</p><p>Finally, this needs a new special target as well, to turn back on the default caching behavior for regular file targets, such as `.REAL: [&lt;task&gt; [&lt;task&gt; [&lt;task&gt;]]]`...</p></div><!-- SC_ON --></section>]]></description><pubDate>Fri, 20 Jun 2025 14:20:26 +0530</pubDate></item><item><link>https://medium.com/gitconnected/terminal-commands-that-i-use-to-boost-programming-speed-e76b6ef07cb0?sk=84dc6150ea662198080fe12a1f4a0b81</link><title>Terminal Commands That I Use to Boost Programming Speed (medium.com)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1lfx4wd/terminal_commands_that_i_use_to_boost_programming/</guid><comments>https://www.reddit.com/r/unix/comments/1lfx4wd/terminal_commands_that_i_use_to_boost_programming/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p><a href='https://www.reddit.com/r/unix/comments/1lfx4wd/terminal_commands_that_i_use_to_boost_programming/'>Post permalink</a></p></section><section class='preview-image'><img src='https://miro.medium.com/v2/resize:fit:1200/1*has3tcB3ywFYVIAdFLLcMw.jpeg' /></section>]]></description><pubDate>Fri, 20 Jun 2025 12:08:17 +0530</pubDate></item><item><link>https://kde.org/announcements/plasma/6/6.4.0/</link><title>KDE Plasma 6.4 released (kde.org)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1leecrk/kde_plasma_64_released/</guid><comments>https://www.reddit.com/r/unix/comments/1leecrk/kde_plasma_64_released/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 13 min | <a href='https://www.reddit.com/r/unix/comments/1leecrk/kde_plasma_64_released/'>Post permalink</a></p></section><section class='preview-image'><img src='https://kde.org/announcements/plasma/6/6.4.0/fullscreen_with_apps.png' /></section><section class='parsed-content'><div><main><div><p>A new version of Plasma is here, and it feels even more like <code>/home</code>, as it becomes smoother, friendlier and more helpful.</p><p>Plasma 6.4 improves on nearly every front, with progress being made in accessibility, color rendering, tablet support, window management, and more.</p><p>As this is going to be a long read, let&rsquo;s get right into it&hellip;</p></div><div><h2>Highlights</h2><div><div><h3>More Flexible Tiling</h3><p>Choose a different tile layout for each of your virtual desktops</p></div><div><h3>New Spectacle</h3><p>Spectacle gets an overhaul to make it even more awesome</p></div><div><h3>KRunner Gets Color</h3><p>Enter a color code in any notation and let KRunner show you what it looks like</p></div></div></div><div><h2>Window Management</h2><p>Plasma already offers <em>Virtual Desktops</em> to help organize your windows and activities; and customizable <em>Tiles</em> you can stick windows to so they don&rsquo;t overlap, allowing you to see everything important at a glance.</p><p>Plasma 6.4 combines these features by letting you choose a different configuration of tiles on each virtual desktop.</p><p>The video below shows the power of this feature: you can tile two windows on your main virtual desktop, each taking up half of the screen. Then in another virtual desktop, you can place tile apps: two on either side, and the other two floating in the middle.</p><figure><video><source src="https://cdn.kde.org/promo/Announcements/Plasma/6.4/tiles.webm"><source src="https://cdn.kde.org/promo/Announcements/Plasma/6.4/tiles.mp4"></source></source></video></figure><p>This new feature lets you create any other kind of layout combination that best works for you.</p></div><div><h2>Accessibility</h2><p>Accessibility is a top priority for KDE. This work is endless, but we make improvements in every new Plasma release!</p><p>The Wayland session in Plasma 6.4 brings some new accessibility features: you can now move the pointer using your keyboard&rsquo;s number pad keys, or use a three-finger touchpad pinch gesture to zoom in or out.</p><p>In addition, a great deal of subtle but important work has been done throughout Plasma to improve keyboard navigation, screen reader usability, and text readability.</p></div><div><h2>UI &amp; Visual Design</h2><p>Straddling the boundary between accessibility and visual design, another way of making Plasma easier to use is by increasing the contrast between the foreground and background elements.</p><p>In that respect, we&rsquo;ve made our <em>Breeze Dark</em> theme a bit darker. This subtle change helps the text and user interface elements pop, making them easier to read and see.</p><p>Plasma 6.4 also darkens the background of the desktop or window when an authentication dialog shows up. This will help you locate and focus on the window asking for your password.</p><figure><picture><img src="https://kde.org/announcements/plasma/6/6.4.0/password_darken_desktop.png" alt="Plasma darkens the rest of the desktop when an authentication dialog pops up"></picture></figure><p>The energy page in the <em>Info Center</em> and the entirety of <em>KMenuEdit</em> (the app you can use to edit apps&rsquo; presentation and grouping in the launcher menu) have all had their looks overhauled to make them cleaner, clearer, and easier to use.</p><p>Speaking of settings, there&rsquo;s a brand-new <em>Animations</em> page in <em>System Settings</em> that groups all the settings for purely visual animated effects into one place, making it easier to find and configure them.</p><p>Plasma 6.4&rsquo;s lock screen plays nicer with multiple-screen setups, too. The lock screen&rsquo;s interactive elements will now only appear on the screen that has focus or the pointer on it. And when it&rsquo;s time to input your password, the text entered into one password field is synced across all others, avoiding any errors that may cause passwords to be half-entered in a field on one screen, and then the rest in a different one on another screen.</p></div><div><h2>Notifications</h2><p>Notifications are how Plasma communicates what&rsquo;s going on within your system.</p><p>The file transfer notification now shows a speed graph, giving you a more visual idea of how fast the transfer is going, and how long it will take to complete.</p><p>When you get notified that updates are available, you can now install them directly from the notification.</p><p>When any applications are in full screen mode &mdash; like when you&rsquo;re playing a game, working on a critical project, or watching a video &mdash; Plasma will enter <em>Do Not Disturb</em> mode and only show urgent notifications. When you exit full screen mode, you&rsquo;ll see a summary of any notifications you missed, and they&rsquo;ll be right there in the <em>System Tray</em> for your perusal.</p><p>Have you ever found yourself talking during an online meeting, and no one can hear you because you forgot to unmute your microphone? No more! Now when an app tries to access the microphone and finds it muted, a notification will pop up.</p><p>Finally, notifications with interactive buttons will still show them in the history view.</p></div><div><p>Widgets are the building blocks of Plasma: small programs that carry out specific tasks on your Plasma desktop. They can launch programs, track the weather, set alarms, or tell you when you have updates.</p><p>Among many other improvements, a new feature in the <em>Application Launcher</em> widget will place a green <strong>New!</strong> tag next to newly installed apps, so you can easily find where something you just installed lives in the menu. The tag disappears after 3 days, or after you run the app for the first time.</p><figure><picture><img src="https://kde.org/announcements/plasma/6/6.4.0/new_stuff.png" alt="Plasma tags new stuff you have recently installed"></picture></figure><p>The <em>Media Player</em> widget now allows you slow down or speed up whatever audio or video is currently playing (for players that support this feature).</p><p>And the <em>Disks &amp; Devices</em> widget used to access internal and removable disks now checks and even offers to repair your disks if it finds errors in them.</p><figure><picture><img src="https://kde.org/announcements/plasma/6/6.4.0/disks_devices_check.png" alt="The Disk and Devices widget offers to try and repair a damaged storage device."></picture></figure><p>Plasma 6.4 features many other smaller changes to the included widgets as well; explore them to see everything that&rsquo;s new!</p></div><div><h2>For Digital Artists</h2><p>Plasma continues the push to improve support for devices used by digital artists and graphic designers.</p><p>In Plasma 6.4, we&rsquo;ve made configuring the buttons on your stylus much more intuitive:</p><figure><picture><img src="https://kde.org/announcements/plasma/6/6.4.0/tablet_config.png" alt="Plasma makes it easy to configure your stylus buttons"></picture></figure><p>If you make a mistake while calibrating your tablet, Plasma offers an easy way to reset everything and start over.</p><p>And when you aren&rsquo;t making art, you can still continue using your tablet, since Plasma now supports <em>relative mode</em> which makes the stylus behave more like a regular mouse.</p></div><div><h2>Color Management</h2><p>For those looking to adjust the colors for gaming or watching movies, the <em>Display and Monitor</em> page in <em>System Settings</em> comes with a brand new HDR calibration wizard in Plasma 6.4.</p><p>Plasma 6.4 can also do Extended Dynamic Range (a different kind of HDR) on screens that support it, and gives you a tool to limit color depth &mdash; again for screens that support that feature.</p><p>Finally, Plasma now supports the <em>P010</em> video color format, improving power efficiency with HDR video content.</p><p>In a nutshell, Plasma helps you make the best use of your fancy screen hardware!</p></div><div><h2>KRunner</h2><p>KRunner is Plasma&rsquo;s powerful built-in assistant. If you need to find something, define something, calculate something, or convert something, press <kbd>Alt</kbd> + <kbd>Space</kbd> and ask KRunner.</p><p>In Plasma 6.4, KRunner can help you visualize colors. Just enter the color in hex notation, as a hexadecimal number, or its CSS/SVG name (like &ldquo;MintCream&rdquo;, &ldquo;PeachPuff&rdquo;, or &ldquo;PapayaWhip&rdquo; &mdash; yes, those are all names of colors and not fancy desserts). Then KRunner will show you how that color looks and its equivalent name/code in many other notations.</p><figure><video><source src="https://cdn.kde.org/promo/Announcements/Plasma/6.4/KRunner_colors.webm"><source src="https://cdn.kde.org/promo/Announcements/Plasma/6.4/KRunner_colors.mp4"></source></source></video></figure></div><div><h2>Screenshots &amp; Screen Recording</h2><p>Spectacle, the built-in app for taking screenshots and screen recordings, looks very different in Plasma 6.4 &mdash; for the better!</p><p>Press the <kbd>PrtSc</kbd> key and Spectacle opens directly in screenshot mode: drag a box to select a region of the screen, or press <kbd>Enter</kbd> immediately and Spectacle will take a shot of the whole screen.</p><p>You can also start annotating right away, by drawing arrows, blurring sections, adding explanatory text, and more.</p><figure><video><source src="https://cdn.kde.org/promo/Announcements/Plasma/6.4/Spectacle.webm"><source src="https://cdn.kde.org/promo/Announcements/Plasma/6.4/Spectacle.mp4"></source></source></video></figure><p>Finally, quality has been massively improved for screen recordings using the WebM format or taken on screens using fractional scaling.</p></div><div><h2>System Monitoring</h2><p>Plasma 6.4&rsquo;s <em>System Monitor</em> helps you stay on top of how your system is working in even more ways.</p><p>First, the <em>Overview</em> and <em>History</em> pages have been overhauled to show more information and be more generally useful:</p><figure><picture><img src="https://kde.org/announcements/plasma/6/6.4.0/history.png" alt="GPU usage graph on the history page"></picture></figure><p>And on those pages, you can find usage monitoring for Intel GPUs. In addition, it can even show the GPU usage on a per-process basis for Intel and AMD GPUs.</p><p>There&rsquo;s also a new &ldquo;Background Services&rdquo; group on the <em>Applications</em> page, giving you the complete picture of the system resources being used by things that aren&rsquo;t apps.</p><p>In addition, the built-in free space monitor now checks for free space on all non-cache partitions of all disks, not just a disk&rsquo;s <em>Root</em> and <em>Home</em> partitions.</p><p>And finally, a new <em>Sensors</em> page in <em>Info Center</em> shows raw sensor data for things like the temperature of your CPUs and GPUs.</p><figure><picture><img src="https://kde.org/announcements/plasma/6/6.4.0/Sensors.png" alt="The sensors page shows raw data"></picture></figure></div><div><h2>Miscellaneous</h2><p>When dragging files to another location on the same disk using Dolphin or the Plasma desktop, you can now have the system always move the files, rather than being asked what to do every time.</p><p>The Plasma browser integration feature that allows you to control the playback of media in your browser from the desktop (among many other things) now supports the Flatpak versions of Firefox and Chromium variants like LibreWolf and Ungoogled Chromium.</p><p>And finally, for the more technically-minded, Plasma 6.4 adds support for a large number of Wayland protocols, including the &ldquo;Relative tablet dials&rdquo;, &ldquo;idle notify&ldquo;, &ldquo;color representation&rdquo;, &ldquo;FIFO&rdquo;, &ldquo;toplevel tag&rdquo;, and &ldquo;single pixel buffer&rdquo; protocols. This will help apps integrate better into Plasma&rsquo;s Wayland session.</p></div><div><p>&hellip;and there&rsquo;s much more. To see the full list of changes, check out the <a href="https://kde.org/announcements/changelogs/plasma/6/6.3.5-6.4.0/">complete changelog for Plasma 6.4</a>.</p></div><section><section><h2>Feedback</h2><p>Discuss KDE on the <a href="https://discuss.kde.org/">KDE Forums</a>.</p><p>You can provide feedback direct to the developers via the <a href="https://go.kde.org/matrix/#/%23plasma:kde.org">#Plasma Matrix channel</a>, <a href="https://mail.kde.org/mailman/listinfo/plasma-devel">Plasma-devel mailing list</a> or report issues via <a href="https://bugs.kde.org/enter_bug.cgi?product=plasmashell&amp;format=guided">Bugzilla</a>. If you like what the team is doing, please let them know!</p><p>Your feedback is greatly appreciated.</p></section><h2>Supporting KDE</h2><p>KDE is a <a href="https://www.gnu.org/philosophy/free-sw.html">Free Software</a> community that exists and grows only because of the help of many volunteers that donate their time and effort. KDE is always looking for new volunteers and contributions, whether it is help with coding, bug fixing or reporting, writing documentation, translations, promotion, money, etc. All contributions are gratefully appreciated and eagerly accepted. Please read through the <a href="https://kde.org/community/donations/">Supporting KDE page</a> for further information or become a KDE e.V. supporting member through our <a href="https://kde.org/community/donations/">Join the Game</a> initiative.</p><h2>About KDE</h2><p>KDE is an international technology team that creates free and open source software for desktop and portable computing. Among KDE&rsquo;s products are a modern desktop system for Linux and UNIX platforms, comprehensive office productivity and groupware suites and hundreds of software titles in many categories including Internet and web applications, multimedia, entertainment, educational, graphics and software development. KDE software is translated into more than 60 languages and is built with ease of use and modern accessibility principles in mind. KDE&rsquo;s full-featured applications run natively on Linux, BSD, Windows, Haiku, and macOS.</p><hr><p><span><em>Trademark Notices.</em><p>KDE<sup>&reg;</sup>and the K Desktop Environment<sup>&reg;</sup>logo are registered trademarks of KDE e.V..<br>Linux is a registered trademark of Linus Torvalds. UNIX is a registered trademark of The Open Group in the United States and other countries.<br>All other trademarks and copyrights referred to in this announcement are the property of their respective owners.</p></span></p><hr><h4>Press Contacts</h4><p>For more information send us an email: <a href="https://kde.orgmailto:press@kde.org">press@kde.org</a></p></section></main></div></section>]]></description><pubDate>Wed, 18 Jun 2025 16:41:07 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1l361gv/tide42_a_fast_beginnerfriendly_cli_ide_for/</link><title>Tide42 ‚Äì A fast, beginner-friendly CLI IDE for learning and working in Python (and more)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1l361gv/tide42_a_fast_beginnerfriendly_cli_ide_for/</guid><comments>https://www.reddit.com/r/unix/comments/1l361gv/tide42_a_fast_beginnerfriendly_cli_ide_for/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1l361gv/tide42_a_fast_beginnerfriendly_cli_ide_for/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>Hey everyone</p><p>I built Tide42, a command-line IDE designed to make learning and coding in Python (and other languages) much easier and more enjoyable‚Äîespecially if you&#39;re just getting comfortable with the terminal.</p><p>It‚Äôs lightweight, cross-platform (Linux/macOS/WSL), and packed with useful features like:</p><p>Syntax highlighting + theming</p><p>Fast project launcher &amp; editor </p><p>Easy multi-distro installer (Debian, Arch, macOS)</p><p>Safe config backup + clean uninstall</p><p>Built-in self-updater (--update flag)</p><p>Works in GNOME Terminal, TTY, and other low-resource environments</p><p>Designed for Python, but works with C/C++, Shell, and others too</p><p>Vim/Neovim-based editor under the hood, but smooth enough for beginners</p><p>You can install it with one command from the repo below. I made this to help bridge the gap between GUI-based editors and pure terminal workflows. If you&#39;re learning Python and want to feel more ‚Äúat home‚Äù in the terminal, this might be for you!</p><p>Repo: <a href="https://github.com/logicmagix/tide42">https://github.com/logicmagix/tide42</a></p><p>Happy to answer questions or walk through anything if you&#39;re curious about how it works or how to extend it!</p></div><!-- SC_ON --></section>]]></description><pubDate>Wed, 04 Jun 2025 19:18:46 +0530</pubDate></item><item><link>https://www.reddit.com/r/solaris/comments/1l20tdj/release_fractalkit_proof_of_concept/</link><title>[release] FractalKit proof of concept!</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1l20w47/release_fractalkit_proof_of_concept/</guid><comments>https://www.reddit.com/r/unix/comments/1l20w47/release_fractalkit_proof_of_concept/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1l20w47/release_fractalkit_proof_of_concept/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>OK, it&#39;s finally finally up. currently gcc, coreutils, plus some support libraries, as a proof of concept. For those who don&#39;t know, FractalKit is an in-progress collection of modern packages built for Solaris 10 SPARC, and they may work on Solaris 11 also. They can be downloaded at <a href="https://highenergymagic.net/fractalkit/">https://highenergymagic.net/fractalkit/</a> - please let us know if there are any bugs, issues, what have you.</p></div><!-- SC_ON --></section><section class='separator separator-after-selftext'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='parsed-content'><div><p>OK, it's finally finally up. currently gcc, coreutils, plus some support libraries, as a proof of concept. For those who don't know, FractalKit is an in-progress collection of modern packages built for Solaris 10 SPARC, and they may work on Solaris 11 also. They can be downloaded at <a href="https://highenergymagic.net/fractalkit/">https://highenergymagic.net/fractalkit/</a> - please let us know if there are any bugs, issues, what have you. </p></div></section>]]></description><pubDate>Tue, 03 Jun 2025 08:07:50 +0530</pubDate></item><item><link>https://www.reddit.com/r/MacOS/comments/1kynspe/problems_setting_up_sketchybar_aerospace/</link><title>Problems setting up SketchyBar + AeroSpace (crosspost)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1kyoc41/problems_setting_up_sketchybar_aerospace_crosspost/</guid><comments>https://www.reddit.com/r/unix/comments/1kyoc41/problems_setting_up_sketchybar_aerospace_crosspost/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 20 min | <a href='https://www.reddit.com/r/unix/comments/1kyoc41/problems_setting_up_sketchybar_aerospace_crosspost/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>Hello! I am having issues getting AS workspaces to display in Sketchybar </p><p>What I want to do is to have different workspace numbers be highlighted when I switch between workspaces</p><p>I am new to both of these, but I followed the guide which was offered in the AeroSpace docs and it still won&#39;t work. Below I attached all the relevant code</p><p>sketchybarrc</p><pre><code>#!/usr/bin/env bashsource &quot;$HOME/.config/sketchybar/plugins/variables.sh&quot; # Loads all defined colors# General bar and defaultssketchybar --bar height=30 \  color=&quot;$BAR_COLOR&quot; \  shadow=&quot;$SHADOW&quot; \  position=top \  sticky=on \  padding_right=0 \  padding_left=0 \  corner_radius=&quot;$CORNER_RADIUS&quot; \  y_offset=6 \  margin=6 \  blur_radius=20 \  notch_width=200 \  --default updates=when_shown \  icon.font=&quot;$FONT:Bold:13.5&quot; \  icon.font=&quot;JetBrainsMono Nerd Font:Bold:13.0&quot; \  label.font=&quot;JetBrainsMono Nerd Font:Bold:13.0&quot; \  icon.color=&quot;$ICON_COLOR&quot; \  icon.padding_left=&quot;$PADDINGS&quot; \  icon.padding_right=&quot;$PADDINGS&quot; \  label.color=&quot;$LABEL_COLOR&quot; \  label.padding_left=&quot;$PADDINGS&quot; \  label.padding_right=&quot;$PADDINGS&quot; \  background.padding_right=&quot;$PADDINGS&quot; \  background.padding_left=&quot;$PADDINGS&quot; \  popup.background.border_width=1 \  popup.background.corner_radius=11 \  popup.background.border_color=&quot;$POPUP_BORDER_COLOR&quot; \  popup.background.color=&quot;$POPUP_BACKGROUND_COLOR&quot; \  popup.background.shadow.drawing=&quot;$SHADOW&quot;# Leftsource &quot;$ITEM_DIR/spaces.sh&quot;source &quot;$ITEM_DIR/aerospace.sh&quot;source &quot;$ITEM_DIR/front_app.sh&quot;# Rightsource &quot;$ITEM_DIR/clock.sh&quot;source &quot;$ITEM_DIR/calendar.sh&quot;source &quot;$ITEM_DIR/battery.sh&quot;source &quot;$ITEM_DIR/volume.sh&quot;sketchybar --add item apple.left left \           --set apple.left icon=Ô£ø \            icon.font=&quot;JetBrainsMono Nerd Font:Bold:16.0&quot; \            label.drawing=off \            padding_left=10 \            padding_right=10 \            click_script=&#39;open -a &quot;System Settings&quot;&#39;sketchybar --add event aerospace_workspace_changefor sid in $(aerospace list-workspaces --all); dosketchybar --add item space.$sid left \        --subscribe space.$sid aerospace_workspace_change \        --set space.$sid \        background.color=&quot;$ICON_COLOR&quot; \        width=25 \        background.corner_radius=6 \        icon.drawing=off \        background.height=20 \        background.drawing=off \        label=&quot;$sid&quot; \        click_script=&quot;aerospace workspace $sid&quot; \        script=&quot;$ITEM_DIR/aerospace.sh&quot;donePLUGIN_DIR=&quot;$HOME/.config/sketchybar/plugins&quot;  # make sure this is correctsketchybar --add item clock right \  --set clock update_freq=1 icon=Ôê∫ script=&quot;$PLUGIN_DIR/clock.sh&quot; \  padding_left=10 padding_right=10 \sketchybar --add item calendar right \  --set calendar update_freq=300 icon=ÔÑ≥ script=&quot;$PLUGIN_DIR/calendar.sh&quot; \  padding_left=10 padding_right=10 \sketchybar --add item battery right \  --set battery update_freq=1 script=&quot;$PLUGIN_DIR/battery.sh&quot; \  padding_left=10 padding_right=10 \  --subscribe battery system_woke power_source_change \sketchybar --add item volume right \  --set volume script=&quot;$PLUGIN_DIR/volume.sh&quot; \  padding_left=10 padding_right=10 \  --subscribe volume volume_change# sketchybar --add item chevron left \#           --set chevron icon=ÔÅî label.drawing=off \sketchybar --add item front_app center \           --set front_app icon.drawing=off script=&quot;$PLUGIN_DIR/front_app.sh&quot; \           --subscribe front_app front_app_switched#################### Finalizing Setup ####################sketchybar --hotload trueborders \  style=round \  width=6.0 \  hidpi=off \  active_color=0xffb4befe \  inactive_color=0xff45475asketchybar --updateecho &quot;sketchybar configuration loaded..&quot;</code></pre><p>aerospace.toml</p><blockquote></blockquote><p><code># Place a copy of this config to ~/.aerospace.toml</code></p><blockquote><p><code># After that, you can edit ~/.aerospace.toml to your liking</code></p><p><code># You can use it to add commands that run after login to macOS user session.</code></p><p><code># &#39;start-at-login&#39; needs to be &#39;true&#39; for &#39;after-login-command&#39; to work</code></p><p><code># Available commands:</code> <a href="https://nikitabobko.github.io/AeroSpace/commands"><code>https://nikitabobko.github.io/AeroSpace/commands</code></a></p><p><code>after-login-command = []</code></p><p><code># You can use it to add commands that run after AeroSpace startup.</code></p><p><code># &#39;after-startup-command&#39; is run after &#39;after-login-command&#39;</code></p><p><code># Available commands :</code> <a href="https://nikitabobko.github.io/AeroSpace/commands"><code>https://nikitabobko.github.io/AeroSpace/commands</code></a></p><p><code>after-startup-command = [</code></p><p><code>&#39;exec-and-forget sketchybar&#39;</code></p><p><code>]</code></p><p><code>exec-on-workspace-change = [</code></p><p><code>&quot;/bin/bash&quot;,</code></p><p><code>&quot;-c&quot;,</code></p><p><code>&quot;sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE&quot;</code></p><p><code>]</code></p><p><code># Start AeroSpace at login</code></p><p><code>start-at-login = true</code></p><p><code># Normalizations. See:</code> <a href="https://nikitabobko.github.io/AeroSpace/guide#normalization"><code>https://nikitabobko.github.io/AeroSpace/guide#normalization</code></a></p><p><code>enable-normalization-flatten-containers = false</code></p><p><code>enable-normalization-opposite-orientation-for-nested-containers = false</code></p><p><code># See:</code> <a href="https://nikitabobko.github.io/AeroSpace/guide#layouts"><code>https://nikitabobko.github.io/AeroSpace/guide#layouts</code></a></p><p><code># The &#39;accordion-padding&#39; specifies the size of accordion padding</code></p><p><code># You can set 0 to disable the padding feature</code></p><p><code>accordion-padding = 20</code></p><p><code># Possible values: tiles|accordion</code></p><p><code>default-root-container-layout = &#39;tiles&#39;</code></p><p><code># Possible values: horizontal|vertical|auto</code></p><p><code># &#39;auto&#39; means: wide monitor (anything wider than high) gets horizontal orientation,</code></p><p><code># tall monitor (anything higher than wide) gets vertical orientation</code></p><p><code>default-root-container-orientation = &#39;auto&#39;</code></p><p><code># Mouse follows focus when focused monitor changes</code></p><p><code># Drop it from your config, if you don&#39;t like this behavior</code></p><p><code># See</code> <a href="https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks"><code>https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks</code></a></p><p><code># See</code> <a href="https://nikitabobko.github.io/AeroSpace/commands#move-mouse"><code>https://nikitabobko.github.io/AeroSpace/commands#move-mouse</code></a></p><p><code># Fallback value (if you omit the key): on-focused-monitor-changed = []</code></p><p><code>on-focused-monitor-changed = [&#39;move-mouse monitor-lazy-center&#39;]</code></p><p><code># You can effectively turn off macOS &quot;Hide application&quot; (cmd-h) feature by toggling this flag</code></p><p><code># Useful if you don&#39;t use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key</code></p><p><code># Also see:</code> <a href="https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app"><code>https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app</code></a></p><p><code>automatically-unhide-macos-hidden-apps = false</code></p><p><code># Possible values: (qwerty|dvorak|colemak)</code></p><p><code># See</code> <a href="https://nikitabobko.github.io/AeroSpace/guide#key-mapping"><code>https://nikitabobko.github.io/AeroSpace/guide#key-mapping</code></a></p><p><code>[key-mapping]</code></p><p><code>preset = &#39;qwerty&#39;</code></p><p><code># Gaps between windows (inner-*) and between monitor edges (outer-*).</code></p><p><code># Possible values:</code></p><p><code># - Constant:</code>     <a href="http://gaps.outer.top"><code>gaps.outer.top</code></a> <code>= 8</code></p><p><code># - Per monitor:</code>  <a href="http://gaps.outer.top"><code>gaps.outer.top</code></a> <code>= [{ monitor.main = 16 }, { monitor.&quot;some-pattern&quot; = 32 }, 24]</code></p><p><code># In this example, 24 is a default value when there is no match.</code></p><p><code># Monitor pattern is the same as for &#39;workspace-to-monitor-force-assignment&#39;.</code></p><p><code># See:</code></p><p><code>#</code>                 <a href="https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors"><code>https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors</code></a></p><p><code>[gaps]</code></p><p><code>inner.horizontal = 12</code></p><p><code>inner.vertical = 12</code></p><p><code>outer.left = 12</code></p><p><code>outer.bottom = 12</code></p><p><a href="http://outer.top"><code>outer.top</code></a> <code>= 48</code></p><p><code>outer.right = 12</code></p><p><code># &#39;main&#39; binding mode declaration</code></p><p><code># See:</code> <a href="https://nikitabobko.github.io/AeroSpace/guide#binding-modes"><code>https://nikitabobko.github.io/AeroSpace/guide#binding-modes</code></a></p><p><code># &#39;main&#39; binding mode must be always presented</code></p><p><code># Fallback value (if you omit the key): mode.main.binding = {}</code></p><p><code>[mode.main.binding]</code></p><p><code># All possible keys:</code></p><p><code># - Letters. a, b, c, ..., z</code></p><p><code># - Numbers. 0, 1, 2, ..., 9</code></p><p><code># - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9</code></p><p><code># - F-keys. f1, f2, ..., f20</code></p><p><code># - Special keys. minus, equal, period, comma, slash, backslash, quote, semicolon,</code></p><p><code># backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,</code></p><p><code># backspace, tab, pageUp, pageDown, home, end, forwardDelete,</code></p><p><code># sectionSign (ISO keyboards only, european keyboards only)</code></p><p><code># - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,</code></p><p><code># keypadMinus, keypadMultiply, keypadPlus</code></p><p><code># - Arrows. left, down, up, right</code></p><p><code># All possible modifiers: cmd, alt, ctrl, shift</code></p><p><code># All possible commands:</code> <a href="https://nikitabobko.github.io/AeroSpace/commands"><code>https://nikitabobko.github.io/AeroSpace/commands</code></a></p><p><code># See:</code> <a href="https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget"><code>https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget</code></a></p><p><code># You can uncomment the following lines to open up terminal with alt + enter shortcut</code></p><p><code># (like in i3)</code></p><p><code># alt-enter = &#39;&#39;&#39;exec-and-forget osascript -e &#39;</code></p><p><code># tell application &quot;Terminal&quot;</code></p><p><code># do script</code></p><p><code># activate</code></p><p><code># end tell&#39;</code></p><p><code># &#39;&#39;&#39;</code></p><p><code># See:</code> <a href="https://nikitabobko.github.io/AeroSpace/commands#layout"><code>https://nikitabobko.github.io/AeroSpace/commands#layout</code></a></p><p><code>alt-slash = &#39;layout tiles horizontal vertical&#39;</code></p><p><code>alt-comma = &#39;layout accordion horizontal vertical&#39;</code></p><p><code># See:</code> <a href="https://nikitabobko.github.io/AeroSpace/commands#focus"><code>https://nikitabobko.github.io/AeroSpace/commands#focus</code></a></p><p><code>alt-h = &#39;focus left&#39;</code></p><p><code>alt-j = &#39;focus down&#39;</code></p><p><code>alt-k = &#39;focus up&#39;</code></p><p><code>alt-l = &#39;focus right&#39;</code></p><p><code># See:</code> <a href="https://nikitabobko.github.io/AeroSpace/commands#move"><code>https://nikitabobko.github.io/AeroSpace/commands#move</code></a></p><p><code>alt-shift-h = &#39;move left&#39;</code></p><p><code>alt-shift-j = &#39;move down&#39;</code></p><p><code>alt-shift-k = &#39;move up&#39;</code></p><p><code>alt-shift-l = &#39;move right&#39;</code></p><p><code># See:</code> <a href="https://nikitabobko.github.io/AeroSpace/commands#resize"><code>https://nikitabobko.github.io/AeroSpace/commands#resize</code></a></p><p><code>alt-minus = &#39;resize smart -50&#39;</code></p><p><code>alt-equal = &#39;resize smart +50&#39;</code></p><p><code># See:</code> <a href="https://nikitabobko.github.io/AeroSpace/commands#workspace"><code>https://nikitabobko.github.io/AeroSpace/commands#workspace</code></a></p><p><code>alt-1 = &#39;workspace 1&#39;</code></p><p><code>alt-2 = &#39;workspace 2&#39;</code></p><p><code>alt-3 = &#39;workspace 3&#39;</code></p><p><code>alt-4 = &#39;workspace 4&#39;</code></p><p><code>alt-5 = &#39;workspace 5&#39;</code></p><p><code>alt-6 = &#39;workspace 6&#39;</code></p><p><code>alt-7 = &#39;workspace 7&#39;</code></p><p><code>alt-8 = &#39;workspace 8&#39;</code></p><p><code>alt-9 = &#39;workspace 9&#39;</code></p><p><code># Deleted A-Z workspaces</code></p><p><code># See:</code> <a href="https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace"><code>https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace</code></a></p><p><code>alt-shift-1 = &#39;move-node-to-workspace 1&#39;</code></p><p><code>alt-shift-2 = &#39;move-node-to-workspace 2&#39;</code></p><p><code>alt-shift-3 = &#39;move-node-to-workspace 3&#39;</code></p><p><code>alt-shift-4 = &#39;move-node-to-workspace 4&#39;</code></p><p><code>alt-shift-5 = &#39;move-node-to-workspace 5&#39;</code></p><p><code>alt-shift-6 = &#39;move-node-to-workspace 6&#39;</code></p><p><code>alt-shift-7 = &#39;move-node-to-workspace 7&#39;</code></p><p><code>alt-shift-8 = &#39;move-node-to-workspace 8&#39;</code></p><p><code>alt-shift-9 = &#39;move-node-to-workspace 9&#39;</code></p><p><code># See:</code> <a href="https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth"><code>https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth</code></a></p><p><code>alt-tab = &#39;workspace-back-and-forth&#39;</code></p><p><code># See:</code> <a href="https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor"><code>https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor</code></a></p><p><code>alt-shift-tab = &#39;move-workspace-to-monitor --wrap-around next&#39;</code></p><p><code># See:</code> <a href="https://nikitabobko.github.io/AeroSpace/commands#mode"><code>https://nikitabobko.github.io/AeroSpace/commands#mode</code></a></p><p><code>alt-shift-semicolon = &#39;mode service&#39;</code></p><p><code># &#39;service&#39; binding mode declaration.</code></p><p><code># See:</code> <a href="https://nikitabobko.github.io/AeroSpace/guide#binding-modes"><code>https://nikitabobko.github.io/AeroSpace/guide#binding-modes</code></a></p><p><code>[mode.service.binding]</code></p><p><code>esc = [&#39;reload-config&#39;, &#39;mode main&#39;]</code></p><p><code>r = [&#39;flatten-workspace-tree&#39;, &#39;mode main&#39;] # reset layout</code></p><p><code>f = [&#39;layout floating tiling&#39;, &#39;mode main&#39;] # Toggle between floating and tiling layout</code></p><p><code>backspace = [&#39;close-all-windows-but-current&#39;, &#39;mode main&#39;]</code></p><p><code># sticky is not yet supported</code> <a href="https://github.com/nikitabobko/AeroSpace/issues/2"><code>https://github.com/nikitabobko/AeroSpace/issues/2</code></a></p><p><code>#s = [&#39;layout sticky tiling&#39;, &#39;mode main&#39;]</code></p><p><code>alt-shift-h = [&#39;join-with left&#39;, &#39;mode main&#39;]</code></p><p><code>alt-shift-j = [&#39;join-with down&#39;, &#39;mode main&#39;]</code></p><p><code>alt-shift-k = [&#39;join-with up&#39;, &#39;mode main&#39;]</code></p><p><code>alt-shift-l = [&#39;join-with right&#39;, &#39;mode main&#39;]</code></p><p><code>down = &#39;volume down&#39;</code></p><p><code>up = &#39;volume up&#39;</code></p><p><code>shift-down = [&#39;volume set 0&#39;, &#39;mode main&#39;]</code></p></blockquote><p><a href="http://aerospace.sh">aerospace.sh</a></p><pre><code>#!/usr/bin/env bash# make sure it&#39;s executable with:# chmod +x ~/.config/sketchybar/plugins/aerospace.shNAME=&quot;$1&quot;if [ &quot;$1&quot; = &quot;$FOCUSED_WORKSPACE&quot; ]; thensketchybar --set $NAME background.color=onelsesketchybar --set $NAME background.drawing=offfi</code></pre><p>Help would be much appreciated!</p></div><!-- SC_ON --></section><section class='separator separator-after-selftext'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='parsed-content'><div><p>Hello! I am having issues getting AS workspaces to display in Sketchybar </p><p>What I want to do is to have different workspace numbers be highlighted when I switch between workspaces </p><p>I am new to both of these, but I followed the guide which was offered in the AeroSpace docs and it still won't work. Below I attached all the relevant code </p><p>sketchybarrc </p><pre> #!/usr/bin/env bash source "$HOME/.config/sketchybar/plugins/variables.sh" # Loads all defined colors # General bar and defaults sketchybar --bar height=30 \ color="$BAR_COLOR" \ shadow="$SHADOW" \ position=top \ sticky=on \ padding_right=0 \ padding_left=0 \ corner_radius="$CORNER_RADIUS" \ y_offset=6 \ margin=6 \ blur_radius=20 \ notch_width=200 \ --default updates=when_shown \ icon.font="$FONT:Bold:13.5" \ icon.font="JetBrainsMono Nerd Font:Bold:13.0" \ label.font="JetBrainsMono Nerd Font:Bold:13.0" \ icon.color="$ICON_COLOR" \ icon.padding_left="$PADDINGS" \ icon.padding_right="$PADDINGS" \ label.color="$LABEL_COLOR" \ label.padding_left="$PADDINGS" \ label.padding_right="$PADDINGS" \ background.padding_right="$PADDINGS" \ background.padding_left="$PADDINGS" \ popup.background.border_width=1 \ popup.background.corner_radius=11 \ popup.background.border_color="$POPUP_BORDER_COLOR" \ popup.background.color="$POPUP_BACKGROUND_COLOR" \ popup.background.shadow.drawing="$SHADOW" # Left source "$ITEM_DIR/spaces.sh" source "$ITEM_DIR/aerospace.sh" source "$ITEM_DIR/front_app.sh" # Right source "$ITEM_DIR/clock.sh" source "$ITEM_DIR/calendar.sh" source "$ITEM_DIR/battery.sh" source "$ITEM_DIR/volume.sh" sketchybar --add item apple.left left \ --set apple.left icon=&#63743; \ icon.font="JetBrainsMono Nerd Font:Bold:16.0" \ label.drawing=off \ padding_left=10 \ padding_right=10 \ click_script='open -a "System Settings"' sketchybar --add event aerospace_workspace_change for sid in $( aerospace list-workspaces --all); do sketchybar --add item space.$sid left \ --subscribe space.$sid aerospace_workspace_change \ --set space.$sid \ background.color="$ICON_COLOR" \ width=25 \ background.corner_radius=6 \ icon.drawing=off \ background.height=20 \ background.drawing=off \ label="$sid" \ click_script="aerospace workspace $sid" \ script="$ITEM_DIR/aerospace.sh" done PLUGIN_DIR="$HOME/.config/sketchybar/plugins" # make sure this is correct sketchybar --add item clock right \ --set clock update_freq=1 icon=&#62522; script="$PLUGIN_DIR/clock.sh" \ padding_left=10 padding_right=10 \ sketchybar --add item calendar right \ --set calendar update_freq=300 icon=&#61747; script="$PLUGIN_DIR/calendar.sh" \ padding_left=10 padding_right=10 \ sketchybar --add item battery right \ --set battery update_freq=1 script="$PLUGIN_DIR/battery.sh" \ padding_left=10 padding_right=10 \ --subscribe battery system_woke power_source_change \ sketchybar --add item volume right \ --set volume script="$PLUGIN_DIR/volume.sh" \ padding_left=10 padding_right=10 \ --subscribe volume volume_change # sketchybar --add item chevron left \ # --set chevron icon=&#61524; label.drawing=off \ sketchybar --add item front_app center \ --set front_app icon.drawing=off script="$PLUGIN_DIR/front_app.sh" \ --subscribe front_app front_app_switched #################### Finalizing Setup #################### sketchybar --hotload true borders \ style=round \ width=6.0 \ hidpi=off \ active_color=0xffb4befe \ inactive_color=0xff45475a sketchybar --update echo "sketchybar configuration loaded.."</pre><p>aerospace.toml </p><blockquote> </blockquote><p><code># Place a copy of this config to ~/.aerospace.toml</code> </p><blockquote><p><code># After that, you can edit ~/.aerospace.toml to your liking</code> </p></blockquote><blockquote> </blockquote><blockquote><p><code># You can use it to add commands that run after login to macOS user session.</code> </p></blockquote><blockquote><p><code># 'start-at-login' needs to be 'true' for 'after-login-command' to work</code> </p></blockquote><blockquote><p><code># Available commands:</code> <a href="https://nikitabobko.github.io/AeroSpace/commands"><code>https://nikitabobko.github.io/AeroSpace/commands</code></a> </p></blockquote><blockquote><p><code>after-login-command = []</code> </p></blockquote><blockquote> </blockquote><blockquote><p><code># You can use it to add commands that run after AeroSpace startup.</code> </p></blockquote><blockquote><p><code># 'after-startup-command' is run after 'after-login-command'</code> </p></blockquote><blockquote><p><code># Available commands :</code> <a href="https://nikitabobko.github.io/AeroSpace/commands"><code>https://nikitabobko.github.io/AeroSpace/commands</code></a> </p></blockquote><blockquote><p><code>after-startup-command = [</code> </p></blockquote><blockquote><p><code>'exec-and-forget sketchybar'</code> </p></blockquote><blockquote><p><code>]</code> </p></blockquote><blockquote> </blockquote><blockquote><p><code>exec-on-workspace-change = [</code> </p></blockquote><blockquote><p><code>"/bin/bash",</code> </p></blockquote><blockquote><p><code>"-c",</code> </p></blockquote><blockquote><p><code>"sketchybar --trigger aerospace_workspace_change FOCUSED_WORKSPACE=$AEROSPACE_FOCUSED_WORKSPACE"</code> </p></blockquote><blockquote><p><code>]</code> </p></blockquote><blockquote> </blockquote><blockquote><p><code># Start AeroSpace at login</code> </p></blockquote><blockquote><p><code>start-at-login = true</code> </p></blockquote><blockquote> </blockquote><blockquote><p><code># Normalizations. See:</code> <a href="https://nikitabobko.github.io/AeroSpace/guide#normalization"><code>https://nikitabobko.github.io/AeroSpace/guide#normalization</code></a> </p></blockquote><blockquote><p><code>enable-normalization-flatten-containers = false</code> </p></blockquote><blockquote><p><code>enable-normalization-opposite-orientation-for-nested-containers = false</code> </p></blockquote><blockquote> </blockquote><blockquote><p><code># See:</code> <a href="https://nikitabobko.github.io/AeroSpace/guide#layouts"><code>https://nikitabobko.github.io/AeroSpace/guide#layouts</code></a> </p></blockquote><blockquote><p><code># The 'accordion-padding' specifies the size of accordion padding</code> </p></blockquote><blockquote><p><code># You can set 0 to disable the padding feature</code> </p></blockquote><blockquote><p><code>accordion-padding = 20</code> </p></blockquote><blockquote> </blockquote><blockquote><p><code># Possible values: tiles|accordion</code> </p></blockquote><blockquote><p><code>default-root-container-layout = 'tiles'</code> </p></blockquote><blockquote> </blockquote><blockquote><p><code># Possible values: horizontal|vertical|auto</code> </p></blockquote><blockquote><p><code># 'auto' means: wide monitor (anything wider than high) gets horizontal orientation,</code> </p></blockquote><blockquote><p><code># tall monitor (anything higher than wide) gets vertical orientation</code> </p></blockquote><blockquote><p><code>default-root-container-orientation = 'auto'</code> </p></blockquote><blockquote> </blockquote><blockquote><p><code># Mouse follows focus when focused monitor changes</code> </p></blockquote><blockquote><p><code># Drop it from your config, if you don't like this behavior</code> </p></blockquote><blockquote><p><code># See</code> <a href="https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks"><code>https://nikitabobko.github.io/AeroSpace/guide#on-focus-changed-callbacks</code></a> </p></blockquote><blockquote><p><code># See</code> <a href="https://nikitabobko.github.io/AeroSpace/commands#move-mouse"><code>https://nikitabobko.github.io/AeroSpace/commands#move-mouse</code></a> </p></blockquote><blockquote><p><code># Fallback value (if you omit the key): on-focused-monitor-changed = []</code> </p></blockquote><blockquote><p><code>on-focused-monitor-changed = ['move-mouse monitor-lazy-center']</code> </p></blockquote><blockquote> </blockquote><blockquote><p><code># You can effectively turn off macOS "Hide application" (cmd-h) feature by toggling this flag</code> </p></blockquote><blockquote><p><code># Useful if you don't use this macOS feature, but accidentally hit cmd-h or cmd-alt-h key</code> </p></blockquote><blockquote><p><code># Also see:</code> <a href="https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app"><code>https://nikitabobko.github.io/AeroSpace/goodies#disable-hide-app</code></a> </p></blockquote><blockquote><p><code>automatically-unhide-macos-hidden-apps = false</code> </p></blockquote><blockquote> </blockquote><blockquote><p><code># Possible values: (qwerty|dvorak|colemak)</code> </p></blockquote><blockquote><p><code># See</code> <a href="https://nikitabobko.github.io/AeroSpace/guide#key-mapping"><code>https://nikitabobko.github.io/AeroSpace/guide#key-mapping</code></a> </p></blockquote><blockquote><p><code>[key-mapping]</code> </p></blockquote><blockquote><p><code>preset = 'qwerty'</code> </p></blockquote><blockquote> </blockquote><blockquote><p><code># Gaps between windows (inner-*) and between monitor edges (outer-*).</code> </p></blockquote><blockquote><p><code># Possible values:</code> </p></blockquote><blockquote><p><code># - Constant:</code> <a href="http://gaps.outer.top"><code>gaps.outer.top</code></a> <code>= 8</code> </p></blockquote><blockquote><p><code># - Per monitor:</code> <a href="http://gaps.outer.top"><code>gaps.outer.top</code></a> <code>= [{ monitor.main = 16 }, { monitor."some-pattern" = 32 }, 24]</code> </p></blockquote><blockquote><p><code># In this example, 24 is a default value when there is no match.</code> </p></blockquote><blockquote><p><code># Monitor pattern is the same as for 'workspace-to-monitor-force-assignment'.</code> </p></blockquote><blockquote><p><code># See:</code> </p></blockquote><blockquote><p><code>#</code> <a href="https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors"><code>https://nikitabobko.github.io/AeroSpace/guide#assign-workspaces-to-monitors</code></a> </p></blockquote><blockquote><p><code>[gaps]</code> </p></blockquote><blockquote><p><code>inner.horizontal = 12</code> </p></blockquote><blockquote><p><code>inner.vertical = 12</code> </p></blockquote><blockquote><p><code>outer.left = 12</code> </p></blockquote><blockquote><p><code>outer.bottom = 12</code> </p></blockquote><blockquote><p><a href="http://outer.top"><code>outer.top</code></a> <code>= 48</code> </p></blockquote><blockquote><p><code>outer.right = 12</code> </p></blockquote><blockquote> </blockquote><blockquote><p><code># 'main' binding mode declaration</code> </p></blockquote><blockquote><p><code># See:</code> <a href="https://nikitabobko.github.io/AeroSpace/guide#binding-modes"><code>https://nikitabobko.github.io/AeroSpace/guide#binding-modes</code></a> </p></blockquote><blockquote><p><code># 'main' binding mode must be always presented</code> </p></blockquote><blockquote><p><code># Fallback value (if you omit the key): mode.main.binding = {}</code> </p></blockquote><blockquote><p><code>[mode.main.binding]</code> </p></blockquote><blockquote> </blockquote><blockquote><p><code># All possible keys:</code> </p></blockquote><blockquote><p><code># - Letters. a, b, c, ..., z</code> </p></blockquote><blockquote><p><code># - Numbers. 0, 1, 2, ..., 9</code> </p></blockquote><blockquote><p><code># - Keypad numbers. keypad0, keypad1, keypad2, ..., keypad9</code> </p></blockquote><blockquote><p><code># - F-keys. f1, f2, ..., f20</code> </p></blockquote><blockquote><p><code># - Special keys. minus, equal, period, comma, slash, backslash, quote, semicolon,</code> </p></blockquote><blockquote><p><code># backtick, leftSquareBracket, rightSquareBracket, space, enter, esc,</code> </p></blockquote><blockquote><p><code># backspace, tab, pageUp, pageDown, home, end, forwardDelete,</code> </p></blockquote><blockquote><p><code># sectionSign (ISO keyboards only, european keyboards only)</code> </p></blockquote><blockquote><p><code># - Keypad special. keypadClear, keypadDecimalMark, keypadDivide, keypadEnter, keypadEqual,</code> </p></blockquote><blockquote><p><code># keypadMinus, keypadMultiply, keypadPlus</code> </p></blockquote><blockquote><p><code># - Arrows. left, down, up, right</code> </p></blockquote><blockquote> </blockquote><blockquote><p><code># All possible modifiers: cmd, alt, ctrl, shift</code> </p></blockquote><blockquote> </blockquote><blockquote><p><code># All possible commands:</code> <a href="https://nikitabobko.github.io/AeroSpace/commands"><code>https://nikitabobko.github.io/AeroSpace/commands</code></a> </p></blockquote><blockquote> </blockquote><blockquote><p><code># See:</code> <a href="https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget"><code>https://nikitabobko.github.io/AeroSpace/commands#exec-and-forget</code></a> </p></blockquote><blockquote><p><code># You can uncomment the following lines to open up terminal with alt + enter shortcut</code> </p></blockquote><blockquote><p><code># (like in i3)</code> </p></blockquote><blockquote><p><code># alt-enter = '''exec-and-forget osascript -e '</code> </p></blockquote><blockquote><p><code># tell application "Terminal"</code> </p></blockquote><blockquote><p><code># do script</code> </p></blockquote><blockquote><p><code># activate</code> </p></blockquote><blockquote><p><code># end tell'</code> </p></blockquote><blockquote><p><code># '''</code> </p></blockquote><blockquote> </blockquote><blockquote><p><code># See:</code> <a href="https://nikitabobko.github.io/AeroSpace/commands#layout"><code>https://nikitabobko.github.io/AeroSpace/commands#layout</code></a> </p></blockquote><blockquote><p><code>alt-slash = 'layout tiles horizontal vertical'</code> </p></blockquote><blockquote><p><code>alt-comma = 'layout accordion horizontal vertical'</code> </p></blockquote><blockquote> </blockquote><blockquote><p><code># See:</code> <a href="https://nikitabobko.github.io/AeroSpace/commands#focus"><code>https://nikitabobko.github.io/AeroSpace/commands#focus</code></a> </p></blockquote><blockquote><p><code>alt-h = 'focus left'</code> </p></blockquote><blockquote><p><code>alt-j = 'focus down'</code> </p></blockquote><blockquote><p><code>alt-k = 'focus up'</code> </p></blockquote><blockquote><p><code>alt-l = 'focus right'</code> </p></blockquote><blockquote> </blockquote><blockquote><p><code># See:</code> <a href="https://nikitabobko.github.io/AeroSpace/commands#move"><code>https://nikitabobko.github.io/AeroSpace/commands#move</code></a> </p></blockquote><blockquote><p><code>alt-shift-h = 'move left'</code> </p></blockquote><blockquote><p><code>alt-shift-j = 'move down'</code> </p></blockquote><blockquote><p><code>alt-shift-k = 'move up'</code> </p></blockquote><blockquote><p><code>alt-shift-l = 'move right'</code> </p></blockquote><blockquote> </blockquote><blockquote><p><code># See:</code> <a href="https://nikitabobko.github.io/AeroSpace/commands#resize"><code>https://nikitabobko.github.io/AeroSpace/commands#resize</code></a> </p></blockquote><blockquote><p><code>alt-minus = 'resize smart -50'</code> </p></blockquote><blockquote><p><code>alt-equal = 'resize smart +50'</code> </p></blockquote><blockquote> </blockquote><blockquote><p><code># See:</code> <a href="https://nikitabobko.github.io/AeroSpace/commands#workspace"><code>https://nikitabobko.github.io/AeroSpace/commands#workspace</code></a> </p></blockquote><blockquote><p><code>alt-1 = 'workspace 1'</code> </p></blockquote><blockquote><p><code>alt-2 = 'workspace 2'</code> </p></blockquote><blockquote><p><code>alt-3 = 'workspace 3'</code> </p></blockquote><blockquote><p><code>alt-4 = 'workspace 4'</code> </p></blockquote><blockquote><p><code>alt-5 = 'workspace 5'</code> </p></blockquote><blockquote><p><code>alt-6 = 'workspace 6'</code> </p></blockquote><blockquote><p><code>alt-7 = 'workspace 7'</code> </p></blockquote><blockquote><p><code>alt-8 = 'workspace 8'</code> </p></blockquote><blockquote><p><code>alt-9 = 'workspace 9'</code> </p></blockquote><blockquote><p><code># Deleted A-Z workspaces</code> </p></blockquote><blockquote> </blockquote><blockquote><p><code># See:</code> <a href="https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace"><code>https://nikitabobko.github.io/AeroSpace/commands#move-node-to-workspace</code></a> </p></blockquote><blockquote><p><code>alt-shift-1 = 'move-node-to-workspace 1'</code> </p></blockquote><blockquote><p><code>alt-shift-2 = 'move-node-to-workspace 2'</code> </p></blockquote><blockquote><p><code>alt-shift-3 = 'move-node-to-workspace 3'</code> </p></blockquote><blockquote><p><code>alt-shift-4 = 'move-node-to-workspace 4'</code> </p></blockquote><blockquote><p><code>alt-shift-5 = 'move-node-to-workspace 5'</code> </p></blockquote><blockquote><p><code>alt-shift-6 = 'move-node-to-workspace 6'</code> </p></blockquote><blockquote><p><code>alt-shift-7 = 'move-node-to-workspace 7'</code> </p></blockquote><blockquote><p><code>alt-shift-8 = 'move-node-to-workspace 8'</code> </p></blockquote><blockquote><p><code>alt-shift-9 = 'move-node-to-workspace 9'</code> </p></blockquote><blockquote> </blockquote><blockquote><p><code># See:</code> <a href="https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth"><code>https://nikitabobko.github.io/AeroSpace/commands#workspace-back-and-forth</code></a> </p></blockquote><blockquote><p><code>alt-tab = 'workspace-back-and-forth'</code> </p></blockquote><blockquote><p><code># See:</code> <a href="https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor"><code>https://nikitabobko.github.io/AeroSpace/commands#move-workspace-to-monitor</code></a> </p></blockquote><blockquote><p><code>alt-shift-tab = 'move-workspace-to-monitor --wrap-around next'</code> </p></blockquote><blockquote> </blockquote><blockquote><p><code># See:</code> <a href="https://nikitabobko.github.io/AeroSpace/commands#mode"><code>https://nikitabobko.github.io/AeroSpace/commands#mode</code></a> </p></blockquote><blockquote><p><code>alt-shift-semicolon = 'mode service'</code> </p></blockquote><blockquote> </blockquote><blockquote><p><code># 'service' binding mode declaration.</code> </p></blockquote><blockquote><p><code># See:</code> <a href="https://nikitabobko.github.io/AeroSpace/guide#binding-modes"><code>https://nikitabobko.github.io/AeroSpace/guide#binding-modes</code></a> </p></blockquote><blockquote><p><code>[mode.service.binding]</code> </p></blockquote><blockquote><p><code>esc = ['reload-config', 'mode main']</code> </p></blockquote><blockquote><p><code>r = ['flatten-workspace-tree', 'mode main'] # reset layout</code> </p></blockquote><blockquote><p><code>f = ['layout floating tiling', 'mode main'] # Toggle between floating and tiling layout</code> </p></blockquote><blockquote><p><code>backspace = ['close-all-windows-but-current', 'mode main']</code> </p></blockquote><blockquote> </blockquote><blockquote><p><code># sticky is not yet supported</code> <a href="https://github.com/nikitabobko/AeroSpace/issues/2"><code>https://github.com/nikitabobko/AeroSpace/issues/2</code></a> </p></blockquote><blockquote><p><code>#s = ['layout sticky tiling', 'mode main']</code> </p></blockquote><blockquote> </blockquote><blockquote><p><code>alt-shift-h = ['join-with left', 'mode main']</code> </p></blockquote><blockquote><p><code>alt-shift-j = ['join-with down', 'mode main']</code> </p></blockquote><blockquote><p><code>alt-shift-k = ['join-with up', 'mode main']</code> </p></blockquote><blockquote><p><code>alt-shift-l = ['join-with right', 'mode main']</code> </p></blockquote><blockquote> </blockquote><blockquote><p><code>down = 'volume down'</code> </p></blockquote><blockquote><p><code>up = 'volume up'</code> </p></blockquote><blockquote><p><code>shift-down = ['volume set 0', 'mode main']</code> </p></blockquote><p><a href="http://aerospace.sh">aerospace.sh</a> </p><pre> #!/usr/bin/env bash # make sure it's executable with: # chmod +x ~/.config/sketchybar/plugins/aerospace.sh NAME=" $1 " if [ " $1 " = "$FOCUSED_WORKSPACE" ]; then sketchybar --set $NAME background.color=on else sketchybar --set $NAME background.drawing=off fi</pre><p>Help would be much appreciated! </p></div></section>]]></description><pubDate>Fri, 30 May 2025 04:06:17 +0530</pubDate></item><item><link>https://v.redd.it/414baqnlbj3f1</link><title>Song + Video I made using samples from AT&amp;amp;T UNIX videos (Video)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1kxiukt/song_video_i_made_using_samples_from_att_unix/</guid><comments>https://www.reddit.com/r/unix/comments/1kxiukt/song_video_i_made_using_samples_from_att_unix/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p><a href='https://www.reddit.com/r/unix/comments/1kxiukt/song_video_i_made_using_samples_from_att_unix/'>Post permalink</a></p></section><section class='embedded-media'><video controls preload='auto' autoplay='false'><source src='https://v.redd.it/414baqnlbj3f1/HLSPlaylist.m3u8?a=1760173886%2CMjljNjlmOTc3OGI3YjAzOTdiNzNlZmYwOWNiMTMzZmMwYTMxMDQzMTJhNTBhNzY0NjU2NTNhMjFmOTU2MmZkYw%3D%3D&amp;v=1&amp;f=sd' type='video/mp4' width='1440' height='1080'><img src='' alt='' /></video></section>]]></description><pubDate>Wed, 28 May 2025 20:11:49 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1kww6jk/i_need_help_using_an_x86_port_of_v7_unix/</link><title>I need help using an x86 port of V7 unix.</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1kww6jk/i_need_help_using_an_x86_port_of_v7_unix/</guid><comments>https://www.reddit.com/r/unix/comments/1kww6jk/i_need_help_using_an_x86_port_of_v7_unix/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1kww6jk/i_need_help_using_an_x86_port_of_v7_unix/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>Ok, so I wanted to see if there is any of them, and luckily enough I found it, called V7/x86 (available at <a href="http://www.nordier.com">www.nordier.com</a> ). But, I can&#39;t partition the disk to enlarge the root partition. The partitioner is called ptdisk, but man ptdisk shows but piping it to more gives an error saying &quot;no space left on device 0/56&quot;.</p></div><!-- SC_ON --></section>]]></description><pubDate>Wed, 28 May 2025 00:51:02 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1kwltp2/smenu_v150_released/</link><title>smenu v1.5.0 released.</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1kwltp2/smenu_v150_released/</guid><comments>https://www.reddit.com/r/unix/comments/1kwltp2/smenu_v150_released/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1kwltp2/smenu_v150_released/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>TL;DR: This is a command-line tool that generates interactive, visual user interfaces in a terminal to facilitate user interaction using the keyboard or mouse.</p><p>It started out as a lightweight, flexible terminal menu generator, but quickly evolved into a powerful, versatile command-line selection tool for interactive or scripted use.</p><p>smenu makes it easy to navigate and select words from standard input or a file using a user-friendly text interface. The selection is sent to standard output for further processing.</p><p>Tested on Linux and FreeBSD, it should work on other UNIX and similar platforms.</p><p>You can get ithere: <a href="https://github.com/p-gen/smenu">https://github.com/p-gen/smenu</a></p><p>Changes: <a href="https://github.com/p-gen/smenu/releases/tag/v1.5.0">https://github.com/p-gen/smenu/releases/tag/v1.5.0</a></p></div><!-- SC_ON --></section>]]></description><pubDate>Tue, 27 May 2025 17:50:13 +0530</pubDate></item><item><link>https://www.youtube.com/watch?v=E3PKZbdbZpQ</link><title>Oracle Solaris 11.4.81 CBE for enthusiasts how to install and use - VNC server (youtube.com)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1kua2rn/oracle_solaris_11481_cbe_for_enthusiasts_how_to/</guid><comments>https://www.reddit.com/r/unix/comments/1kua2rn/oracle_solaris_11481_cbe_for_enthusiasts_how_to/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p><a href='https://www.reddit.com/r/unix/comments/1kua2rn/oracle_solaris_11481_cbe_for_enthusiasts_how_to/'>Post permalink</a></p></section><section class='embedded-media'><iframe width="356" height="200" src="https://www.youtube.com/embed/E3PKZbdbZpQ?feature=oembed&enablejsapi=1" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen title="Oracle Solaris 11.4.81 CBE for enthusiasts how to install and use - VNC server - May 2025 - 2e019645"></iframe></section>]]></description><pubDate>Sat, 24 May 2025 17:37:09 +0530</pubDate></item><item><link>https://www.youtube.com/watch?v=54hrLTpsO5g</link><title>Kubrick on Unix (youtube.com)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1kqs4m9/kubrick_on_unix/</guid><comments>https://www.reddit.com/r/unix/comments/1kqs4m9/kubrick_on_unix/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p><a href='https://www.reddit.com/r/unix/comments/1kqs4m9/kubrick_on_unix/'>Post permalink</a></p></section><section class='embedded-media'><iframe width="267" height="200" src="https://www.youtube.com/embed/54hrLTpsO5g?feature=oembed&enablejsapi=1" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen title="Stanley Kubrick 1983"></iframe></section>]]></description><pubDate>Tue, 20 May 2025 06:19:52 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1kp7tr6/isnt_macos_perfect_as_second_unix_like_os/</link><title>Isn‚Äôt macOS perfect as second unix like os?</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1kp7tr6/isnt_macos_perfect_as_second_unix_like_os/</guid><comments>https://www.reddit.com/r/unix/comments/1kp7tr6/isnt_macos_perfect_as_second_unix_like_os/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1kp7tr6/isnt_macos_perfect_as_second_unix_like_os/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>One day I needed a laptop. I didn‚Äôt want to setup another perfect arch. I had looked for something interesting: the MacBook. It has everything I need: a cool de? - here! Terminal? - kitty is here. Package manager? - brew install *. It was perfect when I bought it. I turned it on, logged in to my account, set wallpaper, installed brew, kitty, used my configs for everything and it works perfectly! </p><p>My user experience is brilliant. It‚Äôs like arch with de, but it works stable without my participation. Why everyone hates macOS? It has everything to be perfect unix, and even very optimised windows emulator to use some windows-only programs. </p><p>Some questions to discuss:1. I think macOS is the way to show unix/linux to normal people, isn‚Äôt it?</p><ol><li>Is macOS unfairly hated?</li></ol><p>Upd:macOS and most of Linux systems use bash or zsh, so you can learn the terminal in user-friendly environment. By having some terminal knowledge u can install Linux on your pc and enjoy it more</p></div><!-- SC_ON --></section>]]></description><pubDate>Sun, 18 May 2025 06:19:21 +0530</pubDate></item><item><link>https://www.reddit.com/r/softwaredevelopment/comments/1kml8tl/application_development_starter_kit_for_c/</link><title>UNIX/Linux Application development starter kit for C programmer</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1kmleqa/unixlinux_application_development_starter_kit_for/</guid><comments>https://www.reddit.com/r/unix/comments/1kmleqa/unixlinux_application_development_starter_kit_for/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 2 min | <a href='https://www.reddit.com/r/unix/comments/1kmleqa/unixlinux_application_development_starter_kit_for/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>I just know C and stdc.</p><p>I want to development an GUI-based application specifically for UNIX/Linux systems (atleast for now). Suggest me a list of things that I need to learn (like what GUI library I should use, what tool to use for compiling configuration, etc). Keep the list minimal (as I&#39;m learning, I want to know what are the difficulties that occur using those minimal things, and then want to know how other tools solve those problems).</p></div><!-- SC_ON --></section><section class='separator separator-after-selftext'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='parsed-content'><div><p><span> <span> <faceplate-tracker> <shreddit-async-loader> <faceplate-hovercard> <a href="https://www.reddit.com/r/softwaredevelopment/">r/softwaredevelopment</a><div><div><p><span> <faceplate-tracker> <a href="https://www.reddit.com/r/softwaredevelopment/">r/softwaredevelopment</a> </faceplate-tracker> </span></p><faceplate-tracker> <shreddit-join-button></shreddit-join-button> </faceplate-tracker> </div><p>Software development methodologies, techniques, and tools. Not to be confused with programming. Covering Agile, RUP, Waterfall, Crystal, Extreme Programming, Scrum, Lean, Kanban and more. </p><hr><p><span> <span>Members</span> </span> <span> <span> <span>Online</span> </span> </span> </p></div></faceplate-hovercard> </shreddit-async-loader> </faceplate-tracker> </span> <span>&bull;</span> <faceplate-timeago></faceplate-timeago> </span></p><div><p><span><div><faceplate-hovercard> <faceplate-tracker><a href="https://www.reddit.com/user/running-hr/">running-hr</a></faceplate-tracker> </faceplate-hovercard> </div></span></p><shreddit-async-loader> <shreddit-distinguished-post-tags> </shreddit-distinguished-post-tags> </shreddit-async-loader> </div></div></section>]]></description><pubDate>Wed, 14 May 2025 23:10:12 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1kly16z/new_cli_alias_manager_written_in_go_nicksh/</link><title>New CLI alias manager written in Go: nicksh</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1kly16z/new_cli_alias_manager_written_in_go_nicksh/</guid><comments>https://www.reddit.com/r/unix/comments/1kly16z/new_cli_alias_manager_written_in_go_nicksh/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1kly16z/new_cli_alias_manager_written_in_go_nicksh/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p><code>nicksh</code>¬†is a command-line interface (CLI) tool built with Go that aims to streamline your shell experience by:</p><ul><li><strong>Analyzing</strong>¬†your shell history to identify frequently used commands.</li><li><strong>Suggesting</strong>¬†concise and intuitive aliases for these commands.</li><li><strong>Interactively adding</strong>¬†suggested or predefined aliases to your shell configuration.</li><li><strong>Managing</strong>¬†aliases in a dedicated directory (<code>~/.nicksh/</code>) for easy sourcing.</li><li><strong>Leveraging</strong>¬†<code>fzf</code>¬†(if available) for a powerful interactive selection experience, with fallback to numeric selection.</li></ul><p>Project:¬†<a href="https://github.com/AntonioJCosta/nicksh">https://github.com/AntonioJCosta/nicksh</a></p></div><!-- SC_ON --></section>]]></description><pubDate>Wed, 14 May 2025 03:00:01 +0530</pubDate></item><item><link>https://www.reddit.com/gallery/1kjwma8</link><title>found this book in college library (Gallery)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1kjwma8/found_this_book_in_college_library/</guid><comments>https://www.reddit.com/r/unix/comments/1kjwma8/found_this_book_in_college_library/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p><a href='https://www.reddit.com/r/unix/comments/1kjwma8/found_this_book_in_college_library/'>Post permalink</a></p></section><section class='embedded-media'><p><img src="https://preview.redd.it/chz39prga40f1.jpg?width=2944&amp;format=pjpg&amp;auto=webp&amp;s=2207777478445c1db074d9fc17d5757177de76d8" height="2944" width="2944" /></p><p><img src="https://preview.redd.it/4rumd0sga40f1.jpg?width=2944&amp;format=pjpg&amp;auto=webp&amp;s=dd5879e64cd7871c9e5598339707c2c03613ef24" height="2944" width="2944" /></p></section>]]></description><pubDate>Sun, 11 May 2025 14:26:17 +0530</pubDate></item><item><link>https://i.redd.it/us8r3ojkspze1.jpeg</link><title>Intel SVR4.2 x86 (i.redd.it)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1kid9h0/intel_svr42_x86/</guid><comments>https://www.reddit.com/r/unix/comments/1kid9h0/intel_svr42_x86/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1kid9h0/intel_svr42_x86/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>Intel SVR4.2 on 86box running emulation using a 486SX @ 66 MHz on my W510 Thinkpad. Got an HDMI to Analog converter using the yellow cable in to BNC on my Sony PVM-91. 7 hour install swapping out 50+ (virtual) floppies, also excuse me for fumbling the commandline but man am I glad how it turned out üôå</p></div><!-- SC_ON --></section><section class='preview-image'><p>&nbsp;</p><img src='https://i.redd.it/us8r3ojkspze1.jpeg' /></section>]]></description><pubDate>Fri, 09 May 2025 13:40:54 +0530</pubDate></item><item><link>https://www.reddit.com/gallery/1kiaiht</link><title>Briefcase PC (Gallery)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1kiaiht/briefcase_pc/</guid><comments>https://www.reddit.com/r/unix/comments/1kiaiht/briefcase_pc/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1kiaiht/briefcase_pc/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>A modular &quot;laptop&quot; built from customizable components:</p><ul><li>Minisforum UM680 Slim (mini PC)</li><li>Corne V4 that I bought from AliExpress   for $50ish (split keyboard)</li><li>Anker Prime Power Bank (the fancier one with 27650mAh and 250W)</li><li>Acqua di Parma pouch, repurposed from a free Etihad Airways business class amenity kit</li><li>Cheap Full HD portable display</li><li>Custom Briecase, precisely built via Alibaba to match the screen&#39;s dimensions</li><li>No mouse included (I threw all of mine away. Who needs them anyway?)</li></ul><p>It&#39;s definitely not for everyone, since it&#39;s probably heavier and bulkier than a 20 year old laptop but I freaking love that briefcase!‚ùÑÔ∏è</p><p>Oh, and it runs on NixOS with home-manager btw. (‚ùóÔ∏èmost important‚ùóÔ∏è)</p><p>Thinking of building or purchasing something like this? Leave a comment! </p></div><!-- SC_ON --></section><section class='embedded-media'><p><img src="https://preview.redd.it/mce6os5ouoze1.jpg?width=4032&amp;format=pjpg&amp;auto=webp&amp;s=ee04273e53f130a7d58f94d0323f096cba659d8e" height="3024" width="4032" /></p><p><img src="https://preview.redd.it/8mb7ot5ouoze1.jpg?width=3586&amp;format=pjpg&amp;auto=webp&amp;s=b7b75bed9c4d25a678974a2af9124d120a42f5ca" height="2690" width="3586" /></p><p><img src="https://preview.redd.it/v6icns5ouoze1.jpg?width=4032&amp;format=pjpg&amp;auto=webp&amp;s=f35f4f72f4ba771a999bbd9c2af80dbf8142e4da" height="3024" width="4032" /></p><p><img src="https://preview.redd.it/oo88eu5ouoze1.jpg?width=2657&amp;format=pjpg&amp;auto=webp&amp;s=28e67335be439fc798fcca5fcdcd5cfd3843b761" height="1948" width="2657" /></p><p><img src="https://preview.redd.it/o155sr5ouoze1.jpg?width=3926&amp;format=pjpg&amp;auto=webp&amp;s=2a1419398018eb162eb86dc685bae32193a66887" height="2944" width="3926" /></p><p><img src="https://preview.redd.it/bx3xx16ouoze1.jpg?width=4032&amp;format=pjpg&amp;auto=webp&amp;s=0b9b5c5de8c93a486e832a34b7a0e5d995fbe5e3" height="3024" width="4032" /></p><p><img src="https://preview.redd.it/bgj0ut5ouoze1.jpg?width=3993&amp;format=pjpg&amp;auto=webp&amp;s=72617dd94e23f9981467f149c6d520671a952fe7" height="2995" width="3993" /></p><p><img src="https://preview.redd.it/5c0izs5ouoze1.jpg?width=4032&amp;format=pjpg&amp;auto=webp&amp;s=85a59b3c0b6b245537d3bf491a790780bf2f0f9d" height="3024" width="4032" /></p></section>]]></description><pubDate>Fri, 09 May 2025 10:30:57 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1ki0r8p/help_needed_to_mount_usb_drive_in_solaris_11/</link><title>Help needed to mount USB drive in Solaris 11</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1ki0r8p/help_needed_to_mount_usb_drive_in_solaris_11/</guid><comments>https://www.reddit.com/r/unix/comments/1ki0r8p/help_needed_to_mount_usb_drive_in_solaris_11/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 2 min | <a href='https://www.reddit.com/r/unix/comments/1ki0r8p/help_needed_to_mount_usb_drive_in_solaris_11/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>Hi guys,</p><p>Need help please to mount a Solaris 9 disk via USB in a Solaris 11 VM. This is so I can get my files off the Solaris 9 disk that I haven&#39;t seen in years. </p><p>Following this doc: </p><p><a href="https://docs.oracle.com/cd/E53394_01/html/E54782/devusbtasks-22.html">https://docs.oracle.com/cd/E53394_01/html/E54782/devusbtasks-22.html</a></p><p>I got to this point:</p><p>root@solaris:~$ rmformat</p><p>Looking for devices...</p><ol><li>Logical Node: /dev/rdsk/c4t1d0p0</li></ol><p>Physical Node: /pci@0,0/pci15ad,790@11/pci15ad,7e0@5/cdrom@1,0</p><p>Connected Device: NECVMWar VMware SATA CD01 1.00</p><p>Device Type: &lt;Unknown&gt;</p><p>Bus: &lt;Unknown&gt;</p><p>Size: &lt;Unknown&gt;</p><p>Label: &lt;Unknown&gt;</p><p>Access permissions: &lt;Unknown&gt;</p><ol><li>Logical Node: /dev/rdsk/c6t0d0p0</li></ol><p>Physical Node: /pci@0,0/pci15ad,790@11/pci15ad,770@3/storage@1/disk@0,0</p><p>Connected Device: Maxtor 6 Y120P0               </p><p>Device Type: Removable</p><p>Bus: USB</p><p>Size: 117.2 GB</p><p>Label: &lt;Unknown&gt;</p><p>Access permissions: Medium is not write protected.</p><p>root@solaris:~$ </p><p>It sees my Maxtor drive!</p><p>root@solaris:/mnt# rmmount rmdisk0     &lt;---- command accepted                 </p><p>root@solaris:/mnt# </p><p>root@solaris:/mnt# rmmount NONAME</p><p>cannot find &#39;NONAME&#39;</p><p>root@solaris:/mnt# rmmount /dev/dsk/c6t0d0p0:1</p><p>cannot find &#39;/dev/dsk/c6t0d0p0:1&#39;</p><p>root@solaris:/mnt# rmmount /dev/dsk/c6t0d0p0  </p><p>cannot find &#39;/dev/dsk/c6t0d0p0&#39;</p><p>root@solaris:/mnt# rmmount /dev/rdsk/c6t0d0p0</p><p>cannot find &#39;/dev/rdsk/c6t0d0p0&#39;</p><p>root@solaris:/mnt# rmmount /dev/rdsk/c6t0d0p0:1</p><p>cannot find &#39;/dev/rdsk/c6t0d0p0:1&#39;</p><p>root@solaris:/mnt# </p><p>Not sure what I&#39;m doing from this point on. Any help is greatly appreciated. Thanks.</p></div><!-- SC_ON --></section>]]></description><pubDate>Fri, 09 May 2025 02:15:14 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1kg71r7/why_did_minix_not_become_the_os_linux_did/</link><title>Why did Minix not become the OS Linux did?</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1kg71r7/why_did_minix_not_become_the_os_linux_did/</guid><comments>https://www.reddit.com/r/unix/comments/1kg71r7/why_did_minix_not_become_the_os_linux_did/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p><a href='https://www.reddit.com/r/unix/comments/1kg71r7/why_did_minix_not_become_the_os_linux_did/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>Is there something inherently limited about it or is it just happenstance/fate?</p></div><!-- SC_ON --></section>]]></description><pubDate>Tue, 06 May 2025 20:46:10 +0530</pubDate></item><item><link>https://www.reddit.com/gallery/1kfk062</link><title>RenuxOS a UNIX operating system (Gallery)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1kfk062/renuxos_a_unix_operating_system/</guid><comments>https://www.reddit.com/r/unix/comments/1kfk062/renuxos_a_unix_operating_system/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1kfk062/renuxos_a_unix_operating_system/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>üöÄ [WIP] Introducing RenuxOS ‚Äì My Own Open-Source Hybrid Kernel UNIX OS (Seeking Contributors!)</p><h1>Hey everyone! üëã</h1><p>I&#39;m Renan, a 17-year-old indie developer and hacker-for-good from Brazil, and I‚Äôve been building my own operating system from scratch, called RenuxOS. It&#39;s a UNIX-like system with a hybrid kernel, written in Rust, C, Zig, and some Assembly(future). I‚Äôm doing this project solo for now, but I‚Äôd love to get help from fellow devs and OS enthusiasts! üåç</p><h1>‚ú® What is RenuxOS?</h1><p>A modern UNIX-like OS</p><p>Hybrid kernel architecture</p><p>Written using Rust (core), C/C++/Zig (drivers), and Assembly(future) (boot/init stuff)</p><p>Focused on simplicity, maintainability, and transparency</p><p>ü§ù I‚Äôm looking for:</p><ul><li><p>Driver devs (C/Zig)</p></li><li><p>Kernel hackers (Rust)</p></li><li><p>People into OSDev, docs, testing, feedback, whatever!</p></li><li><p>Anyone who wants to learn and contribute ‚ù§Ô∏è</p></li></ul><p>link for the project: <a href="https://github.com/renuxteam/renuxos-src">https://github.com/renuxteam/renuxos-src</a></p><p>And it is a decentralized tree with submodules</p></div><!-- SC_ON --></section><section class='embedded-media'><p><img src="https://preview.redd.it/t2zz9ledg0ze1.png?width=772&amp;format=png&amp;auto=webp&amp;s=97981152db8ddb2479921fb41f409d29f1f9c134" height="514" width="772" /></p><p><img src="https://preview.redd.it/nd2crmulg0ze1.png?width=1068&amp;format=png&amp;auto=webp&amp;s=2062f71a8fa1e1ca5a25254e29bd31d84e369728" height="647" width="1068" /></p></section>]]></description><pubDate>Tue, 06 May 2025 00:37:58 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1kden5j/iso_bsdos_bsdi_5051_documentation/</link><title>ISO BSD/OS (BSDi) 5.0/5.1 documentation</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1kden5j/iso_bsdos_bsdi_5051_documentation/</guid><comments>https://www.reddit.com/r/unix/comments/1kden5j/iso_bsdos_bsdi_5051_documentation/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1kden5j/iso_bsdos_bsdi_5051_documentation/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>I am in search of copies of documentation for BSD/OS 5.0 and 5.1: Release Notes, Installation Guides, Administrator&#39;s Guides, Hardware Comparability lists, etc.</p><p>Yes, I have searched <a href="http://archive.org">archive.org</a> and <a href="http://web.archive.org">web.archive.org</a> for <a href="http://bsdi.com">bsdi.com</a> and <a href="http://windriver.com">windriver.com</a> and variations to no avail. The latest version I have been able to find is an html copy of the Installation Guide for 4.2.</p><p>I do not care about format (txt, pdf, html, postscript).</p><p>I know it&#39;s a shot in the dark. Thank you in advance!</p><p>***** EDIT *****<br/>Documentation has largely been found, still searching for the &quot;BSD/OS ISE Getting Started, 5.1&quot; document.</p><p>The rest has been uploaded: </p><p><a href="https://archive.org/details/doc-5.1.tar">https://archive.org/details/doc-5.1.tar</a></p></div><!-- SC_ON --></section>]]></description><pubDate>Sat, 03 May 2025 04:40:33 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1kcyzf0/trying_to_boot_opensolaris_2009_for_a_couple_of/</link><title>Trying to boot OpenSolaris (2009) for a couple of weeks</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1kcyzf0/trying_to_boot_opensolaris_2009_for_a_couple_of/</guid><comments>https://www.reddit.com/r/unix/comments/1kcyzf0/trying_to_boot_opensolaris_2009_for_a_couple_of/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 6 min | <a href='https://www.reddit.com/r/unix/comments/1kcyzf0/trying_to_boot_opensolaris_2009_for_a_couple_of/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p><strong>WARNING</strong>: Not native English speaker, horrible mistakes are possible</p><h1>Preamble</h1><p>I have pretty old <em>sony vaio vgn-tx3xrp</em>. I wanted to install some OS from UNIX bloodline that supports i386. Thought about something from Sun, and so checked out OpenIndiana. Unfortunately, they seem to <a href="https://www.openindiana.org/downloads/">end support</a> for i386 back in 2017. To be more accurate, if I understand correctly, they still maintain 32-bit libraries and userland, but they <strong>expect user to run 64-bit kernel</strong> (which is impossible in my case). OpenIndiana is based on Illumos, and Illumos is basically OpenSolaris fork, so I thought it would be easier to work with OpenSolaris itself. Nearly no software for this thing nowadays, so I prepared myself to use it kinda as one would use Gentoo Linux, compiling all the stuff I need, with a bit of tweaking (dealing with missing syscalls, libraries, etc.). My dream system is pure OS on old i386 with some lightweight wm, like <code>ctwm(1)</code> and a bunch of day-to-day use programs</p><h1>Getting my hands dirty</h1><p>I found a couple of OpenSolaris ISOs on Internet Archive. One of them seems to successfully boot in a vm:</p><pre><code>#!/bin/kshexec qemu-system-i386 \        -smp `nproc` \        -cdrom osol.iso \        -hda osol.img  \        -accel kvm \        -cpu host \        -m 4G \        -vga std \</code></pre><p>As always I&#39;ve burned ISO to one of my flash drives (on my host machine) and tried to boot from it on sony. Unfortunately, BIOS didn&#39;t recognize disk as bootable. I <code>dd(1)</code>&#39;d image&#39;s first bytes to tty to see if it even has MBR... it doesn&#39;t. I searched all the web, but didn&#39;t find ready-to-burn USB image of OpenSolaris, only cdrom ones. Found some <a href="https://archive.org/details/osol-live-usb">MS-Windows program</a>, which promises to make bootable USB. I even installed MS-Windows for this(!), but it didn&#39;t do it&#39;s job (at least for me)</p><p>My OpenSolaris release (<em>snv_134</em>) uses grub as bootloader. I formatted my flash drive with single FAT32 partition and installed grub as I would normally do with any Linux distribution. Grub shell started and that&#39;s about it. Then I figured out that we have <strong>grub2</strong> (ver &gt;=2) and <strong>grub-legacy</strong> (ver &lt;2). Grub2 uses <code>/boot/grub/grub.cfg</code>, while legacy one uses <code>/boot/grub/menu.lst</code>. They have different syntax, and tbh the legacy version seems to be more intuitive and clear. Anyway, there is a <code>grub-menulst2grubcfg(1)</code>, which converts config file from old syntax to a new one. Just by looking at it&#39;s output I immediately understood that it won&#39;t work:</p><pre><code>% grub-menulst2cfg /mnt/osol/boot/grub/menu.lst...menuentry &#39;OpenSolaris Development snv_134&#39; {  # Unsupported legacy command: kernel$ /platform/i86pc/kernel/$ISADIR/unix  # Unsupported legacy command: module$ /platform/i86pc/$ISADIR/boot_archive }</code></pre><p>Very cool, it commented out everything, except header lines</p><p>By looking into grub2 manual, I found equivalents to <code>kernel$</code> and <code>module$</code>: <code>multiboot</code> and <code>module</code> accordingly:</p><pre><code>grub&gt; multiboot /platform/i86pc/kernel/unixgrub&gt; module /platform/i86pc/boot_archivegrub&gt; boot</code></pre><p>Solaris uses something called <a href="http://etcfstab.com/solaris/grub_booting.html">boot archive</a>. It&#39;s just a bunch of necessary files, that kernel expects to find in RAM during startup. First line loads the UNIX kernel into memory, second one loads boot archive, and the last one tells grub to pass control over to kernel</p><p>Unfortunately, kernel wrote some weird stuff into tty and hanged. I grabbed <code>/platform/i86pc/kernel/unix</code> to my host machine and opened it with Ghidra. Searched for the error string. It seems to load modules from boot archive at startup in a loop. When it can&#39;t load one, it panics:</p><pre><code>krtld: failed to open &#39;&lt;...&gt;&#39;</code></pre><p>I guess grub2 places boot archive elsewhere, not where kernel expects it to be. The only solution was to use the grub version, which OpenSolaris uses - <strong>grub 0.97</strong></p><h1>Like it was long time ago...</h1><p>Grub legacy is old as Earth. No modern Linux distribution has it in it&#39;s packages, even Gentoo <a href="https://wiki.gentoo.org/wiki/GRUB_Legacy">has thrown it out</a> of emerge (<code>portage(1)</code>). I found it&#39;s sources in archives. Time to compile...</p><p>I am using Alpine Linux everywhere, it&#39;s my go-to distribution at the moment</p><p><a href="https://preview.redd.it/ftlqkclhecye1.png?width=1920&amp;format=png&amp;auto=webp&amp;s=a8662623f1df9dd1a8cdf25ff11f2f29baf1d3b5">Working on this writeup</a></p><p>It&#39;s default gcc comes configured with <code>--without-multilib</code>, so I cannot build 32-bit executables for sony on my amd64 host. At first, I didn&#39;t really wanna mess up with compiling gcc by hand, so I used Alpine i686 live-USB. Quickly configured networking and apk repos, installed gcc. Grub 0.97 is <strong>old</strong> source base, which unfortunately cannot be built using modern GNU toolchain. Not only because of code itself, but also because of deprecated options, such as <code>-fwritable-strings</code>, which are removed from modern gcc versions. So I obtained older gcc and binutils, compiled it with compatibility options like <code>--std=c++03</code> and some source tweaking. Mainly to satisfy musl/glibc differences, change <code>YYLEX</code> to <code>yylex()</code> and so on..</p><p>Then used this toolchain to compile grub legacy. At first, when I installed grub on my flash drive, it didn&#39;t work: <code>grub-install(8)</code> said that <em>either stage1 or stage2 file has invalid version</em>. I was sure that it was using correct files. So I found the exact place where this error comes from and patched it out</p><pre><code>--- stage2/builtins.c+++ stage2/builtins.c@@ -1973,14 +1973,6 @@   stage2_second_sector = saved_sector;-  /* Check for the version of Stage 2.  */-  if (*((short *) (stage2_second_buffer + STAGE2_VER_MAJ_OFFS))-      != COMPAT_VERSION)-    {-      errnum = ERR_BAD_VERSION;-      goto fail;-    }-   /* Check for the Stage 2 id.  */   if (stage2_second_buffer[STAGE2_STAGE2_ID] != STAGE2_ID_STAGE2)     is_stage1_5 = 1;</code></pre><p><code>grub-install(8)</code> succeeded, but it didn&#39;t boot even into recovery shell (kinda expectable, the check is there for a reason). I noticed that the size of stage1 is far more than <em>512 bytes</em> to fit into MBR. Later I figured out it&#39;s because <code>objcopy(1)</code> was copying unnecessary sections for real mode (e.g. <code>.note.gnu*</code> and <code>.bss*</code>). So I created wrapper named &quot;<em>objcopy</em>&quot; and placed it&#39;s path first on <code>$PATH</code>:</p><pre><code>#!/bin/ksh/usr/bin/objcopy --remove-section=.bss* --remove-section=.note* $@</code></pre><p>It worked and produced valid grub binaries. After booting from USB, there wasn&#39;t any option other than &quot;<em>Boot from hard disk</em>&quot; in boot menu. For whatever reason</p><h1>Manual booting</h1><p>By pressing &quot;C&quot;, I entered command mode and tried to do the same things, that are listed in <code>/boot/grub/menu.lst</code>:</p><pre><code>grub&gt; kernel /platform/i86pc/kernel/unixgrub&gt; module /platform/i86pc/boot_archivegrub&gt; boot</code></pre><p>SunOS 5.11 greetings text appeared, but boot process stuck at &quot;<em>Preparing live image for use</em>&quot;. Going through Illumos &amp; OI mail lists and Reddit, I found <a href="https://www.reddit.com/r/illumos/s/bW07TgsTRl">this</a> and <a href="https://www.reddit.com/r/illumos/s/GpIsNUIgxJ">this</a>, telling it was either FS or USB driver is not there. Cool. I tried to format in UFS and EXT2: no luck. Tried iso9660 using <code>mkisofs(8)</code>: grub legacy for some reason can&#39;t mount iso9660 (even though I can). Tried to copy contents of flash drive to the beginning hard disk and boot from it, same result</p><p><a href="https://preview.redd.it/4kxsuvhx9cye1.jpg?width=1280&amp;format=pjpg&amp;auto=webp&amp;s=f0618508c2fd9023966346c472770811a49c4a8b">https://preview.redd.it/4kxsuvhx9cye1.jpg?width=1280&amp;format=pjpg&amp;auto=webp&amp;s=f0618508c2fd9023966346c472770811a49c4a8b</a></p><p>I guess I am definitely missing something. I&#39;ve read a bit about converting cdrom-bootable ISO into USB-bootable (by adding MBR and other necessary stuff). Need to look into that and investigate further... The thing is, I am going thru really hard times of my life, it gets even worse than I thought it possibly can, so can&#39;t continue working on this rn. Sure, once things get better (if they will ofc), I&#39;ll try, but now it is like that</p><p>If you are reading this line - thank u so much, I really appreciate your interest &lt;3</p></div><!-- SC_ON --></section>]]></description><pubDate>Fri, 02 May 2025 17:19:48 +0530</pubDate></item><item><link>https://www.reddit.com/r/openbsd/comments/1k9ayo9/openbsd_77_released/</link><title>OpenBSD 7.7 released</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1kc6n5l/openbsd_77_released/</guid><comments>https://www.reddit.com/r/unix/comments/1kc6n5l/openbsd_77_released/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 2 min | <a href='https://www.reddit.com/r/unix/comments/1kc6n5l/openbsd_77_released/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>OpenBSD 7.7 has been <a href="https://www.openbsd.org/77.html">released</a>. Apparel available <a href="http://www.openbsdstore.com/">here</a>.  </p><p><a href="https://i.redd.it/s2tw7lvd8fxe1.gif">Artwork by Tom√°≈° Rodr.</a></p></div><!-- SC_ON --></section><section class='separator separator-after-selftext'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='parsed-content'><div><p><span> <span> <faceplate-tracker> <shreddit-async-loader> <faceplate-hovercard> <a href="https://www.reddit.com/r/openbsd/">r/openbsd</a><div><div><p><span> <faceplate-tracker> <a href="https://www.reddit.com/r/openbsd/">r/openbsd</a> </faceplate-tracker> </span></p><faceplate-tracker> <shreddit-join-button></shreddit-join-button> </faceplate-tracker> </div><p>General OpenBSD community subreddit. For gaming-related discussion, visit /r/openbsd_gaming. If you have genuine questions or concerns, you're always welcome. Tone matters. </p><hr><p><span> <span>Members</span> </span> <span> <span> <span>Online</span> </span> </span> </p></div></faceplate-hovercard> </shreddit-async-loader> </faceplate-tracker> </span> <span>&bull;</span> <faceplate-timeago></faceplate-timeago> </span></p><div><p><span><div><faceplate-hovercard> <faceplate-tracker><a href="https://www.reddit.com/user/j0b/">j0b</a></faceplate-tracker> </faceplate-hovercard> </div></span></p><shreddit-async-loader> <shreddit-distinguished-post-tags> </shreddit-distinguished-post-tags> </shreddit-async-loader> </div></div><div class="gallery"><p><img src="https://styles.redditmedia.com/t5_2qnr6/styles/communityIcon_2j5rykxlzrd71.png?width=96&amp;height=96&amp;frame=1&amp;auto=webp&amp;crop=96%3A96%2Csmart&amp;s=91864e22f0c70c687b4ca0e051ef7123eb446bfb"></p></div></section>]]></description><pubDate>Thu, 01 May 2025 17:12:35 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1kapthv/is_there_a_lineage_of_influence_of_key_unix/</link><title>Is there a "lineage of influence" of key (Unix) programs?</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1kapthv/is_there_a_lineage_of_influence_of_key_unix/</guid><comments>https://www.reddit.com/r/unix/comments/1kapthv/is_there_a_lineage_of_influence_of_key_unix/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1kapthv/is_there_a_lineage_of_influence_of_key_unix/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>(not sure if there&#39;s a better community to ask)</p><p>I wish there was a &quot;chronological dependency tree&quot; of software that was integral to the creation of later software. Does anyone have any knowledge of a) previous attempts to document these b) good starting points?</p><p>The edges of the tree/graph might include (where the arrow means &quot;was a prerequisite to the creation of&quot;):</p><ul><li>diff -&gt; patch</li><li>diff -&gt; rcs</li><li>rcs -&gt; cvs</li><li>cvs -&gt; git</li><li>rsync -&gt; unison (?)</li><li>more -&gt; less</li></ul><p>I know such works exist for shells, modal editors, OSes and programming languages. but what about for more general command-line tools?</p></div><!-- SC_ON --></section>]]></description><pubDate>Tue, 29 Apr 2025 20:20:49 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1k7q6xz/hi_guys_im_in_the_process_of_recruiting_for_a/</link><title>Hi, guys. I'm in the process of recruiting for a tech company in Mexico, and we're looking for people with experience in HP UX and 9000, 800, or RP8420 libraries. Could you help me find out where people are looking for jobs or what platforms are most viable for connecting with people in the field?</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1k7q6xz/hi_guys_im_in_the_process_of_recruiting_for_a/</guid><comments>https://www.reddit.com/r/unix/comments/1k7q6xz/hi_guys_im_in_the_process_of_recruiting_for_a/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p><a href='https://www.reddit.com/r/unix/comments/1k7q6xz/hi_guys_im_in_the_process_of_recruiting_for_a/'>Post permalink</a></p></section>]]></description><pubDate>Fri, 25 Apr 2025 22:38:10 +0530</pubDate></item><item><link>https://wiki.tuhs.org/doku.php?id=systems%3Apdp7_unix</link><title>PDP-7 UNIX (wiki.tuhs.org)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1k7f74f/pdp7_unix/</guid><comments>https://www.reddit.com/r/unix/comments/1k7f74f/pdp7_unix/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 23 min | <a href='https://www.reddit.com/r/unix/comments/1k7f74f/pdp7_unix/'>Post permalink</a></p></section><section class='separator separator-before-parsed-content'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='parsed-content'><div><div><h3>Table of Contents</h3> </div><h2>PDP-7 Unix</h2> <h2>Details from "The Evolution of Unix"</h2><div><p>Also during 1969, Thompson developed the game of `Space Travel.' First written on <a href="https://www.multicians.org/" title="https://www.multicians.org/">Multics</a>, then transliterated into Fortran for GECOS (the operating system for the GE, later Honeywell, 635), it was nothing less than a simulation of the movement of the major bodies of the Solar System, with the player guiding a ship here and there, observing the scenery, and attempting to land on the various planets and moons. The GECOS version was unsatisfactory in two important respects: first, the display of the state of the game was jerky and hard to control because one had to type commands at it, and second, a game cost about $75 for CPU time on the big computer. It did not take long, therefore, for Thompson to find a little-used PDP-7 computer with an excellent display processor; the whole system was used as a Graphic-II terminal. He and I rewrote Space Travel to run on this machine. The undertaking was more ambitious than it might seem; because we disdained all existing software, we had to write a floating-point arithmetic package, the pointwise specification of the graphic characters for the display, and a debugging subsystem that continuously displayed the contents of typed-in locations in a corner of the screen. All this was written in assembly language for a cross-assembler that ran under GECOS and produced paper tapes to be carried to the PDP-7. </p><p>Space Travel, though it made a very attractive game, served mainly as an introduction to the clumsy technology of preparing programs for the PDP-7. Soon Thompson began implementing the paper file system (perhaps `chalk file system' would be more accurate) that had been designed earlier. A file system without a way to exercise it is a sterile proposition, so he proceeded to flesh it out with the other requirements for a working operating system, in particular the notion of processes. Then came a small set of user-level utilities: the means to copy, print, delete, and edit files, and of course a simple command interpreter (shell). Up to this time all the programs were written using GECOS and files were transferred to the PDP-7 on paper tape; but once an assembler was completed the system was able to support itself. Although it was not until well into 1970 that Brian Kernighan suggested the name `Unix,' in a somewhat treacherous pun on `Multics,' the operating system we know today was born. </p></div><h4>The PDP-7 Unix file system (from "The Evolution of Unix")</h4><div><p>Structurally, the file system of PDP-7 Unix was nearly identical to today's. It had </p><ol> <li><p>An i-list: a linear array of <em>i-nodes</em> each describing a file. An i-node contained less than it does now, but the essential information was the same: the protection mode of the file, its type and size, and the list of physical blocks holding the contents.</p></li> <li><p>Directories: a special kind of file containing a sequence of names and the associated i-number.</p></li> <li><p>Special files describing devices. The device specification was not contained explicitly in the i-node, but was instead encoded in the number: specific i-numbers corresponded to specific files.</p></li> </ol><p>The important file system calls were also present from the start. Read, write, open, creat (sic), close: with one very important exception, discussed below, they were similar to what one finds now. A minor difference was that the unit of I/O was the word, not the byte, because the PDP-7 was a word-addressed machine. In practice this meant merely that all programs dealing with character streams ignored null characters, because null was used to pad a file to an even number of characters. Another minor, occasionally annoying difference was the lack of erase and kill processing for terminals. Terminals, in effect, were always in raw mode. Only a few programs (notably the shell and the editor) bothered to implement erase-kill processing. </p><p>In spite of its considerable similarity to the current file system, the PDP-7 file system was in one way remarkably different: there were no path names, and each file-name argument to the system was a simple name (without `/') taken relative to the current directory. Links, in the usual Unix sense, did exist. Together with an elaborate set of conventions, they were the principal means by which the lack of path names became acceptable. </p><p>The <em>link</em> call took the form </p><pre>link(dir, file, newname)</pre><p>where <em>dir</em> was a directory file in the current directory, <em>file</em> an existing entry in that directory, and <em>newname</em> the name of the link, which was added to the current directory. Because <em>dir</em> needed to be in the current directory, it is evident that today's prohibition against links to directories was not enforced; the PDP-7 Unix file system had the shape of a general directed graph. </p><p>So that every user did not need to maintain a link to all directories of interest, there existed a directory called <em>dd</em> that contained entries for the directory of each user. Thus, to make a link to file <em>x</em> in directory <em>ken</em>, I might do </p><pre>ln dd ken ken ln ken x x rm ken</pre><p>This scheme rendered subdirectories sufficiently hard to use as to make them unused in practice. Another important barrier was that there was no way to create a directory while the system was running; all were made during recreation of the file system from paper tape, so that directories were in effect a nonrenewable resource. </p><p>The <em>dd</em> convention made the <em>chdir</em> command relatively convenient. It took multiple arguments, and switched the current directory to each named directory in turn. Thus </p><pre>chdir dd ken</pre><p>would move to directory <em>ken</em>. (Incidentally, <em>chdir</em> was spelled <em>ch</em>; why this was expanded when we went to the PDP-11 I don't remember.) </p><p>The most serious inconvenience of the implementation of the file system, aside from the lack of path names, was the difficulty of changing its configuration; as mentioned, directories and special files were both made only when the disk was recreated. Installation of a new device was very painful, because the code for devices was spread widely throughout the system; for example there were several loops that visited each device in turn. Not surprisingly, there was no notion of mounting a removable disk pack, because the machine had only a single fixed-head disk. </p><p>The operating system code that implemented this file system was a drastically simplified version of the present scheme. One important simplification followed from the fact that the system was not multi-programmed; only one program was in memory at a time, and control was passed between processes only when an explicit swap took place. So, for example, there was an <em>iget</em> routine that made a named i-node available, but it left the i-node in a constant, static location rather than returning a pointer into a large table of active i-nodes. A precursor of the current buffering mechanism was present (with about 4 buffers) but there was essentially no overlap of disk I/O with computation. This was avoided not merely for simplicity. The disk attached to the PDP-7 was fast for its time; it transferred one 18-bit word every 2 microseconds. On the other hand, the PDP-7 itself had a memory cycle time of 1 microsecond, and most instructions took 2 cycles (one for the instruction itself, one for the operand). However, indirectly addressed instructions required 3 cycles, and indirection was quite common, because the machine had no index registers. Finally, the DMA controller was unable to access memory during an instruction. The upshot was that the disk would incur overrun errors if any indirectly-addressed instructions were executed while it was transferring. Thus control could not be returned to the user, nor in fact could general system code be executed, with the disk running. The interrupt routines for the clock and terminals, which needed to be runnable at all times, had to be coded in very strange fashion to avoid indirection. </p></div><h4>Process control (from "The Evolution of Unix")</h4><div><p>By `process control,' I mean the mechanisms by which processes are created and used; today the system calls <em>fork</em>, <em>exec</em>, <em>wait</em>, and <em>exit</em> implement these mechanisms. Unlike the file system, which existed in nearly its present form from the earliest days, the process control scheme underwent considerable mutation after PDP-7 Unix was already in use. (The introduction of path names in the PDP-11 system was certainly a considerable notational advance, but not a change in fundamental structure.) </p><p>Today, the way in which commands are executed by the shell can be summarized as follows: </p><ol> <li><p>The shell reads a command line from the terminal.</p></li> <li><p>It creates a child process by <em>fork.</em></p></li> <li><p>The child process uses <em>exec</em> to call in the command from a file.</p></li> <li><p>Meanwhile, the parent shell uses <em>wait</em> to wait for the child (command) process to terminate by calling <em>exit.</em></p></li> <li><p>The parent shell goes back to step 1).</p></li> </ol><p>Processes (independently executing entities) existed very early in PDP-7 Unix. There were in fact precisely two of them, one for each of the two terminals attached to the machine. There was no <em>fork</em>, <em>wait</em>, or <em>exec</em>. There was an <em>exit</em>, but its meaning was rather different, as will be seen. The main loop of the shell went as follows. </p><ol> <li><p>The shell closed all its open files, then opened the terminal special file for standard input and output (file descriptors 0 and 1).</p></li> <li><p>It read a command line from the terminal.</p></li> <li><p>It linked to the file specifying the command, opened the file, and removed the link. Then it copied a small bootstrap program to the top of memory and jumped to it; this bootstrap program read in the file over the shell code, then jumped to the first location of the command (in effect an <em>exec</em>).</p></li> <li><p>The command did its work, then terminated by calling <em>exit</em>. The <em>exit</em> call caused the system to read in a fresh copy of the shell over the terminated command, then to jump to its start (and thus in effect to go to step 1).</p></li> </ol><p>The most interesting thing about this primitive implementation is the degree to which it anticipated themes developed more fully later. True, it could support neither background processes nor shell command files (let alone pipes and filters); but IO redirection (via `&lt;' and `&gt;') was soon there; it is discussed below. The implementation of redirection was quite straightforward; in step 3) above the shell just replaced its standard input or output with the appropriate file. Crucial to subsequent development was the implementation of the shell as a user-level program stored in a file, rather than a part of the operating system. </p><p>The structure of this process control scheme, with one process per terminal, is similar to that of many interactive systems, for example CTSS, Multics, Honeywell TSS, and IBM TSS and TSO. In general such systems require special mechanisms to implement useful facilities such as detached computations and command files; Unix at that stage didn't bother to supply the special mechanisms. It also exhibited some irritating, idiosyncratic problems. For example, a newly recreated shell had to close all its open files both to get rid of any open files left by the command just executed and to rescind previous IO redirection. Then it had to reopen the special file corresponding to its terminal, in order to read a new command line. There was no <em>/dev</em> directory (because no path names); moreover, the shell could retain no memory across commands, because it was reexecuted afresh after each command. Thus a further file system convention was required: each directory had to contain an entry <em>tty</em> for a special file that referred to the terminal of the process that opened it. If by accident one changed into some directory that lacked this entry, the shell would loop hopelessly; about the only remedy was to reboot. (Sometimes the missing link could be made from the other terminal.) </p><p>Process control in its modern form was designed and implemented within a couple of days. It is astonishing how easily it fitted into the existing system; at the same time it is easy to see how some of the slightly unusual features of the design are present precisely because they represented small, easily-coded changes to what existed. A good example is the separation of the <em>fork</em> and <em>exec</em> functions. The most common model for the creation of new processes involves specifying a program for the process to execute; in Unix, a forked process continues to run the same program as its parent until it performs an explicit <em>exec</em>. The separation of the functions is certainly not unique to Unix, and in fact it was present in the Berkeley time-sharing system [2], which was well-known to Thompson. Still, it seems reasonable to suppose that it exists in Unix mainly because of the ease with which <em>fork</em> could be implemented without changing much else. The system already handled multiple (i.e. two) processes; there was a process table, and the processes were swapped between main memory and the disk. The initial implementation of <em>fork</em> required only </p><ol> <li><p>Expansion of the process table</p></li> <li><p>Addition of a fork call that copied the current process to the disk swap area, using the already existing swap IO primitives, and made some adjustments to the process table.</p></li> </ol><p>In fact, the PDP-7's <em>fork</em> call required precisely 27 lines of assembly code. Of course, other changes in the operating system and user programs were required, and some of them were rather interesting and unexpected. But a combined <em>fork-exec</em> would have been considerably more complicated, if only because <em>exec</em> as such did not exist; its function was already performed, using explicit IO, by the shell. </p><p>The <em>exit</em> system call, which previously read in a new copy of the shell (actually a sort of automatic <em>exec</em> but without arguments), simplified considerably; in the new version a process only had to clean out its process table entry, and give up control. </p><p>Curiously, the primitives that became <em>wait</em> were considerably more general than the present scheme. A pair of primitives sent one-word messages between named processes: </p><pre>smes(pid, message) (pid, message) = rmes()</pre><p>The target process of <em>smes</em> did not need to have any ancestral relationship with the receiver, although the system provided no explicit mechanism for communicating process IDs except that <em>fork</em> returned to each of the parent and child the ID of its relative. Messages were not queued; a sender delayed until the receiver read the message. </p><p>The message facility was used as follows: the parent shell, after creating a process to execute a command, sent a message to the new process by <em>smes</em>; when the command terminated (assuming it did not try to read any messages) the shell's blocked <em>smes</em> call returned an error indication that the target process did not exist. Thus the shell's <em>smes</em> became, in effect, the equivalent of <em>wait</em>. </p><p>A different protocol, which took advantage of more of the generality offered by messages, was used between the initialization program and the shells for each terminal. The initialization process, whose ID was understood to be 1, created a shell for each of the terminals, and then issued <em>rmes</em>; each shell, when it read the end of its input file, used <em>smes</em> to send a conventional `I am terminating' message to the initialization process, which recreated a new shell process for that terminal. </p><p>I can recall no other use of messages. This explains why the facility was replaced by the <em>wait</em> call of the present system, which is less general, but more directly applicable to the desired purpose. Possibly relevant also is the evident bug in the mechanism: if a command process attempted to use messages to communicate with other processes, it would disrupt the shell's synchronization. The shell depended on sending a message that was never received; if a command executed <em>rmes</em>, it would receive the shell's phony message, and cause the shell to read another input line just as if the command had terminated. If a need for general messages had manifested itself, the bug would have been repaired. </p><p>At any rate, the new process control scheme instantly rendered some very valuable features trivial to implement; for example detached processes (with `&amp;') and recursive use of the shell as a command. Most systems have to supply some sort of special `batch job submission' facility and a special command interpreter for files distinct from the one used interactively. </p><p>Although the multiple-process idea slipped in very easily indeed, there were some aftereffects that weren't anticipated. The most memorable of these became evident soon after the new system came up and apparently worked. In the midst of our jubilation, it was discovered that the <em>chdir</em> (change current directory) command had stopped working. There was much reading of code and anxious introspection about how the addition of <em>fork</em> could have broken the <em>chdir</em> call. Finally the truth dawned: in the old system <em>chdir</em> was an ordinary command; it adjusted the current directory of the (unique) process attached to the terminal. Under the new system, the <em>chdir</em> command correctly changed the current directory of the process created to execute it, but this process promptly terminated and had no effect whatsoever on its parent shell! It was necessary to make <em>chdir</em> a special command, executed internally within the shell. It turns out that several command-like functions have the same property, for example <em>login</em>. </p><p>Another mismatch between the system as it had been and the new process control scheme took longer to become evident. Originally, the read/write pointer associated with each open file was stored within the process that opened the file. (This pointer indicates where in the file the next read or write will take place.) The problem with this organization became evident only when we tried to use command files. Suppose a simple command file contains </p><pre>ls who</pre><p>and it is executed as follows: </p><pre>sh comfile&gt;output</pre><p>The sequence of events was </p><ol> <li><p>The main shell creates a new process, which opens <em>outfile</em> to receive the standard output and executes the shell recursively.</p></li> <li><p>The new shell creates another process to execute <em>ls</em>, which correctly writes on file <em>output</em> and then terminates.</p></li> <li><p>Another process is created to execute the next command. However, the IO pointer for the output is copied from that of the shell, and it is still 0, because the shell has never written on its output, and IO pointers are associated with processes. The effect is that the output of <em>who</em> overwrites and destroys the output of the preceding <em>ls</em> command.</p></li> </ol><p>Solution of this problem required creation of a new system table to contain the IO pointers of open files independently of the process in which they were opened. </p></div><h4>IO Redirection (from "The Evolution of Unix")</h4><div><p>The very convenient notation for IO redirection, using the `&gt;' and `&lt;' characters, was not present from the very beginning of the PDP-7 Unix system, but it did appear quite early. Like much else in Unix, it was inspired by an idea from Multics. Multics has a rather general IO redirection mechanism [3] embodying named IO streams that can be dynamically redirected to various devices, files, and even through special stream-processing modules. Even in the version of Multics we were familiar with a decade ago, there existed a command that switched subsequent output normally destined for the terminal to a file, and another command to reattach output to the terminal. Where under Unix one might say </p><pre>ls&gt;xx</pre><p>to get a listing of the names of one's files in <em>xx</em>, on Multics the notation was </p><pre>iocall attach user_output file xx list iocall attach user_output syn user_i/o</pre><p>Even though this very clumsy sequence was used often during the Multics days, and would have been utterly straightforward to integrate into the Multics shell, the idea did not occur to us or anyone else at the time. I speculate that the reason it did not was the sheer size of the Multics project: the implementors of the IO system were at Bell Labs in Murray Hill, while the shell was done at MIT. We didn't consider making changes to the shell (it was <em>their</em> program); correspondingly, the keepers of the shell may not even have known of the usefulness, albeit clumsiness, of <em>iocall</em>. (The 1969 Multics manual [4] lists <em>iocall</em> as an `author-maintained,' that is non-standard, command.) Because both the Unix IO system and its shell were under the exclusive control of Thompson, when the right idea finally surfaced, it was a matter of an hour or so to implement it. </p></div><h2>Extant PDP-7 Unix Source Code</h2><div><p>For many years, the only extant source code from the PDP-7 version of Unix appeared to be the source code to the <em>dsw</em> command that Dennis <a href="http://www.tuhs.org/pipermail/pups/1999-November/000139.html" title="http://www.tuhs.org/pipermail/pups/1999-November/000139.html">posted on the net.unix-wizards</a> Usenet newsgroup in 1984. He wrote: </p><p>I happened to dredge up an old notebook and found a listing of the PDP-7 version of dsw. Because several people have approached me recently about reviving a version of PDP-7 Unix as a sort of paleontological exhibit, and because the subject has been discussed here, I thought people might be interested in seeing the code. I first considered net.sources, but decided not to carry whimsy too far. </p><p>Notes: </p><ol> <li><p>The assembler has Knuth-style temporary labels but no literals.</p></li> <li><p>The name of the current directory was evidently &ldquo;..&rdquo;</p></li> <li><p>Formatting is faithfully reproduced.</p></li> <li><p>&ldquo;sys save&rdquo; makes a core image.</p></li> </ol><pre>" dsw lac djmp dac .-1 oas cla cma tad d1 dac t1 sys open; dd; 0 1: lac d2 sys read; dir; 8 sna sys exit lac dir sna jmp 1b isz t1 jmp 1b wr: lac d1 sys write; dir+1; 4 lac d1 sys write; o12; 1 sys save do: sys unlink; dir+1 sys exit d1: 1 d2: 2 o12: 012 t1: 0 djmp: jmp do dd: 056056; 040040; 040040; 040040 dir: .=.+8</pre><p>In October 2009, Dennis sent Warren Toomey a private e-mail that said &ldquo;In other news, I have found the book that has the [PDP-7] listings that I knew I had, that of (some) of the user-level commands. I wonder what's the best way to get it scanned?&rdquo;. Unfortunately, Dennis passed away before he could get the listings scanned in. </p><p>In 2016, <a href="https://www.teach.cs.toronto.edu/~norman/pers/index.html" title="https://www.teach.cs.toronto.edu/~norman/pers/index.html">Norman Wilson</a> discovered a set of paper copies PDP-7 Unix listings he had done while he worked at Bell Labs. Warren Toomey organized <a href="https://github.com/DoctorWkt/pdp7-unix" title="https://github.com/DoctorWkt/pdp7-unix">a project to attempt to resurrect PDP-7 Unix</a> with source code derived from scans of the listings. The listings were partial, but there was enough to create a system that would boot and run. </p><p>October 2019 saw another notebook of listings discovered (by Dennis Ritchie's heirs?). Those were scanned, proofread and corrected, creating a more complete and original PDP-7 Unix. A month later, the <a href="https://www.youtube.com/watch?v=pvaPaWyiuLA" title="https://www.youtube.com/watch?v=pvaPaWyiuLA">Living Computer Museum bootstrapped the reconstructed operating system on renovated PDP-7 hardware</a>. </p></div><h2>PDP-9 Unix</h2><div><p>In several places, including the <a href="http://www.tuhs.org/Archive/Documentation/Papers/unix_cacm74.pdf" title="http://www.tuhs.org/Archive/Documentation/Papers/unix_cacm74.pdf">CACM paper</a>, there is mention made of Unix running on a PDP-9. Dennis Ritchie posted <a href="http://www.tuhs.org/pipermail/pups/2002-August/000529.html" title="http://www.tuhs.org/pipermail/pups/2002-August/000529.html">a message on the PUPS mailing list</a> in August 2002 which said: </p><p>The [PDP-]7, 9, 15 were very compatible. I think the -15 had some scheme for using an index register, which the earlier ones didn't have, but it was otherwise pretty much identical in IS architecture. </p><p>There was very little rewriting to try Unix out on the -9 and -15; perhaps just some tweaks in the disk device commands. I don't think the system actually ran on either for more than a few hours. Ken was just playing around. </p><p>The -15 may have had an electrically different bus, but I'm reasonably sure it was not a Unibus. All of them used IOT instructions, not memory-mapped IO registers. </p><p>Both of the machines we tried were being used by other groups and we couldn't squat on them as with the PDP-7. I recall that the -15's main job was controlling a step-and-repeat camera that exposed LSI masks. </p></div></div></section>]]></description><pubDate>Fri, 25 Apr 2025 13:06:53 +0530</pubDate></item><item><link>https://i.redd.it/63tzry72fowe1.png</link><title>A from-scratch UNIX-like OS in C that runs doom, perhaps? (i.redd.it)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1k6eshh/a_fromscratch_unixlike_os_in_c_that_runs_doom/</guid><comments>https://www.reddit.com/r/unix/comments/1k6eshh/a_fromscratch_unixlike_os_in_c_that_runs_doom/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1k6eshh/a_fromscratch_unixlike_os_in_c_that_runs_doom/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>It&#39;s still in it&#39;s early stages and can&#39;t be daily driven but I&#39;m happy with it&#39;s progress, given it can run doom :) (screenshot of doom running on the readme)k</p><p><a href="https://github.com/UnmappedStack/TacOS">https://github.com/UnmappedStack/TacOS</a></p></div><!-- SC_ON --></section><section class='preview-image'><p>&nbsp;</p><img src='https://i.redd.it/63tzry72fowe1.png' /></section>]]></description><pubDate>Thu, 24 Apr 2025 05:51:43 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1k66ej8/before_after_from_openbsd_to_solaris_11/</link><title>Before - after, from OpenBSD to Solaris 11</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1k66ej8/before_after_from_openbsd_to_solaris_11/</guid><comments>https://www.reddit.com/r/unix/comments/1k66ej8/before_after_from_openbsd_to_solaris_11/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 2 min | <a href='https://www.reddit.com/r/unix/comments/1k66ej8/before_after_from_openbsd_to_solaris_11/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>Hello, fellow *nix-ers</p><p>Cannot say I got bored, but I always liked Solaris. So many inventions, such a stable and robust OS. When OpenSolaris went into public -- it was awesome, I tried to use it whenever possible. But time passed by...</p><p>Anyway, over the weekend (and after fueling a bit of nostalgia here: <a href="https://www.reddit.com/r/unix/comments/1k17wpf/building_a_nonx86_box/">https://www.reddit.com/r/unix/comments/1k17wpf/building_a_nonx86_box/</a> ) I decided to give it a try to replace my small webserver to run Solaris. Usually I&#39;d run such a simple server with FreeBSD; there is no magic, no LAMP: any http daemon capable of delivering static content and any MacGyvering for the sake of a few .php pages. Last iteration of such an experimentation was from FreeBSD to OpenBSD, but I was sort of, a bit of no happy, something did not feel &quot;right&quot;, not sure what was the reason. The hardware is  Intel NUC June Canyon NUC7CJYH2 (J4005), 8Gb mem. </p><p>Installation was a bit challenging -- I had to play around with ACPI/SecureBoot/UEFI/etc. In the end it went.. ok:</p><p><a href="https://preview.redd.it/tsd2c11ukmwe1.png?width=1344&amp;format=png&amp;auto=webp&amp;s=3c6e618cd375286dcecf100cf2aef97afa2530de">https://preview.redd.it/tsd2c11ukmwe1.png?width=1344&amp;format=png&amp;auto=webp&amp;s=3c6e618cd375286dcecf100cf2aef97afa2530de</a></p><p>Why Solaris and not any of OpenIndiana/Tribblix/... -- again, something does not &quot;click&quot;.</p><p>Its a pity what Oracle did to Sun, but ... business is business. Absence of more or less modern software --abandoned SunStudio, JDK, DB, ...</p></div><!-- SC_ON --></section>]]></description><pubDate>Wed, 23 Apr 2025 23:53:41 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1k64fq2/what_is_best_practice_of_permissions_or_ownership/</link><title>What is best practice of permissions or ownership of files on external hard drives?</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1k64fq2/what_is_best_practice_of_permissions_or_ownership/</guid><comments>https://www.reddit.com/r/unix/comments/1k64fq2/what_is_best_practice_of_permissions_or_ownership/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1k64fq2/what_is_best_practice_of_permissions_or_ownership/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>I have two machines, Linux and BSD, and a zfs-formatted USB drive I use back and forth. Using permissions 0770 for everything. At the moment, whenever I move it to the other machine, I have to chown -R (or chgrp -R) the whole drive to be able to x dirs and w files.</p><p>Is this is a problem of Linux vs BSD or just that the dirs and files don&#39;t store by username/group (which is the same on both machines) but by the IDs underlying the username/group?</p><p>To avoid this, do I have to 0777 everything? What would be the security implications of this, considering they are single user machines, not using ssh servers...? Do I need to use ACLs and how complicated would this be to setup?</p></div><!-- SC_ON --></section>]]></description><pubDate>Wed, 23 Apr 2025 22:35:17 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1k5t4d4/does_anyone_use_electron_based_terminal_emulators/</link><title>Does anyone use electron based terminal emulators?</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1k5t4d4/does_anyone_use_electron_based_terminal_emulators/</guid><comments>https://www.reddit.com/r/unix/comments/1k5t4d4/does_anyone_use_electron_based_terminal_emulators/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1k5t4d4/does_anyone_use_electron_based_terminal_emulators/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>I‚Äôm aware of terminals like Tabby and Hyper ‚Äî but does anyone actually use them? Why would someone choose an Electron-based terminal over emulators written in Rust (like Alacritty, WezTerm, or Ghostty) or something like Kitty (built with Python/C/Go)? Even the built-in terminal feels like a better option than one built on Electron.</p><p>I checked the RAM usage, and it was around 1GB for just 3‚Äì4 tabs. That‚Äôs why I‚Äôm asking. Blink and Electron are practically the same thing. So now your browser runs on Electron, your terminal runs on Electron ‚Äî and half of your RAM is just gone.</p><p>Hyper and Tabby aren‚Äôt even the only Electron-based terminals ‚Äî there are tons of them. That honestly baffles me. Is this just a case of ‚Äúdemand creates supply‚Äù?</p></div><!-- SC_ON --></section>]]></description><pubDate>Wed, 23 Apr 2025 12:46:39 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1k5bo4d/sbom_leaks_in_http_package_distribution_operations/</link><title>SBOM leaks in HTTP package distribution operations</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1k5bo4d/sbom_leaks_in_http_package_distribution_operations/</guid><comments>https://www.reddit.com/r/unix/comments/1k5bo4d/sbom_leaks_in_http_package_distribution_operations/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1k5bo4d/sbom_leaks_in_http_package_distribution_operations/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>A lot of *NIX systems target the plaintext HTTP (no S) scheme when performing OS package management operations, using GPG signature verification instead of transport security. (Ideally at least the GPG public keys are hosted and retrieved via HTTPS.)</p><p>I think this is done for performance reasons, but the justifications are immaterial. I believe a lot of sensitive SBOM is likely exposed over HTTP. Even if attackers do not actively inject malware into the packages in flight, the attackers do have access to the names and versions of packages requested, as well as the package contents transferred. So any system installing old, vulnerable versions is lighting up an attacker&#39;s Metasploit dashboard with low hanging fruit.</p><p>This impacts various Linux distributions. I am curious about similar impacts for BSD flavors as well. Let&#39;s pitch HTTP into the sun.</p></div><!-- SC_ON --></section>]]></description><pubDate>Tue, 22 Apr 2025 22:39:45 +0530</pubDate></item><item><link>https://i.redd.it/hw2rhctm3rve1.png</link><title>KDE 6.3.4 FINALLY here! (i.redd.it)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1k2z9u5/kde_634_finally_here/</guid><comments>https://www.reddit.com/r/unix/comments/1k2z9u5/kde_634_finally_here/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p><a href='https://www.reddit.com/r/unix/comments/1k2z9u5/kde_634_finally_here/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>:D</p></div><!-- SC_ON --></section><section class='preview-image'><p>&nbsp;</p><img src='https://i.redd.it/hw2rhctm3rve1.png' /></section>]]></description><pubDate>Sat, 19 Apr 2025 21:17:25 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1k17wpf/building_a_nonx86_box/</link><title>Building a non-x86 box</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1k17wpf/building_a_nonx86_box/</guid><comments>https://www.reddit.com/r/unix/comments/1k17wpf/building_a_nonx86_box/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1k17wpf/building_a_nonx86_box/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>Dear friends,</p><p>I am in somewhat in a lazy search for Sun Blade 150 to run as a very small web server. (If anybody has one at non exuberant price somewhere in Europe, please let me know; or HP C8000, or IBM 43p). However what I thought about building a small, non-x86-based machine, something of the size of 1L chassis, may be a bit larger (think of Dell SFF), based on Sparc/PA Risk/ etc from late 1990-beginning of 2000. Has anybody seen/participated in such a DIY project?</p><p>Thanks.</p></div><!-- SC_ON --></section>]]></description><pubDate>Thu, 17 Apr 2025 14:04:41 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1k15qjl/how_different_would_modern_macos_look_if_apple/</link><title>How different would modern MacOS look if Apple had stuck with A/UX? Would it even resemble modern OSX? Would it still use Aqua? Cocoa? .app files? Or would it more resemble classic MacOS but with a UNIX core? Would apple have gotten where it is now in terms of popularity? What about iOS/iPad and co?</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1k15qjl/how_different_would_modern_macos_look_if_apple/</guid><comments>https://www.reddit.com/r/unix/comments/1k15qjl/how_different_would_modern_macos_look_if_apple/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p><a href='https://www.reddit.com/r/unix/comments/1k15qjl/how_different_would_modern_macos_look_if_apple/'>Post permalink</a></p></section>]]></description><pubDate>Thu, 17 Apr 2025 11:28:52 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1jzj60a/make_certain_commands_require_sudo_permission/</link><title>Make certain commands require sudo permission</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1jzj60a/make_certain_commands_require_sudo_permission/</guid><comments>https://www.reddit.com/r/unix/comments/1jzj60a/make_certain_commands_require_sudo_permission/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1jzj60a/make_certain_commands_require_sudo_permission/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>Is there any ways to make sure certain docker command require sudo permission? Like I want &quot;docker rm&#39; command require sudo permission but not other docker commands.</p></div><!-- SC_ON --></section>]]></description><pubDate>Tue, 15 Apr 2025 10:00:08 +0530</pubDate></item><item><link>https://i.redd.it/2lao8zk27rue1.jpeg</link><title>A Update on my OS | Bunix (i.redd.it)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1jyt6ek/a_update_on_my_os_bunix/</guid><comments>https://www.reddit.com/r/unix/comments/1jyt6ek/a_update_on_my_os_bunix/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1jyt6ek/a_update_on_my_os_bunix/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>Hey fellas, so i made a post about my OS recently and just wanted to share what has changed.</p><p>So there are a lot more commands,Visual improvements,Kernel panic,Boot screen,And new drivers</p><p>Visit the project on github: <a href="https://github.com/0x16000/Bunix">https://github.com/0x16000/Bunix</a></p></div><!-- SC_ON --></section><section class='preview-image'><p>&nbsp;</p><img src='https://i.redd.it/2lao8zk27rue1.jpeg' /></section>]]></description><pubDate>Mon, 14 Apr 2025 13:03:17 +0530</pubDate></item><item><link>https://christopherdrum.github.io/posts/2025/04/porting-infocom-with-cosmo</link><title>Notes on Porting a UNIX Classic with Cosmopolitan (christopherdrum.github.io)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1jysowh/notes_on_porting_a_unix_classic_with_cosmopolitan/</guid><comments>https://www.reddit.com/r/unix/comments/1jysowh/notes_on_porting_a_unix_classic_with_cosmopolitan/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 20 min | <a href='https://www.reddit.com/r/unix/comments/1jysowh/notes_on_porting_a_unix_classic_with_cosmopolitan/'>Post permalink</a></p></section><section class='separator separator-before-parsed-content'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='parsed-content'><article><p><time>2025-04-12</time> </p><div><p><em>(updated April 28, 2025 to reflect new info from comments on the Hacker News post)</em></p></div><p>I made standalone executables of the <a href="https://en.wikipedia.org/wiki/Zork">Zork trilogy</a>, ported from original Infocom UNIX source to Cosmopolitan, are available for Windows/Mac/Linux/bsd for arm/x86 machines. These require no further installation nor external files to play.</p><p>Here&rsquo;s how to download and play Zork on the CLI:</p><div><pre><code>wget https://github.com/ChristopherDrum/pez/releases/download/v1.0.0/zork1 <span>chmod</span> +x zork1 ./zork1 <span># This one executable runs on any and all targetted platforms</span> <span># `zork2` and `zork3` are available, for trilogy completionists</span> <span># Windows users, add `.exe` to the downloaded file to make Windows happy</span> <span># Linux users with .NET Mono libraries might need to run `sh ./zork1` </span> </code></pre></div><p>Want to run an arbitrary .z3 text adventure file?<br> <a href="https://github.com/ChristopherDrum/pez/releases">Download the z-machine from here</a></p><h2>About the project</h2><p>Recently I published v3.0 of <a href="https://christopherdrum.itch.io/statusline">Status Line</a>, a project which makes <em>Zork</em> playble on the Pico-8, onto three major operating systems. With that deployed successfully (is there a &lsquo;knock on wood&rsquo; emoji?) I turned to porting <a href="https://github.com/ChristopherDrum/pez/blob/main/zip/infocom_source/phg_zip.c">Infocom&rsquo;s original UNIX z-machine source code</a> through the use of <a href="https://github.com/jart/cosmopolitan">Cosmopolitan</a>. After about six hours on a lazy Sunday I had it ported to six major operating systems, including Windows.</p><p>&ensp;Unlike Status Line which relies on the Pico-8 virtual machine host, this port runs <strong>natively</strong> on all supported systems. Even better, thanks to Cosmopolitan magic, there is only <strong>one</strong> distributable to maintain which can conform itself to run on whichever operating system is running it.</p><p>Here&rsquo;s the story of how and why I decided to do this project and what I learned along the way.</p><h2>What is a Z-Machine?</h2><p>Over the years I&rsquo;ve spent a lot of time looking at and thinking about the Infocom z-machine. Briefly put, Infocom text adventures were released as platform-independent game files which ran within platform-specific virtual machines for every system the company supported. The spec for that virtual machine is known as the &ldquo;z-machine.&rdquo;</p><p>&ensp;I don&rsquo;t know if they were &ldquo;the first&rdquo; to ship a commercial product using a VM on home computers, but they were definitely one of the first. In the 1980&rsquo;s, unique computer platforms were released at a dizzying rate (<a href="https://www.mobygames.com/game/50/zork-the-great-underground-empire/releases/">Zork 1 released on at least 18 platforms</a>) so it was important to be able to pivot onto new systems quickly. By using a VM, Infocom could rapidly bring their entire library of games to any new machine.</p><p><em>UPDATE:</em> Commentor ssrc noted in the Hacker News post that <a href="https://news.ycombinator.com/item?id=43677909#43678260">quite a few vms shipped</a> for home computers before Zork, especially in the development community, as with Forth, Apple Pascal, and others. Scott Adams&rsquo;s adventures also used a kind of vm, and he beat Zork to market.</p><p>&ensp;These days gamers have a plethora of choice for modern z-machine interpreters, but back then it was proprietary code. Only Infocom could make a z-machine interpreter which they dubbed ZIP, &ldquo;Zork Interpreter Program.&rdquo;</p><p>&ensp;ZIPs were mostly written in hand-tooled assembly, unique to each platform, to squeeze maximum performance out of minimal (16K?! 1.774Mhz?!) hardware. But they weren&rsquo;t all written in assembly; there also existed a UNIX ZIP, written in C. I don&rsquo;t know assembly very well at all, but I absolutely know enough C to be a reckless tinkerer. I lazily wondered if that C code would build for me, unchanged, as-is. One compile later I had my answer: <em>no.</em></p><p>&ensp;I&rsquo;m nothing if not tenacious, and the z-machine is an area in which I have better-than-average knowledge. Bringing this back to life felt like a perfect project to help me continue exploring the historical side of Infocom while also being simple enough to let me explore the potential of Cosmopolitan.</p><h2>What is Cosmopolitan?</h2><p>Put simply, <a href="https://justine.lol/cosmopolitan/">Cosmpolitan</a> is Justine Tunney&rsquo;s brainchild to transform plain ole&rsquo; C into a &ldquo;write once, run anywhere&rdquo; language. Consider the typical approach to achieving such a goal, for example Java, WASM, and even the Infocom z-machine itself.</p><p>&ensp;In the typical case, code is written in a unique (even domain-specific) language and compiled into custom byte-code. In the Java/z-machine cases, the promise of &ldquo;run anywhere&rdquo; is facilitated by a bespoke virtual machine, custom built for each target platform, which consumes the custom byte-code and runs the program. For WASM, that virtual machine is typically the web browser, though standalone options exist.</p><p>&ensp;In Infocom&rsquo;s case, a compact interpreter was bundled on disk with each game. Running it was a transparent experience, because launching the interpreter would auto-launch the bundled game file. From the user perspective, she was just launching a game. In reality she was launching a VM which launched the game.</p><h3>That which unites us</h3><p>Cosmopolitan takes a different approach to &ldquo;write once, run anywhere.&rdquo; Rather than creating a virtual machine tuned to each machine&rsquo;s unique differences, instead it flips the script and evaluates the <em>similarities</em> of modern machines; what has stayed consistent over time? A common ABI, using standard C library calls, is designed around those shared roots.</p><p>&ensp;Justine also noticed that executables on each platform have more in common than not. The APE format she developed, <a href="https://justine.lol/ape.html">Actually Portable Executable</a>, is structured very much like a .zip archive (not the Infocom ZIP!) and contains native code for all targeted platforms. After a build and compile, the resulting application will &ldquo;run anywhere&rdquo; because it is native everywhere; no virtual machine needed.</p><h3>Bananas for APE</h3><p>An APE file built against the Cosmopolitan project&rsquo;s libraries can be given to almost anyone on a 64-bit machine, of any OS, by any maker and it will run. We do not need to do separate builds for macOS x64, macOS M-series, Windows 8, 9, 10, 11, Ubuntu, pick-a-Linux, BSD, etc. A single build can run on almost any modern machine.</p><p>&ensp;For this project, this meant that whatever weekend effort I put into getting Infocom&rsquo;s ZIP to work again could potentially serve a disproportionately large audience. As well, I wouldn&rsquo;t need to worry about tweaking things per-platform, or crafting complex makefile incantations. I could focus on game correctness and ignore the platform-specific vagaries. I found this approach to be mentally freeing.</p><p>&ensp;An additional benefit of the APE&rsquo;s .zip archive roots is that we can take things further and create self-contained executables which embed the z-machine and a game data file into one standalone package. This makes for a very interesting distribution option, IMHO.</p><h2>Coding Like It&rsquo;s 1985</h2><p>My day job is in Swift and Objective-C, and <a href="https://www.lexaloffle.com/bbs/?tid=54517">my</a> <a href="https://christopherdrum.itch.io/picocalc">weekend</a> <a href="https://christopherdrum.itch.io/mystery-house">projects</a> tend to be in Lua for the Pico-8. I dip into C from time to time, but my experience is firmly within modern coding conventions. I had never been introduced to K&amp;R-style C, but this code from 1985 quickly forced the acquaintance.</p><p>&ensp;As a first-timer to the K&amp;R style, the main thing I noticed is how much is &ldquo;assumed.&rdquo; For example, for functions which don&rsquo;t declare a return type, <code>int</code> is assumed. even if the function <em>actually</em> returns nothing. Some do return ints. Some return <code>char</code> but do not declare a return value, so the calling function assumes int in a kind of implicit casting.</p><p>&ensp;Function parameters are only enforced by &ldquo;trust&rdquo; in forward declarations; they don&rsquo;t need to be declared. And heck, why even bother with a shared forward declaration at all when you can locally forward declare external functions within a calling function?</p><p>&ensp;<code>if</code> statements using <code>THEN</code> instead of braces? I guess you had to be there.</p><p><em>UPDATE:</em> Commentor ganache on the Hacker News post notes that this is not a K&amp;R style if/then. Rather, <code>THEN</code> has been defined in the original source header as a no-op. Commentor pcwalton says <a href="https://oldhome.schmorp.de/marc/bournegol.html">it comes from Bergenol</a>.</p><p>&ensp;This is all to say that it took time to adjust my reading comprehension skills for the code and make sense of what I was looking at.</p><h2>The Repairs</h2><p>The repairs necessary to get this source code to compile and work were, honestly, quite simple. The changes boiled down to three areas:</p><ul> <li>Handling NULL</li> <li>Function declarations</li> <li>Deprecations</li> </ul> <h3>NULL and NULL and NULL</h3><p>NULL in the original codebase was defined as:</p><p>Then again later, in the same file:</p><div><pre><code><span>#define NULL 0 --not a typo; it was double-defined. </span></code></pre></div><p>Of course in modern C libraries we define NULL as:</p><p>This gave us three definitions of NULL for the project. Fun! But we only need one. Untouched, this caused compilation to fail with code such as this (that K&amp;R if/THEN works fine!):</p><div><pre><code><span>newlin</span><span>()</span> <span>{</span> <span>*</span><span>chrptr</span> <span>=</span> <span>NULL</span><span>;</span> <span>/* indicate end of line */</span> <span>if</span> <span>(</span><span>scripting</span><span>)</span> <span>THEN</span> <span>*</span><span>p_chrptr</span> <span>=</span> <span>NULL</span><span>;</span> <span>dumpbuf</span><span>();</span> <span>}</span> </code></pre></div><p>The assumption and kind of &ldquo;contract&rdquo; for NULL in the year the source was written was, as we saw, <code>#define NULL 0</code>. If that&rsquo;s what they wanted, then that&rsquo;s what we&rsquo;ll give them.</p><div><pre><code><span>newlin</span><span>()</span> <span>{</span> <span>*</span><span>chrptr</span> <span>=</span> <span>;</span> <span>/* indicate end of line */</span> <span>if</span> <span>(</span><span>scripting</span><span>)</span> <span>THEN</span> <span>*</span><span>p_chrptr</span> <span>=</span> <span>;</span> <span>dumpbuf</span><span>();</span> <span>}</span> </code></pre></div><h3>Function declarations (and the lack thereof)</h3><p>A lot of compilation errors were related to functions being called that hadn&rsquo;t been declared yet. This was fairly trivial to handle; here&rsquo;s an example of the pattern used in the original code.</p><p><em>UPDATE:</em> Commentor o11c on the Hacker News post noted that these flags are useful for this problem.<br> <code>-Werror=missing-declarations -Werror=redundant-decls</code></p><div><pre><code><span>char</span> <span>*</span><span>getpag</span><span>(</span><span>ptr</span><span>,</span> <span>page</span><span>)</span> <span>char</span> <span>*</span><span>ptr</span><span>,</span> <span>*</span><span>page</span><span>;</span> <span>{</span> <span>short</span> <span>blk</span><span>,</span> <span>byt</span><span>,</span> <span>oldblk</span><span>;</span> <span>char</span> <span>*</span><span>makeptr</span><span>();</span> <span>pagfault</span> <span>=</span> <span>1</span><span>;</span> <span>/* set flag */</span> <span>byt</span> <span>=</span> <span>(</span><span>ptr</span> <span>-</span> <span>dataspace</span><span>)</span> <span>&amp;</span> <span>BYTEBITS</span><span>;</span> <span>/* isolate byte offset in block */</span> <span>if</span> <span>(</span><span>curblk</span><span>)</span> <span>THEN</span> <span>{</span> <span>/* in print immediate, so use */</span> <span>blk</span> <span>=</span> <span>curblk</span> <span>+</span> <span>1</span><span>;</span> <span>/* curblk to find page */</span> <span>curblk</span><span>++</span><span>;</span> <span>/* and increment it */</span> <span>}</span> <span>else</span> <span>blk</span> <span>=</span> <span>nxtblk</span><span>(</span><span>ptr</span><span>,</span> <span>page</span><span>);</span> <span>/* get block offset from last */</span> <span>ptr</span> <span>=</span> <span>makeptr</span><span>(</span><span>blk</span><span>,</span> <span>byt</span><span>);</span> <span>/* get page and pointer for this pair */</span> <span>return</span><span>(</span><span>ptr</span><span>);</span> <span>}</span> </code></pre></div><p>&ensp;OK, first we have to wrap our heads around how type declarations for passed values are declared <strong>after</strong> the function header. Again, we&rsquo;ll let our eyes glaze past the use of THEN. Rather, please notice <code>char *makeptr()</code>. That is a locally scoped forward declaration for a function that is defined later; its real header looked like this:</p><div><pre><code><span>char</span> <span>*</span><span>makeptr</span><span>(</span><span>blk</span><span>,</span> <span>byt</span><span>)</span> <span>short</span> <span>blk</span><span>,</span> <span>byt</span><span>;</span> <span>{...}</span> </code></pre></div><p>&ensp;Notice how the previous forward declaration didn&rsquo;t bother with pesky function parameters. What does makeptr() take? Wishes and dreams, from the looks of it!</p><p>&ensp;I switched all functions headers to use modern conventions, turning the makeptr definition into a format I&rsquo;m sure most reading this have at least a passing familiarity with.</p><div><pre><code><span>char</span> <span>*</span><span>makeptr</span><span>(</span><span>short</span> <span>blk</span><span>,</span> <span>short</span> <span>byt</span><span>)</span> <span>{...}</span> </code></pre></div><p>&ensp;I collected all function headers into a big block of forward declarations at the top of the .c file and swiftly (well, tediously) eliminated perhaps 80% of compiler warnings and errors. With a clean set of forward declarations, all locally scoped declarations threw errors, making them easy to target for elimination.</p><h3>Deprecations</h3><p>The times they are (were) a changing. There were a few things that simply shifted how they needed to be done.</p><ul> <li><code>srand()</code> seeding was quite complicated. I don&rsquo;t know if this was just &ldquo;how things worked&rdquo; back then or what, but here&rsquo;s what was in place.<div><pre><code><span>mtime</span><span>()</span> <span>{</span> <span>/* mtime get the machine time for setting the random seed. */</span> <span>long</span> <span>time</span><span>(),</span> <span>tloc</span><span>;</span> <span>rseed</span> <span>=</span> <span>time</span><span>(</span><span>tloc</span><span>);</span> <span>/* get system time */</span> <span>srand</span><span>(</span><span>rseed</span><span>);</span> <span>/* get a random seed based on time */</span> <span>return</span><span>;</span> <span>}</span> </code></pre></div><p>which I replaced simply with the below. &ldquo;Good enough for government work&rdquo; as the saying goes.</p><div><pre><code><span>mtime</span><span>()</span> <span>{</span> <span>srand</span><span>(</span><span>time</span><span>(</span><span>));</span> <span>}</span> </code></pre></div></li> <li>The <code>backspace</code> key on my particular keyboard sends ASCII 128, but the original source code only ever expects ASCII 8. Simple enough to add another value check to allow backspacing on game input (to erase your typed command).</li> <li><code>sys/termio.h</code> has been supplanted by <code>termios.h</code> and its attribute set/get calls were updated accordingly.<div><pre><code><span>struct</span> <span>termio</span> <span>ttyinfo</span><span>;</span> <span>ttyfd</span> <span>=</span> <span>fileno</span><span>(</span><span>stdin</span><span>);</span> <span>/* get a file descriptor */</span> <span>if</span> <span>(</span><span>ioctl</span><span>(</span><span>ttyfd</span><span>,</span> <span>TCGETA</span><span>,</span> <span>&amp;</span><span>ttyinfo</span><span>)</span> <span>==</span> <span>-</span><span>1</span><span>)</span> <span>THEN</span> <span>printf</span><span>(</span><span>"</span><span>\n</span><span>IOCTL - TCGETA failed"</span><span>);</span> </code></pre></div><p>becomes</p><div><pre><code><span>struct</span> <span>termios</span> <span>ttyinfo</span><span>;</span> <span>ttyfd</span> <span>=</span> <span>fileno</span><span>(</span><span>stdin</span><span>);</span> <span>/* get a file descriptor */</span> <span>if</span> <span>(</span><span>tcgetattr</span><span>(</span><span>ttyfd</span><span>,</span> <span>&amp;</span><span>ttyinfo</span><span>)</span> <span>==</span> <span>-</span><span>1</span><span>)</span> <span>{</span> <span>printf</span><span>(</span><span>"</span><span>\n</span><span>tcgetattr failed"</span><span>);</span> <span>}</span> </code></pre></div></li> </ul> <h2>cosmocc -o zm phg_zip.c -mtiny</h2><p>Thanks to cosmocc, Cosmpolitan&rsquo;s compilation tool, that single line got the z-machine up and running on 6 modern operating systems. No makefile, no per-system compilation shenanigans, no conditional code on my part. Almost embarrassingly simple, Cosmopolitan allowed me to target a hardware-agnostic ABI, and apply only minimal (often superficial) patches to the original source code.</p><p>&ensp;Let me just say that seeing Zork&rsquo;s famous introduction spring to life from within the sleeping source code of the very company that created it was a really special moment. After spending so much time on Status Line over the years, I expected to be jaded by &ldquo;West of House&rdquo; yet again. To be honest, it was quite the opposite. Knowing the history of the codebase and its place in the legacy of computer gaming only enhanced that feeling of discovery and exploration.</p><h2>But We Can Go Further</h2><p>APE files have a secret hidden superpower. The Infocom z-machine takes a <code>-g</code> flag at the command line, followed by the path to a <code>.z3</code> data file to launch a given game. It is actually possible to embed that launch flag, and its related data file, into the APE file itself. The game will then, on launch, check itself internally for pre-populated launch arguments, which can reference internal data structures for specific data files.</p><p>&ensp;Think of a macOS app, and how it is actually just a folder of executables and data which can be trivially viewed as such. We can use the APE format similarly. To make this work, we need two pieces:</p><h4>Embed the .args and data</h4><p>Create a file called .args which reads <code>-g/zip/game_filename.z3</code>. This is similar to how we would launch a game from the command line, but with a zip/ path prefix. That is the internal, relative position where these data files live. To make further manipulation of the executable easier, rename <code>zm</code> to <code>zm.zip</code>. Copy your <code>.args</code> file and related <code>.z3</code> game file into the <code>zm.zip</code> file with</p><div><pre><code>zip <span>-j</span> zm.zip .args /path/to/game_filename.z3 </code></pre></div><h4>Tell the app to look for embedded .args</h4><p>The executable proper needs to be told to look for embedded .args. Cosmopolitan has a handy command which does precisely that, which we call at the very start of main()</p><div><pre><code><span>#include </span><span>int</span> <span>main</span><span>(</span><span>int</span> <span>argc</span><span>,</span> <span>char</span> <span>**</span><span>argv</span><span>)</span> <span>{</span> <span>int</span> <span>_argc</span> <span>=</span> <span>cosmo_args</span><span>(</span><span>"/zip/.args"</span><span>,</span> <span>&amp;</span><span>argv</span><span>);</span> <span>if</span> <span>(</span><span>_argc</span> <span>!=</span> <span>-</span><span>1</span><span>)</span> <span>argc</span> <span>=</span> <span>_argc</span><span>;</span> <span>...</span> </code></pre></div><p>&ensp;That will populate <code>argv</code> with the embedded args as though they had been manually passed by the user at the command line. The repo includes a makefile with an <code>embed</code> command which will do all of this busywork for you. Rename the <code>zm.zip</code> to whatever you want to call this standalone build. If you&rsquo;re on Windows, don&rsquo;t forget the <code>.exe</code> file extension.</p><h2>Some Unsolicited Advice</h2><p>As a first project to understand both the process of porting older UNIX code to modern C as well as how to use Cosmopolitan, it proved invaluable to work on something within my wheelhouse. I knew intimately what a z-machine should do, and how it should look and feel. I understood ahead of time the scope and goal of the project, and I also knew when something wasn&rsquo;t working right (looking at you <code>fflush(stdout)</code>). Subject familiarity is invaluable in providing intuition when something is wrong, and can even provide foreknowledge for how to tackle certain classes of repairs.</p><p>&ensp;When you compile and see a huge list of warnings and errors, don&rsquo;t panic. Don&rsquo;t fret. Don&rsquo;t feel defeated. Rather, think of it as your &ldquo;to do&rdquo; checklist, then buckle down, and attack those compiler errors one by one. In the compiler, you can use the <code>-w</code> flag to turn off warnings and solely focus on errors. We don&rsquo;t really want to do that for shipping products, but if you&rsquo;re only interested in getting something kick-started and working for fun, it can definitely pare a &ldquo;to do&rdquo; list down into something manageable as you acclimate to the source code.</p><p>&ensp;Lastly, I really cannot stress enough the ease of development that Cosmopolitan provided. The <code>cosmocc</code> compiler, itself built upon <code>gcc</code>, is an APE and as-such is a self-contained compilation ecosystem, bundled with the Cosmopolitan Libc drop-in replacement to the C standard library.</p><p>&ensp;I&rsquo;ve spent so much time in the past getting $PATHs set up, putting libraries in the right place, installing dependencies, trying to get MSYS2 to behave, and more that to have the convenience of a single APE application unified across my machines was a feeling of, &ldquo;Yes, this is how things should be. It should be this simple.&rdquo;</p><p>&ensp;I hope you have the same positive experience.</p><h2>Playing Z-Machine Games</h2><p>A <a href="https://github.com/ChristopherDrum/pez/releases">pre-compiled APE build of the z-machine is available for 64-bit systems on my github</a> along with notes about how to use it. Standalone builds of the Zork trilogy are also available there, to demonstrate the power of the APE format. Remember, this project essentially reflects the state the code was in in 1985; I make no guarantees of its robustness nor accuracy! But that&rsquo;s not really the reason to check it out, I think. If you seriously want to play interactive fiction, there are numerous better options than this port.</p><p>&ensp;No, the reason to play this for yourself is to appreciate a singular, historical moment; to experience that brief feeling of reaching back in time and making a connection to a significant object from the past.</p><p>&ensp;That&rsquo;s not without merit, I think.</p></article> </section>]]></description><pubDate>Mon, 14 Apr 2025 12:27:53 +0530</pubDate></item><item><link>https://www.youtube.com/watch?v=8COQBsN586k</link><title>Redox operating system how to install and use in QEMU tutorial (youtube.com)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1jwt41t/redox_operating_system_how_to_install_and_use_in/</guid><comments>https://www.reddit.com/r/unix/comments/1jwt41t/redox_operating_system_how_to_install_and_use_in/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p><a href='https://www.reddit.com/r/unix/comments/1jwt41t/redox_operating_system_how_to_install_and_use_in/'>Post permalink</a></p></section><section class='embedded-media'><iframe width="356" height="200" src="https://www.youtube.com/embed/8COQBsN586k?feature=oembed&enablejsapi=1" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen title="Redox operating system how to install and use in QEMU tutorial - March 2025 - 873788f9"></iframe></section>]]></description><pubDate>Fri, 11 Apr 2025 21:19:00 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1jt1ynd/finally_embracing_find1/</link><title>Finally embracing find(1)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1jt1ynd/finally_embracing_find1/</guid><comments>https://www.reddit.com/r/unix/comments/1jt1ynd/finally_embracing_find1/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1jt1ynd/finally_embracing_find1/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>For some reason, in the last month, my knee-jerk reaction to use ls(1) has been swapped with find(1).</p><p>I have been doing the former for 25 years, and there is nothing wrong with it for sure. But find(1) seems like what I really want to be using 9/10. Just wasn&#39;t in my muscle memory till very recently.</p><p>When I want to see what&#39;s in a dir, `find dir&#39; is much more useful.</p><p>I have had ls(1) aliased as `ls -lhart&#39; and still will use it to get a quick reference for what is the newest file, but apart from that, it&#39;s not the command I use any longer.</p></div><!-- SC_ON --></section>]]></description><pubDate>Mon, 07 Apr 2025 00:44:36 +0530</pubDate></item><item><link>https://v.redd.it/tsg33fwe09te1</link><title>Linux? nah bro i use Roblox btw (Video)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1jsz9se/linux_nah_bro_i_use_roblox_btw/</guid><comments>https://www.reddit.com/r/unix/comments/1jsz9se/linux_nah_bro_i_use_roblox_btw/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p><a href='https://www.reddit.com/r/unix/comments/1jsz9se/linux_nah_bro_i_use_roblox_btw/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p><strong>Linux? nah bro, I use Roblox</strong><br/><a href="https://www.roblox.com/games/107544816576659/Hyprland-experience"><strong>The game</strong></a></p><ul><li><strong>Aplication launcher</strong>: fuzzel recreation</li><li><strong>WM</strong>: Roblox Lua Tiling wm</li><li><strong>Ba</strong>r: Waybar recreation</li></ul></div><!-- SC_ON --></section><section class='embedded-media'><video controls preload='auto' autoplay='false'><source src='https://v.redd.it/tsg33fwe09te1/HLSPlaylist.m3u8?a=1760173886%2CNTJhYmE4YTg0ZDA2ZTFiNDI0MTUzZjYxMTYxMWU3ZDFmYmFiZmMxZjFlYWQyZDFlMjA3Mzc5NmM5MzQxZDU3Mg%3D%3D&amp;v=1&amp;f=sd' type='video/mp4' width='1280' height='720'><img src='' alt='' /></video></section>]]></description><pubDate>Sun, 06 Apr 2025 22:50:28 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1jsprru/constantly_timeshift_epoch_rather_than_try_to/</link><title>Constantly time-shift epoch rather than try to extend it - 2038 problem</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1jsprru/constantly_timeshift_epoch_rather_than_try_to/</guid><comments>https://www.reddit.com/r/unix/comments/1jsprru/constantly_timeshift_epoch_rather_than_try_to/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 2 min | <a href='https://www.reddit.com/r/unix/comments/1jsprru/constantly_timeshift_epoch_rather_than_try_to/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>Kia ora from Aotearoa New Zealand. This is a tentative working theory on the 2038 problem. Thank you for treating it as such. Hoping for discussion from my fellow Unix folks. </p><p><em>Overview</em></p><p>The 2038 problem exists in systems which measure Unix time‚Äîthe number of seconds elapsed since the Unix epoch (00:00:00 UTC on 1 January 1970)‚Äîand store it in a signed 32-bit integer.</p><p>The data type is only capable of representing up to this far after the epoch: 03:14:07 UTC on 19 January 2038.</p><p>The 2038 is a broad problem covering many systems (automotive, industrial, embedded, cell phones), so a universal fix is needed.</p><p>Any system using data structures with signed 32-bit time representations with a need for access to dates, is at risk.</p><p><em>Working Theory</em></p><p>I figured the root of the problem is that we cannot ever store more in that signed 32-bit integer. Simple as that. No backporting into that integer is feasible. So why not refocus the discussion to the epoch itself?</p><p>I&#39;d like to open a discussion on whether we need to store more than the signed integer can handle. Can we instead find a way to continually bring forward the epoch at an given interval, and keep it in line with current time, perhaps by linking it to a constantly-ticking locale? After all, the epoch time itself was arbitrarily selected.</p><p>This keeps the integer the same, and keeps the size of the time representation the same.</p><p>To avoid data corruption this would also mean that files and other structures of a certain age would eventually need to be stamped &#39;pre-epoch&#39; rather than with a date, perhaps with MAC or some other extended file attribute implementation.</p><p>Thoughts?</p></div><!-- SC_ON --></section>]]></description><pubDate>Sun, 06 Apr 2025 14:19:33 +0530</pubDate></item><item><link>https://chronicles.mad-scientist.club/tales/grepping-logs-remains-terrible/</link><title>Grepping logs remains terrible - Chronicae Novis Rebus (chronicles.mad-scientist.club)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1jqct2s/grepping_logs_remains_terrible_chronicae_novis/</guid><comments>https://www.reddit.com/r/unix/comments/1jqct2s/grepping_logs_remains_terrible_chronicae_novis/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 9 min | <a href='https://www.reddit.com/r/unix/comments/1jqct2s/grepping_logs_remains_terrible_chronicae_novis/'>Post permalink</a></p></section><section class='separator separator-before-parsed-content'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='parsed-content'><div><p><time title="2025-04-01 23:00"> 18th day of Discord 3191 YOLD </time></p><p>It has <a href="https://asylum.madhouse-project.org/blog/2021/10/23/peeking-through-logs/">been a moment</a> since I last wrote about logging, and save a month and a bit, almost a decade since I publicly stated my opinion that <a href="https://asylum.madhouse-project.org/blog/2015/05/05/grepping-logs-is-terrible/">grepping logs is terrible</a> (and two days later, it was <a href="https://asylum.madhouse-project.org/blog/2015/05/07/grepping-logs-is-still-terrible/">still bad</a>). But that was then, a decade ago, surely it can&rsquo;t be <em>that</em> bad today, in the age of many gigabytes of memory, SSDs, surely we can just grep stuff and be on our merry way!</p><h2><a href="https://chronicles.mad-scientist.club#lets-play-a-game"> # </a> Lets play a game</h2><p>Lets set the stage!</p><p>In one corner, we have Quickbeam, a late-2014 Mac Mini sitting on a shelf in my home office, sporting 4GiB of RAM, 4 CPU cores, and a rusty HDD. In the other corner, Telchar, my desktop, with 32GiB RAM, 16 CPU cores, and an M.2 SSD. For the sake of fairness, throughout this experiment, I will be using my desktop for grepping, and Quickbeam to run queries against VictoriaLogs, with the following little script (as <code>bin/lg</code>):</p><pre><code>#! /bin/sh eval curl -s http://10.69.0.4:9428/select/logsql/query -d "'query=$@'" </code></pre><p>The data? 4.4 million lines of JSON (about 4.4GiB on disk), of this structure (except in compact, one line per log format, not pretty printed like here):</p><pre><code>{ "_time": "2025-03-28T01:17:02.929147525Z", "_stream_id": "000000000000000000a9cae4dcdfa68cdb7dc1ab243797c4", "_stream": "{request.host=\"cellar.madhouse-project.org\",service=\"caddy\"}", "_msg": "[GPTBot; bad-visitor] - Mozilla/5.0 AppleWebKit/537.36 (KHTML, like Gecko; compatible; GPTBot/1.2; +https://openai.com/gptbot)", "classification.sketchy_agent": "false", "classification.user_agent": "GPTBot", "classification.visit": "bad-visitor", "request.host": "cellar.madhouse-project.org", "request.method": "GET", "request.user_agent": "Mozilla/5.0 AppleWebKit/537.36 (KHTML, like Gecko; compatible; GPTBot/1.2; +https://openai.com/gptbot)", "response.content_type": "text/html; charset=utf-8", "response.status": "200", "service": "caddy", "request.remote_ip": "4.227.36.52", "request.uri": "/robots.txt", "response.size": "2828" } </code></pre><p>Real logs, from a real server, a snapshot of my <a href="https://pages.madhouse-project.org/algernon/infrastructure.org/services_caddy_logging">Caddy logs</a>.</p><p>We&rsquo;ll run a few simple - and not so simple - queries, for fun! We&rsquo;ll compare the results, and see how many circles grepping on the desktop runs around the decade old poor Mini! Hold on to your pants, this is going to be a wild ride!</p><h2><a href="https://chronicles.mad-scientist.club#how-many-logs-do-we-have"> ## </a> How many logs do we have?</h2><p>Lets start with something simple and baseline: how many logs do we have at all?</p><pre><code>telchar&gt; time wc -l logs.json 4464935 logs.json real 0m0.763s user 0m0.070s sys 0m0.690s </code></pre><pre><code>quickbeam&gt; time bin/lg '* | count()' {"count(*)":"4464935"} real 0m0.022s user 0m0.009s sys 0m0.005s </code></pre><p><em>Uncomfortable silence&hellip;</em></p><h2><a href="https://chronicles.mad-scientist.club#how-much-data-did-we-serve"> ## </a> How much data did we serve?</h2><p>Fine, okay, the database has it easy here, because it likely caches how many entries there are to begin with, it cheats! Lets do something it <em>can&rsquo;t</em> precalculate and store: the calculated sum of response sizes.</p><pre><code>telchar&gt; f() { jq -s '[.[]."response.size" | tonumber] | add' logs.json; } telchar&gt; time f 19032774024 real 0m59.487s user 0m50.497s sys 0m16.228s </code></pre><p>Ooof, see?! This is complicated and expensive, and we even used <code>jq</code> to slurp it all into memory first!</p><pre><code>quickbeam&gt; time bin/lg '* | stats sum(response.size) outgoing_data' {"outgoing_data":"19032774024"} real 0m0.546s user 0m0.010s sys 0m0.006s </code></pre><p><em>Uncomfortable silence&hellip;</em></p><p>I suppose it is <code>jq</code>&rsquo;s fault: all that JSON parsing, and temporary objects and everything must take a lot of effort! We should be able to just&hellip; <code>sed</code> out what we need, and <code>bc</code> the sizes together. Without the JSON parsing, we&rsquo;ll be a lot faster!</p><pre><code>telchar&gt; f() { cat logs.json \ | sed -e 's,.*"response.size":"\([0-9]*\)".*,\1,' \ | paste -sd+ \ | bc -q; } telchar&gt; time f 19032774024 real 8m0.508s user 7m57.614s sys 0m9.228s </code></pre><p><em>Uncomfortable silence&hellip;</em></p><h2><a href="https://chronicles.mad-scientist.club#but-you-said-grep-is-terrible-where-is-the-grep"> ## </a> But you said grep is terrible! WHERE IS THE GREP?!</h2><p>Okay, okay, lets count how many requests <code>git.madhouse-project.org</code> received! We&rsquo;re not restructuring data, we&rsquo;re not parsing anything, we&rsquo;re just grepping for a string.</p><pre><code>telchar&gt; f() { fgrep -c '"request.host":"git.madhouse-project.org"' logs.json } telchar&gt; time f 1036467 real 0m2.060s user 0m0.646s sys 0m1.066s </code></pre><p>That&rsquo;s not too bad, we&rsquo;re finally getting somewhere! Go, <code>grep</code>, go! Try beating that, Mini.</p><pre><code>quickbeam&gt; time bin/lg 'request.host:git.madhouse-project.org | count()' {"count(*)":"1036467"} real 0m0.029s user 0m0.011s sys 0m0.005s </code></pre><p><em>Uncomfortable silence&hellip;</em></p><h2><a href="https://chronicles.mad-scientist.club#surely-the-database-is-slower-when-there-s-a-regexp"> ## </a> Surely the database is slower when there&rsquo;s a regexp!</h2><pre><code>quickbeam&gt; time bin/lg 'request.host:~madhouse-project.org | count()' {"count(*)":"1619872"} real 0m0.036s user 0m0.009s sys 0m0.007s </code></pre><p>Well, it <em>is</em> slower, indeed, by about <del>1/1000th of James Bond</del> 0.007s.</p><pre><code>telchar&gt; f() { grep -c '"request.host":"[^"]*madhouse-project.org"' logs.json } telchar&gt; time f 1619872 real 0m12.119s user 0m11.380s sys 0m0.676s </code></pre><p><em>Uncomfortable silence&hellip;</em></p><h2><a href="https://chronicles.mad-scientist.club#you-re-making-me-sad"> ## </a> You&rsquo;re making me sad&hellip;</h2><p>Fine, for such simple queries, the database wins. But what if we want to aggregate things? Show how many hits each unique host had! Hmm? Can your database beat this:</p><pre><code>telchar&gt; f() { cat logs.json \ | jq -r -s '.[]."request.host"' \ | fgrep "madhouse-project.org" \ | sort \ | uniq -c } telchar&gt; time f 18366 ap.forgejo.madhouse-project.org 74580 cellar.madhouse-project.org 1036467 git.madhouse-project.org 1757 git.madhouse-project.org:443 68881 iocaine.madhouse-project.org 421578 poison.madhouse-project.org real 0m58.843s user 0m50.235s sys 0m17.230s </code></pre><pre><code>quickbeam&gt; time bin/lg 'request.host:~"madhouse-project.org" | uniq by(request.host) hits' {"request.host":"git.madhouse-project.org:443","hits":"1757"} {"request.host":"poison.madhouse-project.org","hits":"421578"} {"request.host":"iocaine.madhouse-project.org","hits":"68881"} {"request.host":"cellar.madhouse-project.org","hits":"74580"} {"request.host":"git.madhouse-project.org","hits":"1036467"} {"request.host":"ap.forgejo.madhouse-project.org","hits":"18366"} real 0m0.065s user 0m0.009s sys 0m0.006s </code></pre><p>Please stop.</p><h2><a href="https://chronicles.mad-scientist.club#please-explain-what-s-happening-here"> # </a> Please explain what&rsquo;s happening here&hellip;</h2><p>What we saw here is that a computer with much more RAM, and computing power, and faster storage got absolutely obliterated by an overloaded Mac Mini that is ten years its senior. And not only in speed, but resource use too: I haven&rsquo;t shown it, but working with raw text used a lot more CPU time, disk IO, and memory; meanwhile the Mac Mini barely blinked.</p><p>And not because it was all cached in memory! These are all cold queries. Cached queries are much, much faster. But how can it be that such an underpowered device runs circles around a powerful desktop?</p><p>Purpose-built software, dear reader. Purpose built software.</p><p>On the Mini, I&rsquo;m running <a href="https://victoriametrics.com/products/victorialogs/">VictoriaLogs</a>, a high performance log database. It&rsquo;s not your average generic indexer like ElasticSearch and its ilk, nor is it anything like a traditional relational database. It shows some resemblance to document stores, but only on the surface. It is specifically built for logs. Structured data is indexed and tokenized. Due to tokenization, the on-disk (and thus, in-memory) data is a lot smaller, and many queries are considerably cheaper, even if performing a full scan: rather than comparing arbitrary long strings, it will compare much smaller, bounded integer tokens in most cases. Feel free to <a href="https://docs.victoriametrics.com/victorialogs/faq/#how-does-victorialogs-work">read about</a> how VictoriaLogs works, it&rsquo;s a very educational read!</p><p>When there&rsquo;s less data to scan, things are faster. When comparison is cheaper, things are faster. Who would have thought! Databases were invented for a reason: because scanning through raw data over and over again was inefficient, and did not scale. This applies to logs just as much as to any other kind of data. Once you&rsquo;re past the scale of a few hundred megabytes, if you want to do ad-hoc queries against a text log, you&rsquo;re going to have a bad time.</p><p>Databases are good. Even for logs. Even more so if the database is specifically built for storing and querying logs. My greps above might not be the most efficient ones, but even if I make them an order of magnitude faster, the database on the decade old Mac Mini will still beat them without breaking a sweat.</p><p>Don&rsquo;t grep your logs. Shove them in a log-ready database and query that. Not only will it require <em>considerably</em> less disk space, it will require less computing power, less RAM, and as a result, less time to perform the queries. And if that&rsquo;s not enough, you can give the logs structure! You no longer need to remember the order of fields in a httpd&rsquo;s Common Log Format, you can query against a named field instead. You can run aggregations, computations, build stats, correlate, join, and do all kinds of other database-y stuff. Not only does it perform better, you can do more, and do so more conveniently.</p><p>Plain text is a poor database, and grepping a poor database remains terrible.</p><p>See you in 2035.</p></div></section>]]></description><pubDate>Thu, 03 Apr 2025 13:41:49 +0530</pubDate></item><item><link>https://lists.mindrot.org/pipermail/openssh-unix-dev/2025-April/041855.html</link><title>Call for testing: OpenSSH 10.0 ¬∂ Potentially-incompatible changes: This release removes support for the weak DSA signature algorithm, completing the deprecation process that began in 2015 (when DSA was disabled by default) and repeatedly warned over the the last 12 months. (lists.mindrot.org)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1jpejch/call_for_testing_openssh_100/</guid><comments>https://www.reddit.com/r/unix/comments/1jpejch/call_for_testing_openssh_100/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 9 min | <a href='https://www.reddit.com/r/unix/comments/1jpejch/call_for_testing_openssh_100/'>Post permalink</a></p></section><section class='separator separator-before-parsed-content'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='parsed-content'><div><b>Darren Tucker</b> <a href="https://lists.mindrot.orgmailto:openssh-unix-dev%40mindrot.org?Subject=Re%3A%20Call%20for%20testing%3A%20OpenSSH%2010.0In-Reply-To=%3CZ-xmeSJK-pe3LJ97%40gate.dtucker.net%3E" title="Call for testing: OpenSSH 10.0">dtucker at dtucker.net </a><br> <i>Wed Apr 2 09:19:37 AEDT 2025</i> <ul> <li>Next message (by thread): <a href="https://lists.mindrot.org041856.html">Call for testing: OpenSSH 10.0 </a></li> <li> <b>Messages sorted by:</b> <a href="https://lists.mindrot.orgdate.html#41855">[ date ]</a> <a href="https://lists.mindrot.orgthread.html#41855">[ thread ]</a> <a href="https://lists.mindrot.orgsubject.html#41855">[ subject ]</a> <a href="https://lists.mindrot.orgauthor.html#41855">[ author ]</a> </li> </ul> <hr><pre>Hi all. OpenSSH 10.0p1 is almost ready for release, so we would appreciate testing on as many platforms and systems as possible. This is primarily a bugfix release, although one notable change is the introduction of the sshd-auth binary (see below). Snapshot releases for portable OpenSSH are available from <a href="http://www.mindrot.org/openssh_snap/">http://www.mindrot.org/openssh_snap/</a> The OpenBSD version is available in CVS HEAD: <a href="http://www.openbsd.org/anoncvs.html">http://www.openbsd.org/anoncvs.html</a> Portable OpenSSH is also available via git using the instructions at <a href="http://www.openssh.com/portable.html#cvs">http://www.openssh.com/portable.html#cvs</a> At <a href="https://anongit.mindrot.org/openssh.git/">https://anongit.mindrot.org/openssh.git/</a> or via a mirror at Github: <a href="https://github.com/openssh/openssh-portable">https://github.com/openssh/openssh-portable</a> Running the regression tests supplied with Portable OpenSSH does not require installation and is a simply: $ ./configure &amp;&amp; make tests Live testing on suitable non-production systems is also appreciated. Please send reports of success or failure to <a href="https://lists.mindrot.org/mailman/listinfo/openssh-unix-dev">openssh-unix-dev at mindrot.org.</a> Security bugs should be reported directly to <a href="https://lists.mindrot.org/mailman/listinfo/openssh-unix-dev">openssh at openssh.com.</a> Below is a summary of changes. More detail may be found in the ChangeLog in the portable OpenSSH tarballs. Thanks to the many people who contributed to this release. Potentially-incompatible changes -------------------------------- * This release removes support for the weak DSA signature algorithm, completing the deprecation process that began in 2015 (when DSA was disabled by default) and repeatedly warned over the the last 12 months. * This release has the version number 10.0 and announces itself as "SSH-2.0-OpenSSH_10.0". Software that naively matches versions using patterns like "OpenSSH_1*" may be confused by this. * sshd(8): this release removes the code responsible for the user authentication phase of the protocol from the per- connection sshd-session binary to a new sshd-auth binary. Splitting this code into a separate binary ensures that the crucial pre-authentication attack surface has an entirely disjoint address space from the code used for the rest of the connection. It also yields a small runtime memory saving as the authentication code will be unloaded after the authentication phase completes. This change should be largely invisible to users, though some log messages may now come from "sshd-auth" instead of "sshd-session". Downstream distributors of OpenSSH will need to package the sshd-auth binary. * sshd(8): this release disables finite field (a.k.a modp) Diffie-Hellman key exchange in sshd by default. Specifically, this removes the "diffie-hellman-group*" and "diffie-hellman-group-exchange-*" methods from the default KEXAlgorithms list. The client is unchanged and continues to support these methods by default. Finite field Diffie Hellman is slow and computationally expensive for the same security level as Elliptic Curve DH or PQ key agreement while offering no redeeming advantages. ECDH has been specified for the SSH protocol for 15 years and some form of ECDH has been the default key exchange in OpenSSH for the last 14 years. * sshd(8): this release removes the implicit fallback to compiled- in groups for Diffie-Hellman Group Exchange KEX when the moduli file exists but does not contain moduli within the client- requested range. The fallback behaviour remains for the case where the moduli file does not exist at all. This allows administrators more explicit control over which DH groups will be selected, but can lead to connection failures if the moduli file is edited incorrectly. bz#2793 * sftp(1) and scp(1) will now explicitly not create a ControlMaster mux connection, since doing so would potentially create one with options more restrictive than those specified in the config file. This could lead to later confusion, particularly when used with ControlMaster=auto. sftp(1) and scp(1) can still use a mux connection, so ssh(1) can be used to establish one, after which they can use it as per usual. Changes since OpenSSH 9.9 ========================= New features ------------ * ssh(1): the hybrid post-quantum algorithm mlkem768x25519-sha256 is now used by default for key agreement. This algorithm is considered to be safe against attack by quantum computers, is guaranteed to be no less strong than the popular curve25519-sha256 algorithm, has been standardised by NIST and is considerably faster than the previous default. * ssh(1): prefer AES-GCM to AES-CTR mode when selecting a cipher for the connection. The default cipher preference list is now Chacha20/Poly1305, AES-GCM (128/256) followed by AES-CTR (128/192/256). * ssh(1): add %-token and environment variable expansion to the ssh_config SetEnv directive. * ssh(1): allow %-token and environment variable expansion in the ssh_config User directive, with the exception of %r and %C which would be self-referential. bz#3477 * ssh(1), sshd(8): add "Match version" support to ssh_config and sshd_config. Allows matching on the local version of OpenSSH, e.g. "Match version OpenSSH_10.*". * ssh(1): add support for "Match sessiontype" to ssh_config. Allows matching on the type of session initially requested, either "shell" for interactive sessions, "exec" for command execution sessions, "subsystem" for subsystem requests, such as sftp, or "none" for transport/forwarding-only sessions. * ssh(1): add support for "Match command ..." support to ssh_config, allowing matching on the remote command as specified on the command-line. * ssh(1): allow 'Match tagged ""' and 'Match command ""' to match empty tag and command values respectively. * sshd(8): allow glob(3) patterns to be used in sshd_config AuthorizedKeysFile and AuthorizedPrincipalsFile directives. bz2755 * sshd(1): support the VersionAddendum in the client, mirroring the option of the same name in the server; bz2745 * ssh-agent(1): the agent will now delete all loaded keys when signaled with SIGUSR1. This allows deletion of keys without having access to $SSH_AUTH_SOCK. * Portable OpenSSH, ssh-agent(1): support systemd-style socket activation in ssh-agent using the LISTEN_PID/LISTEN_FDS mechanism. Activated when these environment variables are set, the agent is started with the -d or -D option and no socket path is set. GHPR502 * ssh-keygen(1): support FIDO tokens that return no attestation data, e.g. recent WinHello. GHPR542 * ssh-agent(1): add a "-Owebsafe-allow=..." option to allow the default FIDO application ID allow-list to be overridden. * Add a work-in-progress tool to verify FIDO attestation blobs that ssh-keygen can optionally write when enrolling FIDO keys. This tool is available under regress/misc/ssh-verify-attestation for experimentation but is not installed by "make install". * ssh-keygen(1): allow "-" as output file for moduli screening. GHPR393 Bugfixes -------- * sshd(8): remove assumption that the sshd_config and any configs it includes can fit in a (possibly enlarged) socket buffer. Previously it was possible to create a sufficiently large configuration that could cause sshd to fail to accept any connection. sshd(8) will now actively manage sending its config to the sshd-session sub-process. * ssh(1): don't start the ObscureKeystrokeTiming mitigations if there has been traffic on a X11 forwarding channel recently. Should fix X11 forwarding performance problems when this setting is enabled. bz3655 * ssh(1): prohibit the comma character in hostnames accepted, but allow an underscore as the first character in a hostname. * sftp(1): set high-water when resuming a "put". Prevents bogus "server reordered acks" debug message. * ssh(1), sshd(8): fix regression in openssh-9.8, which would fail to accept "Match criteria=argument" as well as the documented "Match criteria argument" syntax in ssh_config and sshd_config. bz3739 * scp(1), sftp(1): pass "ControlMaster no" to ssh when invoked by scp &amp; sftp. This disables implicit session creation by these tools when ControlMaster was set to yes/auto by configuration, which some users found surprising. This change will not prevent scp/sftp from using an existing multiplexing session if one had already been created. GHPR557 * sftp(1), ssh(1): fix a number possible NULL dereference bugs, including Coverity CIDs 405019 and 477813. * sshd(8): fix PerSourcePenalty incorrectly using "crash" penalty when LoginGraceTime was exceeded. bz3797 * sshd(8): fix "Match invalid-user" from incorrectly being activated in initial configuration pass when no other predicates were present on the match line * sshd(8): fix debug logging of user specific delay. GHPR#552 * sshd(8): improve debug logging across sub-process boundaries. Previously some log messages were lost early in the sshd-auth and sshd-session processes' life. * ssh(1): require control-escape character sequences passed via the '-e ^x' command-line to be exactly two characters long. Avoids one byte out-of-bounds read if ssh is invoked as "ssh -e^ ..." GHPR368 * ssh(1), sshd(8): prevent integer overflow in x11 port handling. These are theoretically possible if the admin misconfigured X11DisplayOffset or the user misconfigures their own $DISPLAY, but don't happen in normal operation. bz#3730 * ssh-keygen(1): don't mess up ssh-keygen -l output when the file contains CR characters; GHPR236 bz3385. * sshd(8): add rate limits to logging of connections dropped by PerSourcePenalties. Previously these could be noisy in logs. * ssh(1): fix argument of "Compression" directive in ssh -G config dump, which regressed in openssh-9.8. * sshd(8): fix a corner-case triggered by UpdateHostKeys when sshd refuses to accept the signature returned by an agent holding host keys during the hostkey rotation sub-protocol. This situation could occur in situations where a PKCS#11 smartcard that lacked support for particular signature algorithms was used to store host keys. * ssh-keygen(1): when using RSA keys to sign messages with "ssh-keygen -Y", select the signature algorithm based on the requested hash algorithm ("-Ohashalg=xxx"). This allows using something other than the default of rsa-sha2-512, which may not be supported on all signing backends, e.g. some smartcards only support SHA256. * ssh(1), sshd(8), ssh-keyscan(1): fix ML-KEM768x25519 KEX on big-endian systems. * Many regression and interop test improvements. Portability ----------- * All: add support for AWS-LC (AWS libcrypto). bz3784 * sshd(8): add wtmpdb support as a Y2038 safe wtmp replacement. * sshd(8): add support for locking sshd into memory, enabled with the --with-linux-memlock-onfault configure flag. * Add support for building a standalone sk-libfido2 library, enabled by --with-security-key-standalone * ssh(1), sshd(8), ssh-keyscan(1): include __builtin_popcount replacement function. for compilers that lack it. * All: Check for and replace le32toh, le64toh, htole64 separately. It appears that at least some versions of endian.h in glibc do not have the latter two. bz#3794 * Remove ancient RHL 6.x config in RPM spec. OpenSSH is brought to you by Markus Friedl, Niels Provos, Theo de Raadt, Kevin Steves, Damien Miller, Darren Tucker, Jason McIntyre, Tim Rice and Ben Lindstrom. -- Darren Tucker (dtucker at dtucker.net) GPG key 11EAA6FA / A86E 3E07 5B19 5880 E860 37F4 9357 ECEF 11EA A6FA Good judgement comes with experience. Unfortunately, the experience usually comes from bad judgement. </pre> <hr> <ul> <li>Next message (by thread): <a href="https://lists.mindrot.org041856.html">Call for testing: OpenSSH 10.0 </a></li> <li> <b>Messages sorted by:</b> <a href="https://lists.mindrot.orgdate.html#41855">[ date ]</a> <a href="https://lists.mindrot.orgthread.html#41855">[ thread ]</a> <a href="https://lists.mindrot.orgsubject.html#41855">[ subject ]</a> <a href="https://lists.mindrot.orgauthor.html#41855">[ author ]</a> </li> </ul> <hr> <a href="https://lists.mindrot.org/mailman/listinfo/openssh-unix-dev">More information about the openssh-unix-dev mailing list</a><br> </div></section>]]></description><pubDate>Wed, 02 Apr 2025 08:21:40 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1jp8ika/any_other_fans_of_csh1_here/</link><title>Any other fans of csh(1) here?</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1jp8ika/any_other_fans_of_csh1_here/</guid><comments>https://www.reddit.com/r/unix/comments/1jp8ika/any_other_fans_of_csh1_here/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 2 min | <a href='https://www.reddit.com/r/unix/comments/1jp8ika/any_other_fans_of_csh1_here/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>I can&#39;t get enough of this little lang. I think because it has so many quirks -- though learnable -- that I&#39;ve come to love it, really. But aside from the masaochism, the reason I love it is how lean-featured it is.</p><p>It is full-stop crazy, though. Just this week I learned:</p><pre><code># assigns a word-list (array) that you can iterate overset u = `run_something arg1 arg2`# assigns a line-list (array) that you can iterate overset u = &quot;`run_something arg1 arg2`&quot;</code></pre><p>In the second example, the elements in the array are broken up via linebreaks (if any).</p><p>Also, in scripts, if a one-liner needs a bang in it, you have to DOUBLE escape it:</p><pre><code>set u = &quot;`ed -s \\!&#39;run_something arg1 arg2&#39; &lt; cmds.ed`&quot;</code></pre><p>Of course, if I had a deadline, using csh(1) would get me fired. But, every time I reach for csh(1), it <em>will</em> be code golfing against your prior knowledge-base. So, it&#39;s like playing a fun game, really: learn the derp that is csh(1).</p><p>There&#39;s a ton of problems with csh(1). King of which, would have to be the parser. I almost feel that if this was fixed -- with no other features added a la tcsh -- then it wouldn&#39;t be as hated as it is.</p><p>OK. So, any haters of csh(1) here? Ha.</p></div><!-- SC_ON --></section>]]></description><pubDate>Wed, 02 Apr 2025 03:45:13 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1jorsj7/origin_of_write_programs_that_do_one_thing_and_do/</link><title>Origin of "Write programs that do one thing and do it well."</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1jorsj7/origin_of_write_programs_that_do_one_thing_and_do/</guid><comments>https://www.reddit.com/r/unix/comments/1jorsj7/origin_of_write_programs_that_do_one_thing_and_do/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1jorsj7/origin_of_write_programs_that_do_one_thing_and_do/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>I&#39;m trying to find a primary source of someone saying &quot;Write programs that do one thing and do it well.&quot; or a primary source of another quote from a famous computer scientist that summarises the idea of the Unix Philosophy. Does anyone know where these quotes would originate from?</p></div><!-- SC_ON --></section>]]></description><pubDate>Tue, 01 Apr 2025 15:23:26 +0530</pubDate></item><item><link>https://i.redd.it/jgpodfi79vre1.jpeg</link><title>NEW Unix-Like Uinxed-Kernel! (i.redd.it)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1jnibnz/new_unixlike_uinxedkernel/</guid><comments>https://www.reddit.com/r/unix/comments/1jnibnz/new_unixlike_uinxedkernel/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1jnibnz/new_unixlike_uinxedkernel/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>The project is open-sourced under GPLv3 at the following link: <a href="https://github.com/FengHeting/Uinxed-x86_64/">Uinxed-Kernel Github</a></p><p>As the title suggests, my friends and I have developed a brand-new 64-bit kernel! It supports dual booting with UEFI/Legacy, and also supports ACPI, APIC, HPET, SMBIOS, memory management (page tables, memory heaps, virtual memory), etc. Moreover, it can read from and write to IDE hard drives and optical drives. We are currently working on writing AHCI/SATA drivers, and we have already been able to recognize SATA hard drives and optical drives. The kernel will support the POSIX protocol in the future. We will also support SMP (Symmetric Multi-Processing) and multitasking round-robin scheduling. Additionally, we will submit a completed vfs (Virtual File System) and fatfs (including FAT12, FAT16, FAT32, exFAT, etc.) file systems, with the principle of &quot;everything is a file.&quot;</p></div><!-- SC_ON --></section><section class='preview-image'><p>&nbsp;</p><img src='https://i.redd.it/jgpodfi79vre1.jpeg' /></section>]]></description><pubDate>Sun, 30 Mar 2025 23:30:03 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1jmrgf9/using_asynchronous_networking_and_synchronous/</link><title>Using asynchronous networking and synchronous file handling in a server</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1jmrgf9/using_asynchronous_networking_and_synchronous/</guid><comments>https://www.reddit.com/r/unix/comments/1jmrgf9/using_asynchronous_networking_and_synchronous/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1jmrgf9/using_asynchronous_networking_and_synchronous/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>The middle tier of my SaaS uses io-uring to handle network io asynchronously. Most of the file io is done synchronously.   Is anyone else doing something similar? I&#39;d be interested in seeing other programs that do this, especially those that are using io-uring. I&#39;m happy to share a link to my middle tier if you are interested in it. </p><p>My architecture is different from some 3-tier systems.  In a lot of cases, the service provider runs 2 of the 3 tiers on their systems.  In my case, the user runs 2 of the 3 tiers (middle and front) on their machines.  Thanks</p></div><!-- SC_ON --></section>]]></description><pubDate>Sat, 29 Mar 2025 22:58:53 +0530</pubDate></item><item><link>https://i.redd.it/13l3syf189re1.gif</link><title>'make help' simple one-liner to add nicely formatted help to your makefiles (i.redd.it)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1jlwjfi/make_help_simple_oneliner_to_add_nicely_formatted/</guid><comments>https://www.reddit.com/r/unix/comments/1jlwjfi/make_help_simple_oneliner_to_add_nicely_formatted/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p><a href='https://www.reddit.com/r/unix/comments/1jlwjfi/make_help_simple_oneliner_to_add_nicely_formatted/'>Post permalink</a></p></section><section class='preview-image'><img src='https://i.redd.it/13l3syf189re1.gif' /></section>]]></description><pubDate>Fri, 28 Mar 2025 20:06:39 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1jjobis/til_the_bourne_shell_uses_a_very_weird/</link><title>TIL the Bourne Shell uses a very weird programming style</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1jjobis/til_the_bourne_shell_uses_a_very_weird/</guid><comments>https://www.reddit.com/r/unix/comments/1jjobis/til_the_bourne_shell_uses_a_very_weird/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1jjobis/til_the_bourne_shell_uses_a_very_weird/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p><a href="https://i.imgur.com/6gvscMy.png">https://i.imgur.com/6gvscMy.png</a></p><p>I was browsing the old Unix code and was really surprised to see what the Bourne shell source looks like. It uses <em>so</em> many macros it doesn&#39;t look anything like C -- all the standard keywords and braces are gone, and is made to look like pseudo-shell code, but with the keywords in caps so it kind of looks like BASIC.</p><p>It stands out especially because of the rest of the Unix source code is very regular C.</p><p>I dug a bit deeper and saw that this was still used in this format in BSD releases right through 4.3BSD (it was rewritten as with all the original Unix code after that).</p><p>Here&#39;s a browsable version of the code from V7:</p><p><a href="https://www.tuhs.org/cgi-bin/utree.pl?file=V7/usr/src/cmd/sh">https://www.tuhs.org/cgi-bin/utree.pl?file=V7/usr/src/cmd/sh</a></p></div><!-- SC_ON --></section>]]></description><pubDate>Tue, 25 Mar 2025 22:32:17 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1jiq3qu/incoming_mail_at_sdf/</link><title>Incoming mail at sdf...</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1jiq3qu/incoming_mail_at_sdf/</guid><comments>https://www.reddit.com/r/unix/comments/1jiq3qu/incoming_mail_at_sdf/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p><a href='https://www.reddit.com/r/unix/comments/1jiq3qu/incoming_mail_at_sdf/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>anyone experiencing incoming mail matters? </p><p>Outgoing ones seems fine...</p></div><!-- SC_ON --></section>]]></description><pubDate>Mon, 24 Mar 2025 18:31:36 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1ji2nha/is_solaris_still_feasible_to_this_day_outdated/</link><title>is Solaris still feasible to this day? (outdated gui help)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1ji2nha/is_solaris_still_feasible_to_this_day_outdated/</guid><comments>https://www.reddit.com/r/unix/comments/1ji2nha/is_solaris_still_feasible_to_this_day_outdated/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1ji2nha/is_solaris_still_feasible_to_this_day_outdated/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>I recently revisited Solaris on my laptop for testing purposes. After installing the OS and subsequently setting up the GUI, I was surprised to find that the GNOME desktop environment, along with the FireFox browser, was significantly outdated, along with pretty much every known app... the whole thing looked like it was stuck in 2010 or something... did i forget something here or is that just how it is? i also was baffled as well, that it couldn&#39;t detect my wifi card, yet Linux can however...  so i had to use ethernet for the time being to get whatever updates she has.</p><p>Did I overlook something during the installation process? Is there a recommended way to install a more modern GUI with up-to-date applications on <strong>Solaris 11.4 x64</strong>? Any insights would be appreciated.</p><p>Cheers!</p></div><!-- SC_ON --></section>]]></description><pubDate>Sun, 23 Mar 2025 21:35:20 +0530</pubDate></item><item><link>https://vcfed.org/2025/03/19/brian-kernighan-coming-to-vcf-east-2025/</link><title>Brian Kernighan will be discussing his books UNIX: A History and a Memoir at VCF East 2025 (vcfed.org)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1jgfpr2/brian_kernighan_will_be_discussing_his_books_unix/</guid><comments>https://www.reddit.com/r/unix/comments/1jgfpr2/brian_kernighan_will_be_discussing_his_books_unix/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 1 min | <a href='https://www.reddit.com/r/unix/comments/1jgfpr2/brian_kernighan_will_be_discussing_his_books_unix/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>He co-wrote the first book on C programming. He was involved with early development of UNIX including authoring UNIX program ditroff, co-authoring: AWK, AMPL. He will be talking about his 2019 book: UNIX: A History and a Memoir.</p></div><!-- SC_ON --></section>]]></description><pubDate>Fri, 21 Mar 2025 18:02:10 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1jfywv1/why_my_monitor_only_detects_windows_devices_on/</link><title>Why my monitor only detects Windows devices on Displayport</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1jfywv1/why_my_monitor_only_detects_windows_devices_on/</guid><comments>https://www.reddit.com/r/unix/comments/1jfywv1/why_my_monitor_only_detects_windows_devices_on/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 2 min | <a href='https://www.reddit.com/r/unix/comments/1jfywv1/why_my_monitor_only_detects_windows_devices_on/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>I got an shitty LC Power Monitor LC-M32-QHD-165-C-V2 which is connected to a Dell D6000 docking Station over Displayport whenever I connect my Windows Laptop over USB C with the Dock I got a Picture on the screen....</p><p>but whenever I try to connect my Macbook or Steamdeck to the Screen over the Dock I got no Picture on the Screen. </p><p>Im not sure if something on Linux &amp; or OSX is broken but 2 months ago I was able to Connect the Steamdeck over the same Setup and had a Picture on the screen </p><p>And since Windows Devices work im pretty sure the Monitor or the cables can&#39;t be the reason for this Problem. I also have resetted my screens settings and turned off evrey G Sync Options HDR and additional Features but im still not able to get an image with OSX, Steamdeck or Android</p><p>I also have updated the docks Firmware and try to figure out if I can update the monitors firmware since it has an USB Port for Service and a Softwareupdate point in the OSD but when I google for Firmwares I can&#39;t find anything</p><p>And even the second Screen which is connected over HDMI to the Dock always seems to work whit Steamdeck and Macbook but Im not even able to get any kind of Image when I connect the Main Monitor to the same HDMI Port on which I got an Image on the second screen</p><p>can someone explain or has an Idea what it possibly could be?</p><p>My assumption is that something on the UNIX Kernel side is broken with USB C to DP because even my Samsung doesn&#39;t  go to Dex anymore as soon as I connect it to the same setup which it did before....</p></div><!-- SC_ON --></section>]]></description><pubDate>Fri, 21 Mar 2025 02:05:31 +0530</pubDate></item><item><link>https://www.reddit.com/r/unix/comments/1jb3qtg/using_grep_sed_in_a_bash_script/</link><title>Using grep / sed in a bash script...</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1jb3qtg/using_grep_sed_in_a_bash_script/</guid><comments>https://www.reddit.com/r/unix/comments/1jb3qtg/using_grep_sed_in_a_bash_script/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 2 min | <a href='https://www.reddit.com/r/unix/comments/1jb3qtg/using_grep_sed_in_a_bash_script/'>Post permalink</a></p></section><section class='separator separator-after-permalink'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='selftext'><!-- SC_OFF --><div class="md"><p>Hello, I&#39;ve spent a lot more time than I&#39;d like to admit trying to figure out how to write this script. I&#39;ve looked through the official Bash docs and many online StackOverflow posts. I posted this to <a href="https://www.reddit.com/r/bash">r/bash</a> yesterday but it appears to have been removed.</p><p>This script is supposed to be run within a source tree. It is run at a selected directory, and recursively changes the the old directory to the new directory within the tree. For example, it would change every instance of <code>/lib/64</code> to <code>/lib64</code></p><p>The command is supposed to be invoked by doing something like <code>./replace.sh /lib/64 /lib64 ./.</code></p><pre><code>#!/bin/bashIN_DIR=$(sed -r &#39;s/\//\\\//g&#39; &lt;&lt;&lt; &quot;$1&quot;)OUT_DIR=$(sed -r &#39;s/\//\\\//g&#39; &lt;&lt;&lt; &quot;$2&quot;)SEARCH_PATH=$3echo &quot;$1 -&gt; $2&quot;# printout for testingecho &quot;grep -R -e &#39;&quot;${IN_DIR}&quot;&#39; $3 | xargs sed -i &#39;s/   &quot;${IN_DIR}&quot;   /   &quot;${OUT_DIR}&quot;   /g&#39; &quot;grep -R -e &#39;&quot;${IN_DIR}&quot;&#39; $3 | xargs sed -i &#39;s/&quot;${IN_DIR}&quot;/&quot;${OUT_DIR}&quot;/g&#39;</code></pre><p><code>IN_DIR</code> and <code>OUT_DIR</code> are taking the two directory arguments and using <code>sed</code> to insert a backslash before each forward slash.</p><p>No matter what I&#39;ve tried, this will not function correctly. The original file that I&#39;m using to test the functionality remains unchanged, despite being able to do the <code>grep ... | xargs sed ...</code> manually with success...</p><p>What am I doing wrong?</p><p>Many thanks</p></div><!-- SC_ON --></section>]]></description><pubDate>Fri, 14 Mar 2025 18:50:39 +0530</pubDate></item><item><link>https://akr.am/blog/posts/parsing-json-in-forty-lines-of-awk</link><title>Parsing JSON in Forty Lines of Awk (akr.am)</title><guid isPermaLink="true">https://www.reddit.com/r/unix/comments/1j73tka/parsing_json_in_forty_lines_of_awk/</guid><comments>https://www.reddit.com/r/unix/comments/1j73tka/parsing_json_in_forty_lines_of_awk/</comments><description><![CDATA[<section class='reading-time-and-permalink'><p>Reading time: 13 min | <a href='https://www.reddit.com/r/unix/comments/1j73tka/parsing_json_in_forty_lines_of_awk/'>Post permalink</a></p></section><section class='separator separator-before-parsed-content'><p>&nbsp;</p><hr><p>&nbsp;</p></section><section class='parsed-content'><div><p>JSON is not a friendly format to the Unix shell &mdash; it&rsquo;s hierarchical, and cannot be reasonably split on any character (other than the newline, which is not very useful) as that character might be included in a string. There are well-known tools such as <a href="https://jqlang.org">jq</a> that let you correctly parse JSON documents in the shell, but all require an additional dependency. Another option is to use Python, which is ubiquitous enough that it can be expected to be installed on virtually every machine, and for new projects would be the recommended option.</p><p>However, I already had a working POSIX shell script that now had a requirement to read and parse JSON. It had previously extracted values from HTML which, while also being hierarchical, can be reliably split on certain characters (the angle brackets) for basic extraction of values. awk is the closest thing to a real programming language that&rsquo;s available in the POSIX shell, so I thought I&rsquo;d try to write a basic JSON parser in it. I had already written a full-blown <a href="https://github.com/mohd-akram/jawk">one</a> before, so I knew it was doable, but I needed something more concise.</p><p>First, there are some caveats. JSON is <a href="https://seriot.ch/projects/parsing_json.html">notoriously tricky</a> to get completely right, despite its simple grammar. The following code assumes that it will be fed valid JSON. It has some basic validation as a function of the parsing and will most likely throw an error if it encounters something strange, but there are no guarantees beyond that. In my case, I&rsquo;m reading JSON from a single, trusted source, so this is an acceptable constraint.</p><p>The interface is simple, a single function that accepts a JSON document and a dotted path to a key or array index, and returns the corresponding value. It can be used like so:</p><div><pre><code><span># Get one value</span> <span>name</span> <span>=</span> <span>decode_json_string</span><span>(</span><span>get_json_value</span><span>(</span><span>json</span><span>,</span> <span>"author.name"</span><span>))</span> <span># Loop over an object</span> <span>get_json_value</span><span>(</span><span>json</span><span>,</span> <span>"dependencies"</span><span>,</span> <span>deps</span><span>)</span> <span>for</span> <span>(</span><span>name</span> <span>in</span> <span>deps</span><span>)</span> <span>version</span> <span>=</span> <span>decode_json_string</span><span>(</span><span>deps</span><span>[</span><span>name</span><span>])</span> <span># Loop over an array</span> <span>get_json_value</span><span>(</span><span>json</span><span>,</span> <span>"payload.items"</span><span>,</span> <span>items</span><span>)</span> <span>for</span> <span>(</span><span>i</span> <span>=</span> <span>;</span> <span>items</span><span>[</span><span>i</span><span>];</span> <span>i</span><span>++</span><span>)</span> <span>{</span> <span>get_json_value</span><span>(</span><span>items</span><span>[</span><span>i</span><span>],</span> <span>null</span><span>,</span> <span>item</span><span>)</span> <span>type</span> <span>=</span> <span>decode_json_string</span><span>(</span><span>item</span><span>[</span><span>"type"</span><span>])</span> <span>name</span> <span>=</span> <span>decode_json_string</span><span>(</span><span>item</span><span>[</span><span>"name"</span><span>])</span> <span>}</span> </code></pre></div><p>To keep things simple, the same function handles both arrays and objects. In JavaScript, arrays are roughly equivalent to objects with integer keys, and we use the same approach here. This is the <a href="https://gist.github.com/mohd-akram/1c0d4cb337b62e3cce0ab7e02e6281fd">implementation</a>, expanded and annotated:</p><div><pre><code><span># The function takes three parameters: the JSON object/array, the desired key,</span> <span># and an optional array to be filled if the key points to an object or array.</span> <span># The rest are local variables (awk only allows local variables in the form</span> <span># of function parameters)</span> <span>function</span> <span>get_json_value</span><span>(</span> <span>\</span> <span>s</span><span>,</span> <span>key</span><span>,</span> <span>a</span><span>,</span> <span>skip</span><span>,</span> <span>type</span><span>,</span> <span>all</span><span>,</span> <span>rest</span><span>,</span> <span>isval</span><span>,</span> <span>i</span><span>,</span> <span>c</span><span>,</span> <span>k</span><span>,</span> <span>null</span> <span>\</span> <span>)</span> <span>{</span> <span># Trim leading whitespace, if any</span> <span>if</span> <span>(</span><span>match</span><span>(</span><span>s</span><span>,</span> <span>/^</span><span>[</span><span>[:space:</span><span>]</span><span>]+/</span><span>))</span> <span>s</span> <span>=</span> <span>substr</span><span>(</span><span>s</span><span>,</span> <span>RLENGTH</span><span>+</span><span>1</span><span>)</span> <span># Get the type of value by its first character</span> <span>type</span> <span>=</span> <span>substr</span><span>(</span><span>s</span><span>,</span> <span>1</span><span>,</span> <span>1</span><span>)</span> <span># This variable is needed for when we recursively call the function</span> <span># It will be true if the key argument is undefined, since such</span> <span># variables can behave as either a string or a number in awk</span> <span>all</span> <span>=</span> <span>key</span> <span>==</span> <span>""</span> <span>&amp;&amp;</span> <span>key</span> <span>==</span> <span># If this is a primitive</span> <span>if</span> <span>(</span><span>type</span> <span>!=</span> <span>"{"</span> <span>&amp;&amp;</span> <span>type</span> <span>!=</span> <span>"["</span><span>)</span> <span>{</span> <span># Ensure a key is not passed</span> <span>if</span> <span>(</span><span>!</span><span>all</span><span>)</span> <span>error</span><span>(</span><span>"invalid json array/object "</span> <span>s</span><span>)</span> <span># Parse the value</span> <span>if</span> <span>(</span><span>!</span><span>match</span><span>(</span><span>s</span><span>,</span> <span>/^</span><span>(</span><span>null|true|false|"</span><span>(\\</span><span>.|</span><span>[^\\</span><span>"</span><span>])</span><span>*"|</span><span>[</span><span>.0-9Ee+-</span><span>]</span><span>+</span><span>)</span><span>/</span><span>))</span> <span>error</span><span>(</span><span>"invalid json value "</span> <span>s</span><span>)</span> <span># And return it</span> <span>return</span> <span>substr</span><span>(</span><span>s</span><span>,</span> <span>1</span><span>,</span> <span>RLENGTH</span><span>)</span> <span>}</span> <span># Get the first part of the key (which we will be looking for)</span> <span># if the path is dotted and save the rest for now</span> <span>if</span> <span>(</span><span>!</span><span>all</span> <span>&amp;&amp;</span> <span>(</span><span>i</span> <span>=</span> <span>index</span><span>(</span><span>key</span><span>,</span> <span>"."</span><span>)))</span> <span>{</span> <span>rest</span> <span>=</span> <span>substr</span><span>(</span><span>key</span><span>,</span> <span>i</span><span>+</span><span>1</span><span>)</span> <span>key</span> <span>=</span> <span>substr</span><span>(</span><span>key</span><span>,</span> <span>1</span><span>,</span> <span>i</span><span>-</span><span>1</span><span>)</span> <span>}</span> <span># isval keeps track of whether we are looking at a JSON key or value</span> <span># In an array, all items are values</span> <span># k is the current key</span> <span># If this is an array, it is the index, which starts at 0</span> <span>if</span> <span>((</span><span>isval</span> <span>=</span> <span>type</span> <span>==</span> <span>"["</span><span>))</span> <span>k</span> <span>=</span> <span># Loop over the characters in the provided JSON</span> <span># Skip the opening brace or bracket (to avoid infinite recursion) and</span> <span># increment the index by the length of the token</span> <span>for</span> <span>(</span><span>i</span> <span>=</span> <span>2</span><span>;</span> <span>i</span> <span>&lt;=</span> <span>length</span><span>(</span><span>s</span><span>);</span> <span>i</span> <span>+=</span> <span>length</span><span>(</span><span>c</span><span>))</span> <span>{</span> <span># Skip over whitespace</span> <span>if</span> <span>(</span><span>match</span><span>(</span><span>substr</span><span>(</span><span>s</span><span>,</span> <span>i</span><span>),</span> <span>/^</span><span>[</span><span>[:space:</span><span>]</span><span>]+/</span><span>))</span> <span>{</span> <span>c</span> <span>=</span> <span>substr</span><span>(</span><span>s</span><span>,</span> <span>i</span><span>,</span> <span>RLENGTH</span><span>)</span> <span>continue</span> <span>}</span> <span># Temporarily assign the first character to our token variable</span> <span>c</span> <span>=</span> <span>substr</span><span>(</span><span>s</span><span>,</span> <span>i</span><span>,</span> <span>1</span><span>)</span> <span># If it's a closing brace or bracket, we've reached the end of</span> <span># the object or array, so exit the loop</span> <span>if</span> <span>(</span><span>c</span> <span>==</span> <span>"}"</span> <span>||</span> <span>c</span> <span>==</span> <span>"]"</span><span>)</span> <span>break</span> <span># If we find a comma in an object, the next item will be a key,</span> <span># so reset isval. If it's an array, increment the index</span> <span>else</span> <span>if</span> <span>(</span><span>c</span> <span>==</span> <span>","</span><span>)</span> <span>{</span> <span>if</span> <span>((</span><span>isval</span> <span>=</span> <span>type</span> <span>==</span> <span>"["</span><span>))</span> <span>++</span><span>k</span> <span>}</span> <span># If we see a colon, the next token will be a value</span> <span>else</span> <span>if</span> <span>(</span><span>c</span> <span>==</span> <span>":"</span><span>)</span> <span>isval</span> <span>=</span> <span>1</span> <span># Otherwise, we expect a JSON value</span> <span>else</span> <span>{</span> <span># If the key matches, this is our desired value,</span> <span># so pass the rest of the key and return the result</span> <span>if</span> <span>(</span><span>!</span><span>all</span> <span>&amp;&amp;</span> <span>k</span> <span>==</span> <span>key</span> <span>&amp;&amp;</span> <span>isval</span><span>)</span> <span>return</span> <span>get_json_value</span><span>(</span><span>substr</span><span>(</span><span>s</span><span>,</span> <span>i</span><span>),</span> <span>rest</span><span>,</span> <span>a</span><span>)</span> <span># Otherwise, get the full value</span> <span>c</span> <span>=</span> <span>get_json_value</span><span>(</span><span>substr</span><span>(</span><span>s</span><span>,</span> <span>i</span><span>),</span> <span>null</span><span>,</span> <span>null</span><span>,</span> <span>1</span><span>)</span> <span># And add it to the associative array</span> <span>if</span> <span>(</span><span>all</span> <span>&amp;&amp;</span> <span>!</span><span>skip</span> <span>&amp;&amp;</span> <span>isval</span><span>)</span> <span>a</span><span>[</span><span>k</span><span>]</span> <span>=</span> <span>c</span> <span># If this is a string and we're not expecting a value,</span> <span># then it's a key, so trim the quotes and save it</span> <span>if</span> <span>(</span><span>c</span> <span>~</span> <span>/^"/</span> <span>&amp;&amp;</span> <span>!</span><span>isval</span><span>)</span> <span>k</span> <span>=</span> <span>substr</span><span>(</span><span>c</span><span>,</span> <span>2</span><span>,</span> <span>length</span><span>(</span><span>c</span><span>)</span><span>-</span><span>2</span><span>)</span> <span>}</span> <span>}</span> <span># Do a basic check that the object or array was properly closed</span> <span>if</span> <span>((</span><span>type</span> <span>==</span> <span>"{"</span> <span>&amp;&amp;</span> <span>c</span> <span>!=</span> <span>"}"</span><span>)</span> <span>||</span> <span>(</span><span>type</span> <span>==</span> <span>"["</span> <span>&amp;&amp;</span> <span>c</span> <span>!=</span> <span>"]"</span><span>))</span> <span>error</span><span>(</span><span>"unterminated json array/object "</span> <span>s</span><span>)</span> <span># If we're here, it means we didn't find the value we're looking for</span> <span># so only return something if the whole array or object was requested</span> <span>if</span> <span>(</span><span>all</span><span>)</span> <span>return</span> <span>substr</span><span>(</span><span>s</span><span>,</span> <span>1</span><span>,</span> <span>i</span><span>)</span> <span>}</span> </code></pre></div><p>To make the parser more useful, you&rsquo;ll also need a function to do some decoding of JSON strings. This is a simple one, which handles everything except Unicode escape sequences, but throws an error if it encounters one:</p><div><pre><code><span>function</span> <span>decode_json_string</span><span>(</span><span>s</span><span>,</span> <span>out</span><span>,</span> <span>esc</span><span>)</span> <span>{</span> <span>if</span> <span>(</span><span>s</span> <span>!~</span> <span>/^"./</span> <span>||</span> <span>substr</span><span>(</span><span>s</span><span>,</span> <span>length</span><span>(</span><span>s</span><span>),</span> <span>1</span><span>)</span> <span>!=</span> <span>"\""</span><span>)</span> <span>error</span><span>(</span><span>"invalid json string "</span> <span>s</span><span>)</span> <span>s</span> <span>=</span> <span>substr</span><span>(</span><span>s</span><span>,</span> <span>2</span><span>,</span> <span>length</span><span>(</span><span>s</span><span>)</span><span>-</span><span>2</span><span>)</span> <span>esc</span><span>[</span><span>"b"</span><span>]</span> <span>=</span> <span>"\b"</span><span>;</span> <span>esc</span><span>[</span><span>"f"</span><span>]</span> <span>=</span> <span>"\f"</span><span>;</span> <span>esc</span><span>[</span><span>"n"</span><span>]</span> <span>=</span> <span>"\n"</span><span>;</span> <span>esc</span><span>[</span><span>"\""</span><span>]</span> <span>=</span> <span>"\""</span> <span>esc</span><span>[</span><span>"r"</span><span>]</span> <span>=</span> <span>"\r"</span><span>;</span> <span>esc</span><span>[</span><span>"t"</span><span>]</span> <span>=</span> <span>"\t"</span><span>;</span> <span>esc</span><span>[</span><span>"/"</span><span>]</span> <span>=</span> <span>"/"</span> <span>;</span> <span>esc</span><span>[</span><span>"\\"</span><span>]</span> <span>=</span> <span>"\\"</span> <span>while</span> <span>(</span><span>match</span><span>(</span><span>s</span><span>,</span> <span>/</span><span>\\</span><span>/</span><span>))</span> <span>{</span> <span>if</span> <span>(</span><span>!</span><span>(</span><span>substr</span><span>(</span><span>s</span><span>,</span> <span>RSTART</span><span>+</span><span>1</span><span>,</span> <span>1</span><span>)</span> <span>in</span> <span>esc</span><span>))</span> <span>error</span><span>(</span><span>"unknown json escape "</span> <span>substr</span><span>(</span><span>s</span><span>,</span> <span>RSTART</span><span>,</span> <span>2</span><span>))</span> <span>out</span> <span>=</span> <span>out</span> <span>substr</span><span>(</span><span>s</span><span>,</span> <span>1</span><span>,</span> <span>RSTART</span><span>-</span><span>1</span><span>)</span> <span>esc</span><span>[</span><span>substr</span><span>(</span><span>s</span><span>,</span> <span>RSTART</span><span>+</span><span>1</span><span>,</span> <span>1</span><span>)]</span> <span>s</span> <span>=</span> <span>substr</span><span>(</span><span>s</span><span>,</span> <span>RSTART</span><span>+</span><span>2</span><span>)</span> <span>}</span> <span>return</span> <span>out</span> <span>s</span> <span>}</span> </code></pre></div><p>And finally, since there is no built-in error function in awk, you can use something like this:</p><div><pre><code><span>function</span> <span>error</span><span>(</span><span>msg</span><span>)</span> <span>{</span> <span>printf</span> <span>"%s: %s\n"</span><span>,</span> <span>ARGV</span><span>[</span><span>],</span> <span>msg</span> <span>&gt;</span> <span>"/dev/stderr"</span> <span>exit</span> <span>1</span> <span>}</span> </code></pre></div></div></section>]]></description><pubDate>Sun, 09 Mar 2025 14:41:29 +0530</pubDate></item></channel></rss>
